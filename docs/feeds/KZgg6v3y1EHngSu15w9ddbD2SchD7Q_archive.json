{"id":"KZgg6v3y1EHngSu15w9ddbD2SchD7Q","title":"Dev News - Last 2 days","displayTitle":"Dev News - Last 2 days","url":"","feedLink":"","items":[{"title":"Solaar is a Linux manager for many Logitech keyboards, mice, and other devices","url":"https://github.com/pwr-Solaar/Solaar","date":1734551878,"author":"teekert","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/pwr-Solaar/Solaar\">https://github.com/pwr-Solaar/Solaar</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42454359\">https://news.ycombinator.com/item?id=42454359</a></p>\n<p>Points: 654</p>\n<p># Comments: 252</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: K8s Cleaner – Roomba for Kubernetes","url":"https://sveltos.projectsveltos.io/k8sCleaner.html","date":1734553661,"author":"pescerosso","unread":true,"desc":"","content":"\n<p>Hello HN community!<p>I'm excited to share K8s Cleaner, a tool designed to help you clean up your Kubernetes clusters.<p>As Kubernetes environments grow, they often accumulate unused resources, leading to confusion, waste, and clutter. K8s-cleaner simplifies the process of identifying and removing unnecessary components.<p>The tool scans your Kubernetes clusters for unused or orphaned resources—including pods, services, ingresses, and secrets—and removes them safely. You can fully customize which resources to scan and delete, maintaining complete control over what stays and what goes.<p>Getting Started:<p>Visit <a href=\"https://sveltos.projectsveltos.io/k8sCleaner.html\" rel=\"nofollow\">https://sveltos.projectsveltos.io/k8sCleaner.html</a> and click the \"Getting Started\" button to try K8s-cleaner.<p>Key Features:<p>- Easy to Use: No complex setup or configuration required—perfect for developers and operators alike\n- Open Source: Modify the code to better fit your specific needs\n- Community Driven: We welcome your feedback, feature ideas, and bug reports to help improve K8s-cleaner for everyone<p>I'm here to answer questions, address feedback, and discuss ideas for future improvements.<p>Looking forward to your thoughts! And make sure your all you kubernetes clusters are sparkling clean for the holidays. :-)<p>Simone</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42454723\">https://news.ycombinator.com/item?id=42454723</a></p>\n<p>Points: 67</p>\n<p># Comments: 55</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Postgres as a VectorDB GUI","url":"https://github.com/Z-Gort/Reservoirs-Lab","date":1734575316,"author":"z-gort","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/Z-Gort/Reservoirs-Lab\">https://github.com/Z-Gort/Reservoirs-Lab</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42457782\">https://news.ycombinator.com/item?id=42457782</a></p>\n<p>Points: 154</p>\n<p># Comments: 22</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Cloud Native Live: Enabling self-service for developers using K8s operators","url":"https://www.youtube.com/watch?v=sLcekxuKdgQ","date":1734588656,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon North America in Salt Lake City from November 12 - 15, 2024. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io","flags":null,"enclosureUrl":"https://www.youtube.com/v/sLcekxuKdgQ?version=3","enclosureMime":""},{"title":"When precision equals recall","url":"https://www.youtube.com/watch?v=Zn2xrf4ijSY","date":1734589818,"author":"probabl","unread":true,"desc":"","content":"Precision can actually be equal to recall. For balanced datasets it can even be pretty common! But understanding when this happens may also help you understand both metrics a bit more. \n\n00:00 Introduction \n00:32 Experiment setup \n03:45 Code\n06:45 Why? \n09:30 Math proof via sympy\n\nAppendix with notebooks:\nhttps://github.com/probabl-ai/youtube-appendix/tree/main/16-metrics\n\nWebsite: https://probabl.ai/\nLinkedIn: https://www.linkedin.com/company/probabl\nBluesky: https://bsky.app/profile/probabl.bsky.social\nTwitter: https://x.com/probabl_ai\nDiscord: https://discord.probabl.ai\n\nWe also host a podcast called Sample Space, which you can find on your favourite podcast player. All the links can be found here:\nhttps://rss.com/podcasts/sample-space/\n\n#probabl","flags":null,"enclosureUrl":"https://www.youtube.com/v/Zn2xrf4ijSY?version=3","enclosureMime":""},{"title":"io_uring: Linux’s Asynchronous I/O Framework","url":"https://medium.com/@kyodo-tech/io-uring-linuxs-asynchronous-i-o-framework-047d5b1a9944?source=rss-ac02ab142942------2","date":1734609750,"author":"Kyodo Tech","unread":true,"desc":"","content":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*R8j0RiS52KuHTW4ilSt2QQ.png\" /></figure><p>Disparity between compute speed and I/O throughput is one of the defining challenges in modern system design. While CPUs continue to accelerate, I/O operations remain bottlenecked by system call overhead, memory copy inefficiencies, and latency introduced by traditional synchronous models. For high-performance computing workloads, storage systems, and networking, this gap directly impacts scalability.</p><p>io_uring, introduced in Linux Kernel 5.1 by Jens Axboe, modernizes asynchronous I/O by eliminating unnecessary context switches, batching system calls, and enabling zero-copy operations between kernel and user space. Unlike its predecessors (epoll, linux-aio), io_uring achieves true zero-copy I/O between kernel and user space. This design is highly scalable, capable of handling millions of I/O operations per second while keeping CPU overhead minimal.</p><p>This article provides an exploration of io_uring, covering its architecture, core principles and practical usage.</p><h3>Who Should Use io_uring?</h3><p>io_uring is ideal for developers and engineers building applications requiring high-throughput, low-latency I/O. Its key beneficiaries include:</p><ul><li><strong>High-performance storage systems</strong>: Databases, filesystems, and analytics engines processing massive I/O workloads.</li><li><strong>Networking applications</strong>: Systems requiring low-latency and high-throughput socket I/O.</li><li><strong>High-performance computing (HPC)</strong>: Compute-intensive tasks requiring data pipelines optimized for minimal I/O stalls.</li><li><strong>Event-driven architectures</strong>: Software looking to unify I/O without thread pools or polling bottlenecks.</li></ul><p>In essence, any application where system call overhead, memory inefficiency, or scalability issues limit performance can benefit from io_uring.</p><h3>Context: Limitations of Existing I/O Models</h3><p>The foundational Linux I/O system calls — read, write, and their variants—are synchronous. They block execution until data is transferred, introducing latency and hindering concurrency in high-throughput applications. To achieve concurrency, applications often rely on thread pools or user-space scheduling, both of which come with their own complexities and inefficiencies.</p><p>Interfaces like select, poll, and epoll monitor file descriptors for readiness, allowing non-blocking operation on sockets. However, these interfaces do not work efficiently for file-based I/O and require additional system calls for data transfer.</p><p>Linux AIO (linux-aio) offered an asynchronous interface but suffered from several limitations:</p><ul><li>It supported only unbuffered (O_DIRECT) files, making it unsuitable for general-purpose applications.</li><li>Submissions could still block when accessing file metadata.</li><li>It lacked extensibility and struggled to integrate modern requirements like low-latency networking.</li></ul><h4>BSD and macOS I/O Models</h4><p>FreeBSD, by contrast, has <strong>kqueue</strong>, which provides an event notification mechanism for both sockets and files. macOS uses a similar interface since kqueue originated in BSD. While powerful, these interfaces still rely on readiness checks and require additional system calls to process I/O.</p><p>While OpenBSD enhances kqueue for predictability and reliability, its limitations persist. In contrast, io_uring reduces system call overhead and improves scalability, making it better suited for high-throughput workloads.</p><h4>Windows’ IOCP and Asynchronous Roots</h4><ul><li><strong>IOCP</strong> (I/O Completion Ports): Windows’ asynchronous I/O mechanism predates Linux solutions by decades. It delivers performance but lacks batching and zero-copy operations.</li><li><strong>I/O Rings</strong>: Recent Windows kernels now introduce IORING for improved capabilities, though they remain in early stages relative to io_uring.</li></ul><p>Unix systems historically avoided asynchronous I/O due to perceived complexity. Systems like VMS implemented efficient I/O decades earlier, influencing Windows NT’s IOCP. Legal concerns between Microsoft and DEC further stalled Unix advancements.</p><h3>Design: Ring Buffers and System Calls</h3><p>At its core, io_uring uses <strong>two shared-memory ring buffers</strong> to eliminate repeated syscalls:</p><ol><li><strong>Submission Queue (SQ)</strong>: User-space enqueues I/O requests.</li><li><strong>Completion Queue (CQ)</strong>: Kernel posts I/O completion results.</li></ol><p>Unlike epoll, where event readiness still requires polling, io_uring enables direct notification and retrieval through memory-mapped rings.</p><h4>Submission Queue (SQ)</h4><p>The SQ contains indices referencing <strong>Submission Queue Entries (SQEs)</strong>, which describe the I/O requests. Each SQE specifies the operation type, file descriptor, buffer, and other parameters. After filling in an SQE, the application pushes its index to the SQ ring, notifying the kernel to process it.</p><h4>Completion Queue (CQ)</h4><p>Once the kernel completes an I/O operation, it places the result in the CQ. The application consumes the results by reading from the CQ ring without making an additional system call.</p><p>By decoupling submission and completion, io_uring achieves asynchronous operation without blocking the application thread.</p><p>io_uring relies on a minimal set of system calls:</p><ul><li><strong>io_uring_setup</strong>: Initializes the io_uring instance.</li><li><strong>io_uring_enter</strong>: Submits SQEs to the kernel and optionally waits for completions.</li><li><strong>io_uring_register</strong>: Registers buffers, file descriptors, and other resources for efficient reuse.</li></ul><h3>Practical Usage of io_uring</h3><p>For higher-level languages like <strong>Go</strong>, accessing io_uring typically involves libraries or bindings that wrap the underlying C interface.</p><h4>Steps to Use io_uring</h4><ol><li><strong>Initialization</strong>: The application sets up the io_uring instance, mapping the SQ, CQ, and SQE array into user-space memory.</li><li><strong>Batch Submission</strong>: I/O requests are added to the SQE array and indexed in the SQ ring.</li><li><strong>Kernel Notification</strong>: A call to io_uring_enter submits the queued requests.</li><li><strong>Completion Handling</strong>: The application polls the CQ ring for results and processes completed operations.</li></ol><p>Using io_uring removes the need for thread pools, readiness checks, and blocking system calls, making it a natural fit for event-loop architectures. Advanced io_uring features further enhance performance and flexibility:</p><ul><li><strong>Fixed Buffers and Files</strong>: Pre-register buffers to reduce mapping overhead.</li><li><strong>Linked Operations</strong>: Chain SQEs with IOSQE_IO_LINK for atomic, dependent tasks.</li><li><strong>Timeout Support</strong>: Manage operation expirations via IORING_OP_TIMEOUT.</li></ul><h3>io_uring and High-Performance Computing (HPC)</h3><p>In HPC environments, where <a href=\"https://medium.com/@kyodo-tech/6ec8340c38e9\"><strong>I/O performance directly affects overall throughput</strong></a> , io_uring offers several critical benefits:</p><ul><li><strong>Reduced Data Motion</strong>: Zero-copy operations minimize CPU involvement in memory transfers, improving energy efficiency and bandwidth utilization.</li><li><strong>Batch Submission</strong>: I/O requests are submitted in batches, reducing kernel-user transitions.</li><li><strong>Polling for Ultra-Low Latency</strong>: Kernel-side polling (SQPOLL) eliminates interrupt delays for storage and networking devices.</li><li><strong>Low-Latency File and Socket I/O</strong>: For HPC tasks involving storage access (e.g., checkpointing, data persistence) or real-time networking, io_uring’s batched submission and completion handling reduce syscall-induced latency.</li><li><strong>High IOPS Scalability</strong>: io_uring efficiently handles millions of I/O operations per second, scaling well on multi-core processors.</li></ul><p>These features allow HPC systems to bridge the gap between CPU performance and I/O bandwidth.</p><h3>Performance Considerations</h3><p>Benchmarking io_uring reveals measurable improvements over existing I/O models. For storage workloads using Direct I/O, it achieves nearly <strong>twice the throughput</strong> of synchronous reads and POSIX AIO while reducing context switch overhead.</p><p>For buffered I/O workloads (e.g., accessing the page cache), io_uring matches the performance of synchronous reads without blocking or requiring thread pools.</p><h4>io_uring in Containerized Environments</h4><p>In containerized environments, such as Kubernetes, io_uring requires additional consideration of the deployment architecture. Containerization introduces abstraction layers—such as overlay filesystems and distributed storage—that can hinder the direct performance benefits.</p><p>Kubernetes distributions should be paired with direct storage mechanisms such as hostPath volumes or raw block device mounts to preserve performance advantages. Running containers in privileged mode or with elevated capabilities (e.g., CAP_SYS_ADMIN) can be beneficial, as io_uring relies on advanced kernel features that may be restricted in default Kubernetes environments. Privileged mode ensures the container can access necessary low-level system functions, bypass namespace isolation overhead, and directly interact with host storage devices, enabling io_uring to deliver its intended performance benefits. This makes io_uring viable even within orchestrated workloads, particularly for high-throughput and latency-sensitive applications.</p><h3>Comparative Landscape</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IYmTME7XFZoyfWfVE5IEnQ.png\" /></figure><h3>Conclusion</h3><p>Compared to alternatives like kqueue on BSD systems, io_uring delivers superior scalability and flexibility. As tooling and libraries continue to evolve, io_uring will become the de-facto standard for performance-critical I/O on Linux.</p><p>Developers seeking to maximize modern hardware performance will find io_uring a clean, efficient, and scalable solution to today’s I/O bottlenecks.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=047d5b1a9944\" width=\"1\" height=\"1\" alt=\"\">","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ghost artists on Spotify","url":"https://harpers.org/archive/2025/01/the-ghosts-in-the-machine-liz-pelly-spotify-musicians/","date":1734617525,"author":"greenie_beans","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://harpers.org/archive/2025/01/the-ghosts-in-the-machine-liz-pelly-spotify-musicians/\">https://harpers.org/archive/2025/01/the-ghosts-in-the-machine-liz-pelly-spotify-musicians/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42461530\">https://news.ycombinator.com/item?id=42461530</a></p>\n<p>Points: 334</p>\n<p># Comments: 254</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Nullboard: Kanban board in a single HTML file","url":"https://github.com/apankrat/nullboard","date":1734618558,"author":"smusamashah","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/apankrat/nullboard\">https://github.com/apankrat/nullboard</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42461688\">https://news.ycombinator.com/item?id=42461688</a></p>\n<p>Points: 460</p>\n<p># Comments: 154</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Movie Iris - Visualizing Films Through Color Extraction","url":"https://github.com/LoSinCos/movie-iris","date":1734622155,"author":"losincos","unread":true,"desc":"","content":"\n<p>I saw someone post these on reddit 4 years ago, and I really wanted to make them. I was surprised they didn't open source their code, so I rebuilt it.<p>Lots of things I would do differently now haha, but anyway, figured someone here might find it interesting.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42462348\">https://news.ycombinator.com/item?id=42462348</a></p>\n<p>Points: 72</p>\n<p># Comments: 36</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Clay – UI Layout Library","url":"https://www.nicbarker.com/clay","date":1734626214,"author":"ivmoreau","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.nicbarker.com/clay\">https://www.nicbarker.com/clay</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42463123\">https://news.ycombinator.com/item?id=42463123</a></p>\n<p>Points: 322</p>\n<p># Comments: 64</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: WebGPU Tech Demo","url":"https://gnikoloff.github.io/webgpu-sponza-demo/","date":1734628442,"author":"georginikolov","unread":true,"desc":"","content":"\n<p>WebGPU tech demo running in modern browsers showcasing various rendering techniques like deferred rendering with 400+ dynamic lights, Hi-Z screen space reflections and cascaded shadow mapping.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42463525\">https://news.ycombinator.com/item?id=42463525</a></p>\n<p>Points: 130</p>\n<p># Comments: 75</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Maintainer's Odyssey: Time, Technology, and Transformation - Sayan Chowdhury, Flatcar","url":"https://www.youtube.com/watch?v=yZoev6NvkB0","date":1734632009,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io\n\nA Maintainer's Odyssey: Time, Technology, and Transformation - Sayan Chowdhury, Flatcar\n\nThis talk takes you through the journey of Flatcar Container Linux from the eyes of a maintainer. What began as a \"friendly fork\" of CoreOS Container Linux has grown into a robust, independent, container-optimized Linux OS. The journey kicked off with a red CI dashboard daunting to many, almost-zero platform support, an unstructured release pipeline, a mammoth list of outdated packages, missing support for ARM architecture and more -- hardly a foundation for future initiatives atop. Over the years, countless human hours have been dedicated to transforming Flatcar, and I plan to discuss the initiatives we have undertaken, the war stories along the way, and the lessons we have learned as a team. The talk will also cover how we embrace new innovations and challenges while contributing back to the community. Attendees will gain insight into the challenges and rewards of maintaining a fast-moving Linux distribution and discover avenues to contribute to the Flatcar ecosystem.","flags":null,"enclosureUrl":"https://www.youtube.com/v/yZoev6NvkB0?version=3","enclosureMime":""},{"title":"A Day in the Life of Kubernetes Release with Tools, Challenges, and Operations - Subhasmita Swain","url":"https://www.youtube.com/watch?v=uIEaoz9wcRE","date":1734632009,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io\n\nA Day in the Life of Kubernetes Release with Tools, Challenges, and Operations - Subhasmita Swain, SIG Release\n\nAnyone working with Kubernetes knows how hard it is to put out a Kubernetes release. But actually, how are releases cut? This talk is for cloud-native practitioners who care about the environmental impact of their work. Focusing on insight into daily life, the tools, and the methodologies, the release engineers have a strong identity of the ecological consideration at every step.\n\nWe'll explore key aspects such as the automation tools that streamline the release process, the challenges of ensuring efficient resource usage, and the design principles that promote sustainability. Through practical demonstrations, we'll showcase best practices like optimizing CI/CD pipelines and leveraging containerization for minimal resource consumption. Participants will be equipped with actionable knowledge to enhance the sustainability of their Kubernetes releases. The key takeaway would be how the existing tools could be adapted and shared by more of the project, like image promoters.","flags":null,"enclosureUrl":"https://www.youtube.com/v/uIEaoz9wcRE?version=3","enclosureMime":""},{"title":"containerd Packaging: Who Should Ship and How? - Akhil Mohan, containerd","url":"https://www.youtube.com/watch?v=lrEFji9AkiQ","date":1734632009,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io\n\ncontainerd Packaging: Who Should Ship and How? - Akhil Mohan, containerd\n\nWhen it comes to packaging and distributing containerd, there’s always a confusion that arises from time to time: should we ship it ourselves or rely on vendors? While vendor distribution can be convenient, there can be surprising issues too. Another question arises: should we package other dependencies together with official release to ensure consistency? These considerations bring up a bigger discussion about best practices for distribution and packaging. We will be discussing perks and pitfalls of the different approaches to distributing core components in cloud native ecosystem like containerd and runc. Insights into how other projects handle their distribution could provide a valuable direction forward for the wider community. We also take a peek into the testing infrastructure that containerd uses to guarantee what we distribute is rock solid.","flags":null,"enclosureUrl":"https://www.youtube.com/v/lrEFji9AkiQ?version=3","enclosureMime":""},{"title":"Hands-On Chaos Engineering Workshop with LitmusChaos and the Road to CNCF Graduation - Panel","url":"https://www.youtube.com/watch?v=ZCUnSpTvCt0","date":1734632009,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io\n\nHands-On Chaos Engineering Workshop with LitmusChaos and the Road to CNCF Graduation - Shubham Chaudhary, Saranya Jena, Sayan Mondal, Namkyu Park, Litmus\n\nJoin us for an immersive workshop on LitmusChaos, the CNCF-incubating chaos engineering framework, as we share our journey toward graduation. We'll cover our transition from Litmus v2 to v3, security audits, new plugins, and our contributions to documentation and mentorship. This session will provide insights into building a globally impactful open-source project, especially for those in sandbox or incubating stages.\n\nIn the second half, we’ll guide you through installing Litmus, running your first chaos experiment, and connecting your ChaosHub. We’ll explore how to create custom experiments using the Litmus SDK, encouraging participants to suggest and test their own chaos scenarios. Bring Your Own Chaos (BYOC) and let’s execute it together in real time. Don’t miss this interactive deep dive into chaos engineering!","flags":null,"enclosureUrl":"https://www.youtube.com/v/ZCUnSpTvCt0?version=3","enclosureMime":""},{"title":"Welcome + Opening - Bob Killen, Nabarun Pal & Priyanka Saggu","url":"https://www.youtube.com/watch?v=HzuuRwvaU90","date":1734632009,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io\n\nWelcome + Opening - Bob Killen, Nabarun Pal & Priyanka Saggu","flags":null,"enclosureUrl":"https://www.youtube.com/v/HzuuRwvaU90?version=3","enclosureMime":""},{"title":"The Hitchhiker's Guide to Testing Kubernetes - Sreeram Venkitesh, SIG Testing","url":"https://www.youtube.com/watch?v=CH0H47Ov8fA","date":1734632009,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io\n\nThe Hitchhiker's Guide to Testing Kubernetes - Sreeram Venkitesh, SIG Testing\n\nA vital part of contributing to Kubernetes is testing. Reading existing tests lets you understand how a particular component works. You're also expected to write tests when making changes to the code base. The K8s codebase has different kinds of tests like unit, end to end and conformance tests. Given the scale of K8s, all of these are important to make sure that a feature works as intended and no edge cases come up when all the components are deployed in a production environment.\n\nIf you're getting started with contributing to K8s, learning the entire testing infrastructure can be overwhelming. This talk aims to give an introduction of the different types of tests in K8s and how you can setup your dev environment to run them locally. Along with unit tests, the talk also aims to give a demo of setting up tools like kubetest2 and hydrophone to run e2e and conformance tests with a kind cluster. After the talk you'll be ready to write your own tests for K8s and improve the test coverage.","flags":null,"enclosureUrl":"https://www.youtube.com/v/CH0H47Ov8fA?version=3","enclosureMime":""},{"title":"Linux 6.13 Is A Great Holiday Gift For AMD Systems With Many New Features","url":"https://www.reddit.com/r/linux/comments/1hhz6f4/linux_613_is_a_great_holiday_gift_for_amd_systems/","date":1734632044,"author":"/u/gurugabrielpradipaka","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gurugabrielpradipaka\"> /u/gurugabrielpradipaka </a> <br/> <span><a href=\"https://www.phoronix.com/news/Linux-6.13-AMD-Features\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hhz6f4/linux_613_is_a_great_holiday_gift_for_amd_systems/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Choosing a hash function for 2030 and beyond: SHA2 vs SHA3 vs BLAKE3","url":"https://www.reddit.com/r/programming/comments/1hhz7xs/choosing_a_hash_function_for_2030_and_beyond_sha2/","date":1734632150,"author":"/u/self","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/self\"> /u/self </a> <br/> <span><a href=\"https://kerkour.com/fast-secure-hash-function-sha256-sha512-sha3-blake3\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hhz7xs/choosing_a_hash_function_for_2030_and_beyond_sha2/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Mizu.js – Lightweight HTML templating library for any-side rendering","url":"https://mizu.sh/","date":1734632755,"author":"lowlighter","unread":true,"desc":"","content":"\n<p>Hey HN,<p>I'd like to share a fun project I've been working on: mizu.js.<p>It's a js library that add functional attributes support into your html, designed to be a simple and flexible alternative to fully-fledged web frameworks (such as Vue, React, and Angular), while offering more capabilities than other lightweight options (like Alpine.js and htmx).<p>As it's written using modern ES features and due to its isomorphic nature, it can be run in both browsers and runtimes (Node, Deno, Bun) without any changes.\nThis makes it ideal for client-side and server-side rendering, as well as static site generation, whichever environment you prefer.<p>Just include the script in any web page (or backend) to get started. \nYou can template content, bind attributes, add interactivity, handle HTTP interactions, create custom components, and much more — all out of the box, without any configuration, transpilation steps, or builds.<p>I hope you'll find mizu.js as exciting and useful as I do and I'd love to get your feedback!\nYou can learn more about it at <a href=\"https://mizu.sh\" rel=\"nofollow\">https://mizu.sh</a>!<p>Online playground: <a href=\"https://mizu.sh/playground\" rel=\"nofollow\">https://mizu.sh/playground</a> \nCustom builder: <a href=\"https://mizu.sh/build\" rel=\"nofollow\">https://mizu.sh/build</a>\nCode coverage: <a href=\"https://mizu.sh/coverage\" rel=\"nofollow\">https://mizu.sh/coverage</a>\nGitHub: <a href=\"https://github.com/lowlighter/mizu\">https://github.com/lowlighter/mizu</a><p>## Motivation ##<p>Nowadays, setting up a complete environment and installing thousands of packages is often required just to create a simple \"Hello World\" page. \nYet, with the current ECMAScript standard, vanilla JS has never been more powerful. \nIt offers built-in custom HTML components, proxies for changes tracking, weak references for better memory management, and many new data structures and methods.<p>So why is web development still insanely complex?<p>mizu.js aims to avoid adding bloat on top of native features, and instead focus on providing convenience helpers. \nIt's basically \"glue\" around all these native features with added sugar, a recipe for a lightweight yet powerful utility.<p>All evaluated expressions are interpreted as vanilla JavaScript, and you add your instructions directly into your HTML. \nSo if you know already know about JS/HTML, then you're already 80% know of how to use mizu.js (add an extra 10% if you've used Vue, Alpine.js or htmx in the past as some syntax and concepts are inspired by it), the rest is basically just remembering the directive names. \nThe learning curve is that small.<p>Also, you may have heard of <a href=\"https://matcha.mizu.sh\" rel=\"nofollow\">https://matcha.mizu.sh</a>, a CSS stylesheet to instantly make your web page stylized. \nWell, it's a great companion to mizu.js. With both of them, you can create MVPs for your projects super fast!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42464310\">https://news.ycombinator.com/item?id=42464310</a></p>\n<p>Points: 200</p>\n<p># Comments: 79</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"LitmusChaos community connect","url":"https://www.youtube.com/watch?v=1NrLu3HiW_I","date":1734633105,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io","flags":null,"enclosureUrl":"https://www.youtube.com/v/1NrLu3HiW_I?version=3","enclosureMime":""},{"title":"Music and Geometry: Intervals and Scales","url":"https://roelsworld.eu/blog-music/music-geometry-intervals-scales/","date":1734634363,"author":"coloneltcb","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://roelsworld.eu/blog-music/music-geometry-intervals-scales/\">https://roelsworld.eu/blog-music/music-geometry-intervals-scales/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42464557\">https://news.ycombinator.com/item?id=42464557</a></p>\n<p>Points: 178</p>\n<p># Comments: 52</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Arroyo 0.13 released — Rust stream processing engine","url":"https://www.reddit.com/r/rust/comments/1hi0c89/arroyo_013_released_rust_stream_processing_engine/","date":1734635015,"author":"/u/mwylde_","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mwylde_\"> /u/mwylde_ </a> <br/> <span><a href=\"https://www.arroyo.dev/blog/arroyo-0-13-0\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hi0c89/arroyo_013_released_rust_stream_processing_engine/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"OllamaGo: A Type-Safe Go Client for Ollama with Complete API Coverage 🚀","url":"https://www.reddit.com/r/golang/comments/1hi0uh5/ollamago_a_typesafe_go_client_for_ollama_with/","date":1734636334,"author":"/u/Grand-Western-2130","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey Gophers! 👋<br/> I&#39;m excited to share OllamaGo, a new Go client library for Ollama that I&#39;ve been working on. It provides a clean interface to interact with Ollama&#39;s API, making it easy to integrate LLMs into your Go applications.</p> <p>**Key Features:**<br/> - 💬 Full support for text generation and chat completions<br/> - 🔄 Streaming responses<br/> - 🛠 Complete model management (create, pull, push, copy, delete)<br/> - 📊 Embeddings generation<br/> - 🔧 Highly configurable with type-safe options</p> <pre><code>**Quick Example:** ```go client := ollama.NewClient( ollama.WithTimeout(time.Minute*5), ) resp, err := client.Generate(context.Background(), &amp;ollama.GenerateRequest{ Model: &quot;llama2&quot;, Prompt: &quot;What is the capital of France?&quot;, }) ``` </code></pre> <p>The library is fully documented with examples for all major features. Check it out at: <a href=\"https://github.com/prathyushnallamothu/ollamago\">https://github.com/prathyushnallamothu/ollamago</a><br/> I&#39;d love to hear your feedback and suggestions! Feel free to open issues or contribute if you find it useful.</p> <p>#golang #llm #ollama</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Grand-Western-2130\"> /u/Grand-Western-2130 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0uh5/ollamago_a_typesafe_go_client_for_ollama_with/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0uh5/ollamago_a_typesafe_go_client_for_ollama_with/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Work Stealing Algorithm Implementation based on core primitives.","url":"https://www.reddit.com/r/golang/comments/1hi0x5t/work_stealing_algorithm_implementation_based_on/","date":1734636538,"author":"/u/Collymore815","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi everyone! 👋</p> <p>I hope you’re all doing well! I wanted to share something I’ve been working on recently. I’ve implemented a <strong>work stealing algorithm</strong> using its core primitives, and I would love for you all to take a look at it.</p> <p>This is just the <strong>first draft</strong>, but I believe I&#39;ve captured the main idea effectively. If anyone has a moment to review it, I would greatly appreciate your feedback!</p> <p>You can check it out here: <a href=\"https://github.com/ProgMastermind/work-stealing\">GitHub - Work Stealing Algorithm</a></p> <p>Thanks so much, and I look forward to hearing your thoughts! 😊</p> <p>Best, </p> <p>Prakash.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Collymore815\"> /u/Collymore815 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0x5t/work_stealing_algorithm_implementation_based_on/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0x5t/work_stealing_algorithm_implementation_based_on/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Is modern Front-End development overengineered?","url":"https://www.reddit.com/r/programming/comments/1hi0xbx/is_modern_frontend_development_overengineered/","date":1734636551,"author":"/u/Alternative_Ball_895","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Alternative_Ball_895\"> /u/Alternative_Ball_895 </a> <br/> <span><a href=\"https://medium.com/@all.technology.stories/is-the-front-end-ecosystem-too-complicated-heres-what-i-think-51419fdb1417?source=friends_link&amp;sk=e64b5cd44e7ede97f9525c1bbc4f080f\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hi0xbx/is_modern_frontend_development_overengineered/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Game I made in Go is now free (with source)","url":"https://www.reddit.com/r/golang/comments/1hi1ugf/game_i_made_in_go_is_now_free_with_source/","date":1734639016,"author":"/u/unklnik","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Earlier this year I posted about the game I made in Go that I put on Steam, thinking I would sell it and make money. No one bought it or played it, so I changed it from a paid to a free game, if you want to check it out then Mr Snuggles Dungeon Adventure is free here <a href=\"https://store.steampowered.com/app/2968730/Mr_Snuggles_Dungeon_Adventure/\">https://store.steampowered.com/app/2968730/Mr_Snuggles_Dungeon_Adventure/</a></p> <p>Source Code: <a href=\"https://github.com/unklnik/mr_snuggles_dungeon_adventure\">https://github.com/unklnik/mr_snuggles_dungeon_adventure</a><br/> Made using the Go bindings for Raylib <a href=\"https://github.com/gen2brain/raylib-go\">https://github.com/gen2brain/raylib-go</a> just note I taught myself to code and the code is all in a single file and rough... I am working on improving this in my next game.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/unklnik\"> /u/unklnik </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi1ugf/game_i_made_in_go_is_now_free_with_source/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi1ugf/game_i_made_in_go_is_now_free_with_source/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Avoiding panics and how to find code that generates panics","url":"https://www.reddit.com/r/rust/comments/1hi290k/avoiding_panics_and_how_to_find_code_that/","date":1734640092,"author":"/u/avph","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi</p> <p>I wrote a blog entry on how to avoid panics and more specifically on how to find code that generates undesired panics. </p> <p><a href=\"https://blog.aheymans.xyz/post/don_t_panic_rust/\">https://blog.aheymans.xyz/post/don_t_panic_rust/</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/avph\"> /u/avph </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hi290k/avoiding_panics_and_how_to_find_code_that/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hi290k/avoiding_panics_and_how_to_find_code_that/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Designed a wallet app concept for GNOME, what do you think?","url":"https://www.reddit.com/r/linux/comments/1hi3sa7/designed_a_wallet_app_concept_for_gnome_what_do/","date":1734644146,"author":"/u/Krowatko","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Krowatko\"> /u/Krowatko </a> <br/> <span><a href=\"https://i.redd.it/a31m2tmtc57e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hi3sa7/designed_a_wallet_app_concept_for_gnome_what_do/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"fish-shell 4.0b1, now in Rust","url":"https://www.reddit.com/r/linux/comments/1hi4s2y/fishshell_40b1_now_in_rust/","date":1734646816,"author":"/u/gabriel_3","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gabriel_3\"> /u/gabriel_3 </a> <br/> <span><a href=\"https://fishshell.com/blog/fish-4b/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hi4s2y/fishshell_40b1_now_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How types make hard problems easy","url":"https://www.reddit.com/r/programming/comments/1hi5jdf/how_types_make_hard_problems_easy/","date":1734648906,"author":"/u/ketralnis","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://mayhul.com/posts/type-driven-design/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hi5jdf/how_types_make_hard_problems_easy/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Kelly Can't Fail","url":"https://win-vector.com/2024/12/19/kelly-cant-fail/","date":1734649635,"author":"jmount","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://win-vector.com/2024/12/19/kelly-cant-fail/\">https://win-vector.com/2024/12/19/kelly-cant-fail/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42466676\">https://news.ycombinator.com/item?id=42466676</a></p>\n<p>Points: 328</p>\n<p># Comments: 90</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Made a terminal todo list that I would actually use","url":"https://www.reddit.com/r/rust/comments/1hi6cae/made_a_terminal_todo_list_that_i_would_actually/","date":1734651247,"author":"/u/Fair-Let8175","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Its main pulls are the ability to create deadline tasks and repeating tasks. Its name is chartodo, as a play on Rust projects being &#39;blazingly fast&#39;, a fire pokemon like Charmander, and todo. </p> <p>github: <a href=\"https://github.com/DashikiBulbasaur/chartodo\">https://github.com/DashikiBulbasaur/chartodo</a></p> <p>crates.io: <a href=\"https://crates.io/crates/chartodo\">https://crates.io/crates/chartodo</a></p> <p>I&#39;m sure it still has a lot of problems, even though I tried stamping them out by writing comprehensive tests with an ideal coverage that covers most of the program. I personally dislike how long the help section is; I made it that long so that it&#39;d be as helpful as possible and there are also a lot of commands, but ideally I&#39;d love for it to be shorter.</p> <p>Most of all, I just hope that you guys like the program and/or find it useful. I personally like using it, but that&#39;s also because I made it so I might be biased. If you have any concerns, criticisms, or thoughts, please feel free to say them in the comments. I know it&#39;s another terminal program in the Rust space, and I apologize for that. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fair-Let8175\"> /u/Fair-Let8175 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hi6cae/made_a_terminal_todo_list_that_i_would_actually/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hi6cae/made_a_terminal_todo_list_that_i_would_actually/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Clever Algorithms: Nature-Inspired Programming Recipes","url":"https://www.reddit.com/r/programming/comments/1hi6l04/clever_algorithms_natureinspired_programming/","date":1734651977,"author":"/u/jasonb","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jasonb\"> /u/jasonb </a> <br/> <span><a href=\"https://cleveralgorithms.com/nature-inspired/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hi6l04/clever_algorithms_natureinspired_programming/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Frozen Collections 0.1.0 - Fast Partially Immutable Collections","url":"https://www.reddit.com/r/rust/comments/1hi6v3g/frozen_collections_010_fast_partially_immutable/","date":1734652814,"author":"/u/martin_taillefer","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/martin_taillefer\"> /u/martin_taillefer </a> <br/> <span><a href=\"https://docs.rs/frozen-collections/latest/frozen_collections/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hi6v3g/frozen_collections_010_fast_partially_immutable/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Intel & Canonical Collaborate On Graphics Preview Stack For Ubuntu 24.10 for Core Ultra Series 2 and Arc B-Series","url":"https://www.reddit.com/r/linux/comments/1hi7bk6/intel_canonical_collaborate_on_graphics_preview/","date":1734654144,"author":"/u/brand_momentum","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/brand_momentum\"> /u/brand_momentum </a> <br/> <span><a href=\"https://www.phoronix.com/news/Intel-Gfx-Preview-Ubuntu-24.10\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hi7bk6/intel_canonical_collaborate_on_graphics_preview/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Picking the right scrape intervals?","url":"https://www.reddit.com/r/kubernetes/comments/1hi7ek3/picking_the_right_scrape_intervals/","date":1734654407,"author":"/u/MuscleLazy","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I switched recently to VictoriaMetrics and I was wondering if you could share your experiences how to properly set the metrics scrape intervals, for your monitored services. Thank you.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/MuscleLazy\"> /u/MuscleLazy </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hi7ek3/picking_the_right_scrape_intervals/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hi7ek3/picking_the_right_scrape_intervals/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The era of open voice assistants","url":"https://www.home-assistant.io/blog/2024/12/19/voice-preview-edition-the-era-of-open-voice/","date":1734654597,"author":"_Microft","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.home-assistant.io/blog/2024/12/19/voice-preview-edition-the-era-of-open-voice/\">https://www.home-assistant.io/blog/2024/12/19/voice-preview-edition-the-era-of-open-voice/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42467194\">https://news.ycombinator.com/item?id=42467194</a></p>\n<p>Points: 557</p>\n<p># Comments: 197</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Go character encoding detector","url":"https://www.reddit.com/r/golang/comments/1hi8bi4/go_character_encoding_detector/","date":1734657165,"author":"/u/Training_Square2340","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>👋 Hey Gophers! 🐿️</p> <p>I&#39;m excited to share with you my latest creation: <strong><a href=\"https://github.com/wlynxg/chardet\">chardet for Go</a></strong>! 🚀 This package is your new go-to tool for detecting text encoding formats, inspired by the renowned Python <a href=\"https://github.com/chardet/chardet\">chardet</a> library.</p> <p>With <strong>chardet for Go</strong>, you can:</p> <ul> <li><strong>Detect Multiple Encoding Formats</strong>: From UTF-8 to ISO-8859-1, and beyond!</li> <li><strong>Simplify Your Text Processing</strong>: No more guessing or manual checks for encoding!</li> </ul> <p>Here&#39;s how easy it is to use:</p> <p>```go package main</p> <p>import ( &quot;fmt&quot; &quot;github.com/wlynxg/chardet&quot; )</p> <p>func main() { data := []byte(&quot;Your text data here...&quot;) // Your text here</p> <pre><code>// Detect the encoding result := chardet.Detect(data) // Print the detected encoding and confidence level fmt.Printf(&quot;Detected encoding: %s, Confidence: %.2f\\n&quot;, result.Encoding, result.Confidence) </code></pre> <p>} ```</p> <p><strong>What Can You Do With It?</strong></p> <ul> <li><strong>Web Scraping</strong>: Accurately process content from various websites.</li> <li><strong>File Handling</strong>: Automatically determine the encoding of files before processing.</li> <li><strong>Data Migration</strong>: Ensure data integrity when moving between different systems.</li> </ul> <p>I&#39;m eager to hear your feedback, ideas for improvements, or any interesting use cases you might come up with! Let&#39;s make text encoding detection in Go as seamless as possible. 🙏</p> <p>Join the conversation, and let&#39;s explore the possibilities together! 🌟</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Training_Square2340\"> /u/Training_Square2340 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi8bi4/go_character_encoding_detector/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi8bi4/go_character_encoding_detector/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Gribstream.com – Historical Weather Forecast API","url":"https://gribstream.com/","date":1734658062,"author":"ElPeque","unread":true,"desc":"","content":"\n<p>Hello! I'd like share about my sideproject <a href=\"https://gribstream.com\" rel=\"nofollow\">https://gribstream.com</a><p>It is an API to extract weather forecasting data from the National Blend of Models (NBM) <a href=\"https://vlab.noaa.gov/web/mdl/nbm\" rel=\"nofollow\">https://vlab.noaa.gov/web/mdl/nbm</a> and the Global Forecast System (GFS) <a href=\"https://www.ncei.noaa.gov/products/weather-climate-models/global-forecast\" rel=\"nofollow\">https://www.ncei.noaa.gov/products/weather-climate-models/gl...</a> . The data is freely available from AWS S3 in grib2 format which can be great but also really hard (and resource intensive) to work with, especially if you want to extract timeseries over long periods of time based on a few coordinates. Being able to query and extract only what you want out of terabytes of data in just an http request is really nice.<p>What is cool about this dataset is that it has hourly data with full forecast history so you can use the dataset to train and forecast other parameters and have proper backtesting because you can see the weather \"as of\" points in time in the past. It has a free tier so you can play with it. There is a long list of upcoming features I intend to implement and I would very much appreciate both feedback on what is currently available and on what features you would be most interested in seeing. Like... I'm not sure if it would be better to support a few other datasets or focus on supporting aggregations.<p>Features include:<p>- A free tier to help you get started\n- Full history of weather forecasts\n- Extract timeseries for thousands of coordinates, for months at a time, at hourly resolution in a single http request taking only seconds.\n- Supports as-of/time-travel, indispensable for proper backtesting of derivative models\n- Automatic gap filling of any missing data with the next best (most recent) forecast.<p>Please try it out and let me know what you think :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42467449\">https://news.ycombinator.com/item?id=42467449</a></p>\n<p>Points: 60</p>\n<p># Comments: 27</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What can I use for executing a large number of tasks across multiple servers?","url":"https://www.reddit.com/r/golang/comments/1hial9o/what_can_i_use_for_executing_a_large_number_of/","date":1734664593,"author":"/u/sunshine-and-sorrow","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I have a list of 250,000,000 inputs that I need to process. Running this on a single server will take too long, so I am thinking of running it on 100-200 virtual machines.</p> <p>At a high level, I was thinking each time a worker can request a batch of inputs, process it and then insert it into a database. I&#39;m hoping that all I need to do is write the fetch and execute functions.</p> <p>So far I found <a href=\"https://github.com/hibiken/asynq\">asynq</a>, which looks promising, but I wanted to get an idea about what else might be out there that I may have missed. Ideally I&#39;m just looking for something simple that I can run in Docker Swarm, and I don&#39;t want to have to deal with the worker registration, etc.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sunshine-and-sorrow\"> /u/sunshine-and-sorrow </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hial9o/what_can_i_use_for_executing_a_large_number_of/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hial9o/what_can_i_use_for_executing_a_large_number_of/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Gentle Introduction to Graph Neural Networks","url":"https://distill.pub/2021/gnn-intro/","date":1734667842,"author":"misonic","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://distill.pub/2021/gnn-intro/\">https://distill.pub/2021/gnn-intro/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42468214\">https://news.ycombinator.com/item?id=42468214</a></p>\n<p>Points: 246</p>\n<p># Comments: 27</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"My favourite colour is Chuck Norris red","url":"https://htmhell.dev/adventcalendar/2024/20/","date":1734669349,"author":"OuterVale","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://htmhell.dev/adventcalendar/2024/20/\">https://htmhell.dev/adventcalendar/2024/20/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42468318\">https://news.ycombinator.com/item?id=42468318</a></p>\n<p>Points: 490</p>\n<p># Comments: 94</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What is Latency and How to Reduce it?","url":"https://blog.algomaster.io/p/latency-and-how-to-reduce-it","date":1734673279,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>Latency is the time between a user taking an action&#8212;like clicking a button or loading a webpage&#8212;and receiving a response from the system. </p><p>In simple terms, latency is the time delay between:</p><ul><li><p>When a user makes a request</p></li><li><p>When they receive the response</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png\" width=\"591\" height=\"237\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:237,&quot;width&quot;:591,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:21443,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><p>Lower latency means faster responses and a better user experience.</p><p>In this article, we&#8217;ll explore the causes of high latency and how to reduce latency at different layers of your system.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/u7vLPsh\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:279257,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1456w\" sizes=\"100vw\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/u7vLPsh\">Multiplayer's</a></strong> <strong>Platform Debugger</strong> provides deep session replays with every detail you need to find and fix a bug. From frontend screens to backend traces, metrics, and logs, all in one place. Debug faster and fix customer problems more easily, so you and your team can stay focused on building great software, not combing through APM data.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/u7vLPsh&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/u7vLPsh\"><span>Get Started for FREE</span></a></p><div><hr></div><h2><strong>What Causes High Latency?</strong></h2><ul><li><p><strong>Geographical Distance:</strong> The farther a user is from your server, the longer data takes to travel. Even though data moves close to the speed of light, crossing thousands of miles takes more time than traveling a few hundred.</p></li><li><p><strong>Overloaded Servers:</strong> When a server receives more requests than it can handle, it slows down. This overload can happen due to sudden traffic spikes, inefficient resource usage, or inadequate server capacity. As servers struggle to keep up, each request takes longer to process, and latency spikes.</p></li><li><p><strong>Slow Database:</strong> If your database queries take too long&#8212;due to large tables, missing indexes, or poorly written queries&#8212;responses take longer.</p></li><li><p><strong>Inefficient Code Paths:</strong> Sometimes latency hides in the application&#8217;s code. Overly complex code, unnecessary calculations, and complicated logic can introduce small delays that add up.</p></li><li><p><strong>Network Congestion:</strong> Heavy network traffic, limited bandwidth, and busy intermediaries between the user and your server can slow requests. Employing techniques like load balancing across different network paths, using faster protocols (like HTTP/2 or HTTP/3), and minimizing payload sizes can help reduce the impact of congestion.</p></li></ul><h1><strong>How to Reduce Latency</strong></h1><h2>1. Caching</h2><p>Caching helps you serve common results fast. Instead of fetching data from a slower backend (like a database or remote server) every time, the system can quickly return results from a cache.</p><p>This reduces trips to the backend services and lowers user wait times.</p><h4>1.1 Client-side Caching</h4><p>Client-side caching stores data on the user's device, like in their browser. This cuts down on server requests and speeds up response times.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png\" width=\"529\" height=\"352.6666666666667\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:394,&quot;width&quot;:591,&quot;resizeWidth&quot;:529,&quot;bytes&quot;:25224,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><p>You can cache static assets like images, JavaScript, CSS, or even API responses that rarely change.</p><ul><li><p><strong>Browser Cache:</strong> When you specify proper HTTP caching headers (e.g., <code>Cache-Control</code>, <code>ETag</code>, <code>Expires</code>), the browser stores assets locally. On subsequent requests, it can quickly load these from the local cache rather than fetching them again from the server.</p></li><li><p><strong>Local Storage / IndexedDB:</strong> Modern browsers offer persistent storage options. For example, you could store user preferences, profile data or application settings in <code>localStorage</code> or <code>IndexedDB</code> so that the next time the user visits, the application can load instantly without waiting for the server.</p></li></ul><h4>1.2 Server-side Caching</h4><p>Server-side caching stores frequently requested data on the server, reducing the load on your database and speeding up responses. By doing so, you can reduce the expensive back-and-forth communication with databases or other services.</p><p>For example, you can save often-used data in Redis instead of asking the database each time.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png\" width=\"687\" height=\"320.98907766990294\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:385,&quot;width&quot;:824,&quot;resizeWidth&quot;:687,&quot;bytes&quot;:41298,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><ul><li><p><strong>In-memory Caches:</strong> In-memory caches keep data in a server&#8217;s main memory (RAM) for extremely fast access. Tools like Redis or Memcached store frequently requested data in RAM. An application server can check the cache first before hitting the database. This avoids heavy database queries and speeds up responses.</p></li><li><p><strong>Application-level Caches:</strong> Application level caches run directly in your application&#8217;s memory, storing frequently used data&#8212;like computed values, or common database query results&#8212;right where requests are processed. Most modern frameworks and languages provide built-in support or libraries for caching at the application level (e.g., <a href=\"https://github.com/ben-manes/caffeine\">caffeine</a> in java).</p></li></ul><h4><strong>1.3 Content Delivery Networks (CDNs)</strong></h4><p>A CDN is a geographically distributed network of servers that deliver static content (like images, scripts, and stylesheets) from the closest possible location to the user.</p><p>By providing these files from the server closest to each user, CDNs help pages load faster and improve the overall experience.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png\" width=\"552\" height=\"349.6779661016949\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ab72588b-7587-4685-a128-44215af6accf_472x299.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:299,&quot;width&quot;:472,&quot;resizeWidth&quot;:552,&quot;bytes&quot;:116538,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ul><li><p><strong>Reduced Latency by Proximity:</strong> Users access content from a nearby server, cutting down travel time.</p></li><li><p><strong>Offloading Traffic:</strong> With the CDN handling most static content, your main server stays less congested.</p></li><li><p><strong>Automatic Failover:</strong> If one CDN server fails, others seamlessly take over, ensuring high availability.</p></li></ul><blockquote><p><strong>Example:</strong> If your users are split between the U.S. and India, a CDN like Cloudflare or Akamai serves an image to a user in Mumbai from a local server, rather than from one in the U.S. This shorter distance means quicker load times.</p></blockquote><h2>2. Database Optimization</h2><p>The database often represents a major bottleneck. By optimizing it, you can serve data faster and reduce latency across the system.</p><h4>2.1 Optimize Queries</h4><p>Inefficient SQL queries can significantly impact performance. </p><p>Optimizing your queries by reducing their complexity and ensuring they perform only the necessary operations is crucial. </p><p>Here are some best practices:</p><ul><li><p><strong>Avoid SELECT *:</strong> Fetch only the columns you need. This reduces the amount of data retrieved and improves query efficiency.</p></li><li><p><strong>Limit Joins:</strong> Excessive joins can slow down query execution. Consider precomputing or restructuring data to reduce join complexity.</p></li><li><p><strong>Batching Queries:</strong> Instead of running many small queries, batch them into a single, well-structured query.</p></li></ul><h4>2.2 Use Indexing</h4><p>Indexes act like a book&#8217;s index, allowing the database to find rows faster without scanning entire tables.</p><p>Proper use of indexing can dramatically boost query performance.</p><ul><li><p><strong>Use Appropriate Indexes:</strong> Ensure that primary keys are always indexed. Additionally, create indexes on columns frequently used in <code>WHERE</code> clauses, <code>JOIN</code> conditions, or sorting operations to enhance query speed.</p></li><li><p><strong>Avoid Over-Indexing:</strong> While indexes improve read performance, excessive indexing can degrade write operations due to the overhead of maintaining them.</p></li></ul><p>If you want to learn more about indexing, checkout my previous article: </p><div class=\"digest-post-embed\" data-attrs=\"{&quot;nodeId&quot;:&quot;c043489d-3b77-467a-8d8c-c71f6f361a3c&quot;,&quot;caption&quot;:&quot;Consider a large Book of 1000 pages.&quot;,&quot;size&quot;:&quot;sm&quot;,&quot;isEditorNode&quot;:true,&quot;title&quot;:&quot;Database Indexes: A detailed guide&quot;,&quot;publishedBylines&quot;:[{&quot;id&quot;:83602743,&quot;name&quot;:&quot;Ashish Pratap Singh&quot;,&quot;bio&quot;:&quot;Software Engineer | Prev @ Amazon. Write about Coding, System Design, Interviews and Software Engineering. LinkedIn: 180k+, Youtube: 125k+, GitHub: 40k+ stars&quot;,&quot;photo_url&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0a3654fc-7584-4098-a656-7bda89568f83_612x612.jpeg&quot;,&quot;is_guest&quot;:false,&quot;bestseller_tier&quot;:null}],&quot;post_date&quot;:&quot;2024-05-05T13:31:04.214Z&quot;,&quot;cover_image&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe6ae9541-eeed-474f-9de2-2f2810a1ec18_1200x828.png&quot;,&quot;cover_image_alt&quot;:null,&quot;canonical_url&quot;:&quot;https://blog.algomaster.io/p/a-detailed-guide-on-database-indexes&quot;,&quot;section_name&quot;:null,&quot;id&quot;:144088453,&quot;type&quot;:&quot;newsletter&quot;,&quot;reaction_count&quot;:137,&quot;comment_count&quot;:13,&quot;publication_name&quot;:&quot;AlgoMaster Newsletter&quot;,&quot;publication_logo_url&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcbeb41b6-bde8-481d-b2b4-109d10f76616_256x256.png&quot;,&quot;belowTheFold&quot;:true}\"></div><h4>2.3 Sharding and Partitioning</h4><p>As your data grows, a single database server may struggle to handle the increasing load.</p><p>Sharding and partitioning are powerful techniques to distribute data, enhancing scalability and performance.</p><ul><li><p><strong>Sharding:</strong> This involves splitting data horizontally across multiple database servers (e.g., by user ID ranges). Each shard contains only a subset of the data, reducing the load on individual servers and improving query response times.</p></li><li><p><strong>Partitioning:</strong> Partitioning involves dividing large database tables into smaller, more manageable segments. These partitions exist within the same database server but are logically separated. This simplifies query execution and enhances performance.</p></li></ul><blockquote><p><strong>Example:</strong> If you manage a billion records, you could shard user data such that users A-M reside on one shard, and N-Z on another. This setup ensures that queries only search a fraction of the total data, significantly improving efficiency.</p></blockquote><h4>2.4 Denormalization</h4><p>While normalization reduces data duplication, it can lead to complex queries and joins. Denormalization stores duplicate data in ways that optimize read performance.</p><p>While denormalization increases storage usage, it significantly reduces the need for time-consuming joins.</p><p>This approach is particularly beneficial for read-intensive systems, such as analytics dashboards or recommendation engines, where quick data retrieval is critical.</p><blockquote><p><strong>Example:</strong> Instead of joining the <code>user</code> and <code>user_profile</code> tables for every query, you can store frequently accessed profile data (e.g., user name, email, or profile picture URL) directly in the <code>user</code> table. This eliminates the join operation, speeding up lookups and improving overall query performance.</p></blockquote><h2>3. Asynchronous Processing</h2><p>Not every task needs to complete before responding to the user.</p><p>Asynchronous processing moves time-consuming operations out of the critical path, allowing the system to respond to users faster.</p><ul><li><p><strong>Message Queues:</strong> Leverage tools like RabbitMQ or Kafka to handle background tasks. For example, when a user uploads a photo, the system can instantly return a success message and offload image processing to a background worker. This ensures a quick response time without delaying the user.</p></li><li><p><strong>Event-Driven Architecture:</strong> Use events to trigger background services for tasks like report generation or video encoding. These services process the events independently, preventing slow operations from impacting the user experience.</p></li></ul><h2>4. Network Optimization</h2><p>Optimizing the network path reduces the time data travels between user and server. This includes balancing loads, keeping connections alive, and shrinking payload sizes.</p><h4>4.1 Load Balancing</h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png\" width=\"562\" height=\"304.96662546353525\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:439,&quot;width&quot;:809,&quot;resizeWidth&quot;:562,&quot;bytes&quot;:32553,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><p>Load balancers distribute incoming traffic across multiple servers to prevent any single server from becoming a bottleneck. </p><p>With balanced loads, each server responds faster, cutting overall latency.</p><ul><li><p><strong>Load Balancing Algorithms:</strong> Common algorithms include:</p><ul><li><p><strong>Round Robin:</strong> Distributes requests sequentially across servers.</p></li><li><p><strong>Least Connections:</strong> Routes traffic to the server with the fewest active connections.</p></li><li><p><strong>IP Hash:</strong> Directs requests based on the client&#8217;s IP address, ensuring session consistency.</p></li></ul></li><li><p><strong>Health Checks:</strong> Load balancers continuously monitor server health. Unhealthy servers are automatically removed from the pool, ensuring uninterrupted performance for users.</p></li></ul><h4>4.2 Persistent Connections</h4><p>Establishing a new TCP or TLS connection for every request adds significant overhead. </p><p>Persistent connections enable multiple requests to share the same connection, improving efficiency and reducing latency.</p><ul><li><p><strong>HTTP Keep-Alive:</strong> Allows connections to remain open for subsequent requests instead of closing them after a single use. This eliminates the round-trip time required to establish new connections, improving response times.</p></li><li><p><strong>HTTP/2 and HTTP/3:</strong> These advanced protocols further optimize performance by multiplexing multiple requests over a single connection, allowing data to flow more efficiently and reducing latency.</p></li></ul><blockquote><p><strong>Example:</strong> By enabling <code>Connection: keep-alive</code> in your server&#8217;s responses, clients can reuse the same connection for multiple requests, avoiding the repeated overhead of connection setup and cutting down latency caused by repeated handshakes.</p></blockquote><h4>4.3 Prefetching</h4><p>Prefetching involves anticipating what data the user might need next and fetching it ahead of time. When the user navigates, the data is already waiting.</p><ul><li><p><strong>Link Rel Prefetch:</strong> Use the <code>rel=\"prefetch\"</code> attribute in HTML to signal to the browser which resources should be loaded in advance. This is particularly useful for preloading scripts, styles, or images that the user is likely to need next.</p></li><li><p><strong>Predictive APIs:</strong> Leverage user behavior patterns to prefetch data. For example, if users typically request a related resource (e.g., a recommendations page) after viewing a product, prefetch the necessary data silently in the background.</p></li></ul><h4>4.4 Data Compression</h4><p>Large payloads take longer to travel. Compressing data before sending it reduces transfer time and bandwidth usage.</p><ul><li><p><strong>GZIP or Brotli:</strong> Compress server responses using GZIP or Brotli. Modern browsers automatically decompress the data.</p></li><li><p><strong>Minification:</strong> For frontend resources like JavaScript and CSS, remove unnecessary elements such as whitespace, comments, and unused code.</p></li></ul><h1>Conclusion</h1><p>Reducing latency isn&#8217;t about one single technique; it&#8217;s about combining multiple strategies for a compound effect.</p><p>Each optimization plays a critical role:</p><ul><li><p><strong>Caching</strong> delivers faster responses by storing frequently accessed data.</p></li><li><p><strong>Database optimizations</strong> ensure quick and efficient data retrieval.</p></li><li><p><strong>Asynchronous processing</strong> minimizes perceived wait times by handling long-running tasks in the background.</p></li><li><p><strong>Network optimizations</strong> streamline data transfer between the server and the user.</p></li></ul><p>By refining each layer&#8212;from the user&#8217;s browser to your database&#8212;you can build systems that deliver consistently low-latency experiences.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/latency-and-how-to-reduce-it?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/latency-and-how-to-reduce-it?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png","enclosureMime":""},{"title":"ChatLoopBackOff - Episode 40 (Spiderpool)","url":"https://www.youtube.com/watch?v=GiCOnFCwRno","date":1734674396,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Spiderpool focuses on enhancing IP Address Management (IPAM) for Kubernetes clusters, particularly in cloud-native environments. It aims to simplify the networking requirements for applications by providing advanced IP management capabilities and integrating seamlessly with various Container Network Interface (CNI) plugins. Join CNCF Ambassador Afzal Ansari as he explores how Spiderpool provides a comprehensive IPAM solution, addressing the challenges of networking in Kubernetes while allowing for flexible deployment and high-performance requirements.","flags":null,"enclosureUrl":"https://www.youtube.com/v/GiCOnFCwRno?version=3","enclosureMime":""},{"title":"Tldraw Computer","url":"https://computer.tldraw.com/","date":1734680556,"author":"duck","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://computer.tldraw.com\">https://computer.tldraw.com</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42469074\">https://news.ycombinator.com/item?id=42469074</a></p>\n<p>Points: 348</p>\n<p># Comments: 73</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"TIL: The initial conversion script was written by Perberos, an Arch user from Argentina, who created the repo in the AUR to start MATE from the remains of GNOME 2.32 (in 2011)","url":"https://www.reddit.com/r/linux/comments/1hifno3/til_the_initial_conversion_script_was_written_by/","date":1734684442,"author":"/u/No-Purple6360","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/No-Purple6360\"> /u/No-Purple6360 </a> <br/> <span><a href=\"https://i.redd.it/omxtvac0vy7e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hifno3/til_the_initial_conversion_script_was_written_by/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How do you do, fellow web developers? A growing disconnect.","url":"https://www.reddit.com/r/programming/comments/1hifo83/how_do_you_do_fellow_web_developers_a_growing/","date":1734684517,"author":"/u/Xadartt","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Xadartt\"> /u/Xadartt </a> <br/> <span><a href=\"https://rakhim.exotext.com/web-developers-a-growing-disconnect\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hifo83/how_do_you_do_fellow_web_developers_a_growing/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Deaf in Cloud Native: KubeCon NA 2024 Recap","url":"https://www.youtube.com/watch?v=4n6n-LPlI_k","date":1734684685,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io","flags":null,"enclosureUrl":"https://www.youtube.com/v/4n6n-LPlI_k?version=3","enclosureMime":""},{"title":"I present to you: Immovable types! (Kinda.)","url":"https://www.reddit.com/r/rust/comments/1higfmu/i_present_to_you_immovable_types_kinda/","date":1734688102,"author":"/u/noop_noob","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><pre><code>trait IsStatic {} impl&lt;&#39;a: &#39;static&gt; IsStatic for &amp;&#39;a () {} #[derive(Clone)] struct Immovable; impl Copy for Immovable where for&lt;&#39;a&gt; &amp;&#39;a (): IsStatic {} fn main() { let x = Immovable; let _y = x; // Error! } </code></pre> <p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=4a69ff52aea9a5895ee753f6e93aaa49\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=4a69ff52aea9a5895ee753f6e93aaa49</a></p> <pre><code>error: implementation of `IsStatic` is not general enough --&gt; src/main.rs:11:14 | 11 | let _y = x; // Error! | ^ implementation of `IsStatic` is not general enough | = note: `IsStatic` would have to be implemented for the type `&amp;&#39;0 ()`, for any lifetime `&#39;0`... = note: ...but `IsStatic` is actually implemented for the type `&amp;&#39;1 ()`, for some specific lifetime `&#39;1` </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/noop_noob\"> /u/noop_noob </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1higfmu/i_present_to_you_immovable_types_kinda/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1higfmu/i_present_to_you_immovable_types_kinda/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Are Pointers in Go Faster Than Values?","url":"https://www.reddit.com/r/golang/comments/1hih5b9/are_pointers_in_go_faster_than_values/","date":1734691226,"author":"/u/EightLines_03","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hih5b9/are_pointers_in_go_faster_than_values/\"> <img src=\"https://external-preview.redd.it/mQ4Hd8sFF41ty9JuRU-dwxXrW-mey161e6l1R_87gAw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=95fdc8dc3f34f064bb9924821f38f320e4c320a7\" alt=\"Are Pointers in Go Faster Than Values?\" title=\"Are Pointers in Go Faster Than Values?\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/EightLines_03\"> /u/EightLines_03 </a> <br/> <span><a href=\"https://blog.boot.dev/golang/pointers-faster-than-values/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hih5b9/are_pointers_in_go_faster_than_values/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Running GenAI on Supercomputers with Virtual Kubelet: Bridging HPC and Modern AI Infrastructure","url":"https://www.reddit.com/r/kubernetes/comments/1hihhbp/running_genai_on_supercomputers_with_virtual/","date":1734692647,"author":"/u/lewqfu","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Thank you to Diego Ciangottini, the Italian National Institute for Nuclear Physics, the InterLink project, and the Vega Supercomputer – all for doing the heavy lifting getting HelixML GPU runners running on Kubernetes bridged to Slurm HPC infra to take advantage of hundreds of thousands of GPUs running on Slurm infrastructure and transform them into multi-tenant GenAI systems.</p> <p>Read about what we did and see the live demo here: <a href=\"https://blog.helix.ml/p/running-genai-on-supercomputers-bridging\">https://blog.helix.ml/p/running-genai-on-supercomputers-bridging</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/lewqfu\"> /u/lewqfu </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hihhbp/running_genai_on_supercomputers_with_virtual/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hihhbp/running_genai_on_supercomputers_with_virtual/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Why Every Platform Engineer Should Care About Kubernetes Operators","url":"https://www.reddit.com/r/kubernetes/comments/1hii5mo/why_every_platform_engineer_should_care_about/","date":1734695485,"author":"/u/engin-diri","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hii5mo/why_every_platform_engineer_should_care_about/\"> <img src=\"https://external-preview.redd.it/HaS0BS8ikzMj8-f6bqNj-Hjld-62bYzcq_9HE5L7AiE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1e3088063e45c7413b12ae3a2b2ec890cb83e37a\" alt=\"Why Every Platform Engineer Should Care About Kubernetes Operators\" title=\"Why Every Platform Engineer Should Care About Kubernetes Operators\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/engin-diri\"> /u/engin-diri </a> <br/> <span><a href=\"https://www.pulumi.com/blog/why-every-platform-engineer-should-care-about-kubernetes-operators/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hii5mo/why_every_platform_engineer_should_care_about/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Release Nutype 0.5.1 - enhanced no_std support and bug fixes · greyblake/nutype","url":"https://www.reddit.com/r/rust/comments/1hii8ji/release_nutype_051_enhanced_no_std_support_and/","date":1734695810,"author":"/u/greyblake","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Nutype is a procedural macro that extends the standard newtype pattern by enabling additional constraints such as sanitization and validation. The generated code ensures that values cannot be created without meeting these checks, including during serde deserialization.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/greyblake\"> /u/greyblake </a> <br/> <span><a href=\"https://github.com/greyblake/nutype/releases/tag/v0.5.1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hii8ji/release_nutype_051_enhanced_no_std_support_and/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Burnout ≠ Working Too Much","url":"https://www.reddit.com/r/programming/comments/1hikf85/burnout_working_too_much/","date":1734703341,"author":"/u/Acceptable-Courage-9","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Acceptable-Courage-9\"> /u/Acceptable-Courage-9 </a> <br/> <span><a href=\"https://terriblesoftware.org/2024/12/20/burnout-%e2%89%a0-working-too-much/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hikf85/burnout_working_too_much/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Real-World Kubernetes with Andy Suderman","url":"https://www.reddit.com/r/kubernetes/comments/1hikw1d/realworld_kubernetes_with_andy_suderman/","date":1734704723,"author":"/u/mooreds","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hikw1d/realworld_kubernetes_with_andy_suderman/\"> <img src=\"https://external-preview.redd.it/4rGWxJzaLslfs-kkuMO3D_MrRN20MlE-wg8SRMi10JU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1dd570b7e3f33e3ac6498b2ed359e4a261b2fbed\" alt=\"Real-World Kubernetes with Andy Suderman\" title=\"Real-World Kubernetes with Andy Suderman\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mooreds\"> /u/mooreds </a> <br/> <span><a href=\"https://www.thecloudgambit.com/2236725/episodes/16246643-real-world-kubernetes-with-andy-suderman\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hikw1d/realworld_kubernetes_with_andy_suderman/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Like, control plane nodes > worker nodes 😅","url":"https://www.reddit.com/r/kubernetes/comments/1hilmu0/like_control_plane_nodes_worker_nodes/","date":1734706855,"author":"/u/moneyppt","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hilmu0/like_control_plane_nodes_worker_nodes/\"> <img src=\"https://preview.redd.it/i7rcvyo3q08e1.jpeg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f5176f69b09559e465cb3260b05b62c68041d9e8\" alt=\"Like, control plane nodes &gt; worker nodes 😅\" title=\"Like, control plane nodes &gt; worker nodes 😅\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/moneyppt\"> /u/moneyppt </a> <br/> <span><a href=\"https://i.redd.it/i7rcvyo3q08e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hilmu0/like_control_plane_nodes_worker_nodes/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Intel Arc B580 tested in five games on Linux; you're better off sticking with an AMD GPU for now","url":"https://www.reddit.com/r/linux/comments/1him1cq/intel_arc_b580_tested_in_five_games_on_linux/","date":1734708018,"author":"/u/Tiny-Independent273","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Tiny-Independent273\"> /u/Tiny-Independent273 </a> <br/> <span><a href=\"https://www.pcguide.com/news/intel-arc-b580-tested-in-five-games-on-linux-youre-better-off-sticking-with-an-amd-gpu-for-now/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1him1cq/intel_arc_b580_tested_in_five_games_on_linux/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Artemis, a Calm Web Reader","url":"https://artemis.jamesg.blog/","date":1734708530,"author":"zerojames","unread":true,"desc":"","content":"\n<p>Earlier this year, I made a web reader that only showed a list of post titles, author domains, and links. The reader only updated once per day, so I wouldn't feel compelled to keep checking for new posts.<p>I have been using the tool, which I called Artemis, for several months. Every morning, I looked forward to my \"morning paper\" of blogs I love reading.<p>There are no notifications, read vs. unread states, counts of posts, etc. Only the last seven days of posts are available. The colour scheme is changeable. Dark mode is supported. All popular feed formats are supported.<p>There is no reading interface to read blog posts; rather, the links take you to the authors' websites. Many of my favourite bloggers put a lot of effort into the design of their blogs and like to change things up; I wanted an experience that embraced that.<p>The reader is now available for anyone to use (with invite code \"hn\").</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42471913\">https://news.ycombinator.com/item?id=42471913</a></p>\n<p>Points: 134</p>\n<p># Comments: 38</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A bestiary of exotic hadrons: the 23 exotic hadrons discovered at the LHC so far","url":"https://cerncourier.com/a-bestiary-of-exotic-hadrons/","date":1734708599,"author":"rbanffy","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://cerncourier.com/a-bestiary-of-exotic-hadrons/\">https://cerncourier.com/a-bestiary-of-exotic-hadrons/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42471927\">https://news.ycombinator.com/item?id=42471927</a></p>\n<p>Points: 75</p>\n<p># Comments: 27</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What the official scikit-learn certification looks like","url":"https://www.youtube.com/watch?v=wtSr9Z3Cxsg","date":1734709944,"author":"probabl","unread":true,"desc":"","content":"We got a lot of questions about our certification program. Some of these questions weren't so much on the material, but more on the medium and interface of the actual exam. \n\nThat why we made this small recording. It shows what you can expect as we go through a few questions in a mock exam.\n\n00:00 Intro and setup\n01:56 Starting the exam\n03:19 First questions\n05:41 Programming exercise\n09:47 Final review at the end\n\nTo learn more about the official scikit-learn certification program go here: \nhttps://certification.probabl.ai/","flags":null,"enclosureUrl":"https://www.youtube.com/v/wtSr9Z3Cxsg?version=3","enclosureMime":""},{"title":"Grayjay Desktop App","url":"https://grayjay.app/desktop/","date":1734715980,"author":"pierrelf","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://grayjay.app/desktop/\">https://grayjay.app/desktop/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42473032\">https://news.ycombinator.com/item?id=42473032</a></p>\n<p>Points: 82</p>\n<p># Comments: 40</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Happy Cake Day Kubernetes!","url":"https://www.reddit.com/r/kubernetes/comments/1hipggc/happy_cake_day_kubernetes/","date":1734717151,"author":"/u/bobblybalad","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hipggc/happy_cake_day_kubernetes/\"> <img src=\"https://preview.redd.it/qv656thq625d1.jpeg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0381be213d4b424108a105f7c2e90b28fc825dff\" alt=\"Happy Cake Day Kubernetes!\" title=\"Happy Cake Day Kubernetes!\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bobblybalad\"> /u/bobblybalad </a> <br/> <span><a href=\"https://i.redd.it/qv656thq625d1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hipggc/happy_cake_day_kubernetes/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"OpenAI O3 breakthrough high score on ARC-AGI-PUB","url":"https://arcprize.org/blog/oai-o3-pub-breakthrough","date":1734718273,"author":"maurycy","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://arcprize.org/blog/oai-o3-pub-breakthrough\">https://arcprize.org/blog/oai-o3-pub-breakthrough</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42473321\">https://news.ycombinator.com/item?id=42473321</a></p>\n<p>Points: 227</p>\n<p># Comments: 123</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""}]}