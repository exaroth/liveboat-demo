{"id":"2Qhhdda6Qnbf8RCfUPd4nB9sSt2WDQfEpF7H3gCnZZ4AsfbGMy3RmrCa6gigGY6TkbrrJn4wmHXXNYcVj1bK","title":"top scoring links : rust","displayTitle":"Reddit - Rust","url":"https://www.reddit.com/r/rust/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/rust/top/?sort=top&t=day&limit=6","items":[{"title":"Flawless Replay - Time traveling debugger for Rust workflows","url":"https://www.reddit.com/r/rust/comments/1haa58t/flawless_replay_time_traveling_debugger_for_rust/","date":1733752254,"author":"/u/bkolobara","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bkolobara\"> /u/bkolobara </a> <br/> <span><a href=\"https://flawless.dev/replay/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1haa58t/flawless_replay_time_traveling_debugger_for_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Just launched NerveMQ - a SQLite-powered message queue that speaks SQS ðŸš€","url":"https://www.reddit.com/r/rust/comments/1haddsd/just_launched_nervemq_a_sqlitepowered_message/","date":1733761069,"author":"/u/majorpog","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey all, I&#39;ve been working on this for a few weeks and wanted to share! It&#39;s called <a href=\"https://github.com/fortress-build/nervemq\">NerveMQ</a> - basically AWS SQS but running locally with SQLite as the backend.</p> <p>Why? Because sometimes you just want a simple message queue that: - Works exactly like SQS (you can use existing SDKs, or use it as a local mock SQS for testing) - Doesn&#39;t need a whole cluster setup - Actually persists your data (sorry Redis) - Is stupid simple to deploy (it&#39;s just one binary)</p> <p>I also just thought it would be fun to build. I may have come up with the other &quot;why&quot;s after the fact.</p> <p>The cool stuff: - Multi-tenant support with namespaces - Built-in auth system - bearer-based auth or AWS SIGv4 - Admin UI for managing everything (+ an admin API) - Apache 2.0 licensed</p> <p>Future plans: - DB-per-queue for higher throughput - High availability via replication and raft consensus</p> <p>It&#39;s still early days but the core functionality is there. Would love to get some feedback from anyone who wants to try it out (and of course, stars) :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/majorpog\"> /u/majorpog </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1haddsd/just_launched_nervemq_a_sqlitepowered_message/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1haddsd/just_launched_nervemq_a_sqlitepowered_message/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What happens when a TcpStream is dropped?","url":"https://www.reddit.com/r/rust/comments/1haf7o9/what_happens_when_a_tcpstream_is_dropped/","date":1733765608,"author":"/u/Shir0kamii","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>The rust doc says that &quot;the connection will be closed when the value is dropped&quot;. After reading through the source code, it seems that the only thing that happens on drop is the file descriptor of the underlying socket being closed.</p> <p>I don&#39;t know much about low-level network stuff, but does that mean the connection is &quot;improperly&quot; closed? Does the connected client or server receive a notification of the connection being closed?</p> <p>To give a bit of context: I want to correctly close a client websocket connection from tokio-tungstenite. I thought that dropping it would be enough, but I&#39;m starting to think this is not even remotely true. Do I have to manually close each layer of the connection ?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Shir0kamii\"> /u/Shir0kamii </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1haf7o9/what_happens_when_a_tcpstream_is_dropped/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1haf7o9/what_happens_when_a_tcpstream_is_dropped/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"State of the Crates 2025","url":"https://www.reddit.com/r/rust/comments/1hafdai/state_of_the_crates_2025/","date":1733765991,"author":"/u/ohrv","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ohrv\"> /u/ohrv </a> <br/> <span><a href=\"https://ohadravid.github.io/posts/2024-12-state-of-the-crates/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hafdai/state_of_the_crates_2025/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Dioxus 0.6 - Massive Tooling Improvements: Mobile Simulators, Magical Hot-Reloading, Interactive CLI, RSX Autocomplete, Streaming HTML, WGPU Overlays, and more!","url":"https://www.reddit.com/r/rust/comments/1hahy2d/dioxus_06_massive_tooling_improvements_mobile/","date":1733772264,"author":"/u/jkelleyrtp","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jkelleyrtp\"> /u/jkelleyrtp </a> <br/> <span><a href=\"https://dioxuslabs.com/blog/release-060\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hahy2d/dioxus_06_massive_tooling_improvements_mobile/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"December 2024 Leadership Council Update","url":"https://www.reddit.com/r/rust/comments/1haj713/december_2024_leadership_council_update/","date":1733775352,"author":"/u/ehuss","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ehuss\"> /u/ehuss </a> <br/> <span><a href=\"https://blog.rust-lang.org/inside-rust/2024/12/09/leadership-council-update.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1haj713/december_2024_leadership_council_update/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}