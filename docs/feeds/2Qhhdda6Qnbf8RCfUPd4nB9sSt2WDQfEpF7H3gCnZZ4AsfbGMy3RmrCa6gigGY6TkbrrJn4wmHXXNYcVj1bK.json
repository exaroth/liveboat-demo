{"id":"2Qhhdda6Qnbf8RCfUPd4nB9sSt2WDQfEpF7H3gCnZZ4AsfbGMy3RmrCa6gigGY6TkbrrJn4wmHXXNYcVj1bK","title":"top scoring links : rust","displayTitle":"Reddit - Rust","url":"https://www.reddit.com/r/rust/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/rust/top/?sort=top&t=day&limit=6","items":[{"title":"The Humble For Loop in Rust","url":"https://www.reddit.com/r/rust/comments/1hecds7/the_humble_for_loop_in_rust/","date":1734210022,"author":"/u/kibwen","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kibwen\"> /u/kibwen </a> <br/> <span><a href=\"https://blog.startifact.com/posts/humble-for-loop-rust/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hecds7/the_humble_for_loop_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"SeekStorm - an open-source, sub-millisecond full-text search library & multi-tenancy server","url":"https://www.reddit.com/r/rust/comments/1hed3g5/seekstorm_an_opensource_submillisecond_fulltext/","date":1734211996,"author":"/u/kibwen","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kibwen\"> /u/kibwen </a> <br/> <span><a href=\"https://github.com/SeekStorm/SeekStorm\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hed3g5/seekstorm_an_opensource_submillisecond_fulltext/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"I started to make this experimental kernel in rust","url":"https://www.reddit.com/r/rust/comments/1hehv30/i_started_to_make_this_experimental_kernel_in_rust/","date":1734226291,"author":"/u/Juanperias","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hello rustaceans, two weeks ago I started to develop this kernel in rust as a hobby, it is based on unix and the goal is to be as small as possible, and it is based on microkernel architecture (besides it is a kind of redemption of an old kernel I was developing); It is based on the microkernel architecture (besides it is a kind of redemption of an old kernel I was developing), currently I have basic things like paging, heap allocator, macros like print/println a GDT, TSS and IDT, I still have a long way to go, I would like you to give your feedback and what things I could add to the kernel.</p> <p><a href=\"https://github.com/juanperias/toggle/tree/dev/\">https://github.com/juanperias/toggle/tree/dev/</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Juanperias\"> /u/Juanperias </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hehv30/i_started_to_make_this_experimental_kernel_in_rust/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hehv30/i_started_to_make_this_experimental_kernel_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"📂 mc: Modern File Copying Tool in Rust","url":"https://www.reddit.com/r/rust/comments/1hejzp4/mc_modern_file_copying_tool_in_rust/","date":1734233630,"author":"/u/WeatherZealousideal5","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey everyone! 🚀 I just released <strong>mc</strong>, a fast and user-friendly file copying tool written in Rust. Think of it as a modern alternative to <del>cp</del> but with better UX! Unlike <em>cp</em> it shows progress, verifies integrity, and supports advanced features.</p> <h1>🔑 Key Features:</h1> <ul> <li>Copy files or entire folders effortlessly.</li> <li>🔄 <strong>Progress bar</strong> to keep you updated.</li> <li>🔐 <strong>Hash verification</strong> to ensure data integrity.</li> <li>🔗 Support for <strong>hard</strong> and <strong>symbolic links</strong>.</li> <li>⚡ Faster than Finder or Explorer.</li> <li>🛏️ Keeps your system awake during large transfers.</li> </ul> <h1>Install:</h1> <p>Head over to the <a href=\"https://github.com/thewh1teagle/mc/releases/latest\">Releases</a> page for installation options or explore the <a href=\"https://github.com/thewh1teagle/mc\">source code</a> on GitHub.</p> <p>I’ve focused on creating a great UX, but there’s always room to grow! I’m actively working on improvements (check out the <a href=\"https://github.com/thewh1teagle/mc/issues\">issues</a>). Feedback and contributions are welcome! ❤️</p> <p>Would love to hear your thoughts! 😊</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WeatherZealousideal5\"> /u/WeatherZealousideal5 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hejzp4/mc_modern_file_copying_tool_in_rust/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hejzp4/mc_modern_file_copying_tool_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Durable Execution tracing TUI - Ratatui is awesome","url":"https://www.reddit.com/r/rust/comments/1hem1lr/durable_execution_tracing_tui_ratatui_is_awesome/","date":1734241297,"author":"/u/h7kanna","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/h7kanna\"> /u/h7kanna </a> <br/> <span><a href=\"https://youtu.be/qgTfwcLjxWs?feature=shared\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hem1lr/durable_execution_tracing_tui_ratatui_is_awesome/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How similar is Rust to C++?","url":"https://www.reddit.com/r/rust/comments/1henk91/how_similar_is_rust_to_c/","date":1734247775,"author":"/u/Dramatic_Zebra5107","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Up untill know, I&#39;ve coded mostly in Java and Python. However, I work on mathematical stuff - data science/MILP optimizations/... which needs to be performant. This is taken care of for me by libraries and solvers, but I&#39;d like to learn to write performant code anyway.</p> <p>Thus, I&#39;d like to learn Rust or C++ and I plan implementing algorithms like simplex method, differential equation solvers, etc.</p> <p>From what I read, Rust sounds like it would be more fun than C++, which is important to me. On the other hand, most of the solvers/libraries I use are written in C/C++, so knowing that language could be a huge plus.</p> <p>So my question is - if I learn and use Rust for these personal projects, how hard would it be to switch to C/C++ if such need arises in my work?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Dramatic_Zebra5107\"> /u/Dramatic_Zebra5107 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1henk91/how_similar_is_rust_to_c/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1henk91/how_similar_is_rust_to_c/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}