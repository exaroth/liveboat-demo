{"id":"2Qhhdda6Qnbf8RCfUPd4nB9sSt2WDQfEpF7H3gCnZZ4AsfbGMy3RmrCa6gigGY6TkbrrJn4wmHXXNYcVj1bK","title":"top scoring links : rust","displayTitle":"Reddit - Rust","url":"https://www.reddit.com/r/rust/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/rust/top/?sort=top&t=day&limit=6","items":[{"title":"[Media] crates.io has reached 100 billions downloads ðŸŽ‰","url":"https://www.reddit.com/r/rust/comments/1hiqv2f/media_cratesio_has_reached_100_billions_downloads/","date":1734720889,"author":"/u/kode1985","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kode1985\"> /u/kode1985 </a> <br/> <span><a href=\"https://i.redd.it/cbstg7zhv18e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hiqv2f/media_cratesio_has_reached_100_billions_downloads/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Last few days to fill the 2024 Rust Annual Survey","url":"https://www.reddit.com/r/rust/comments/1hilz9k/last_few_days_to_fill_the_2024_rust_annual_survey/","date":1734707852,"author":"/u/Kobzol","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>The 2024 Annual Rust Survey will close in a few days (it will run until 23. 12., we&#39;ll close it on Tuesday). If you haven&#39;t filled it yet, please do so. Thank you!</p> <p><a href=\"https://blog.rust-lang.org/2024/12/05/annual-survey-2024-launch.html\">https://blog.rust-lang.org/2024/12/05/annual-survey-2024-launch.html</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Kobzol\"> /u/Kobzol </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hilz9k/last_few_days_to_fill_the_2024_rust_annual_survey/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hilz9k/last_few_days_to_fill_the_2024_rust_annual_survey/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Release Nutype 0.5.1 - enhanced no_std support and bug fixes Â· greyblake/nutype","url":"https://www.reddit.com/r/rust/comments/1hii8ji/release_nutype_051_enhanced_no_std_support_and/","date":1734695810,"author":"/u/greyblake","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Nutype is a procedural macro that extends the standard newtype pattern by enabling additional constraints such as sanitization and validation. The generated code ensures that values cannot be created without meeting these checks, including during serde deserialization.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/greyblake\"> /u/greyblake </a> <br/> <span><a href=\"https://github.com/greyblake/nutype/releases/tag/v0.5.1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hii8ji/release_nutype_051_enhanced_no_std_support_and/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"I present to you: Immovable types! (Kinda.)","url":"https://www.reddit.com/r/rust/comments/1higfmu/i_present_to_you_immovable_types_kinda/","date":1734688102,"author":"/u/noop_noob","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><pre><code>trait IsStatic {} impl&lt;&#39;a: &#39;static&gt; IsStatic for &amp;&#39;a () {} #[derive(Clone)] struct Immovable; impl Copy for Immovable where for&lt;&#39;a&gt; &amp;&#39;a (): IsStatic {} fn main() { let x = Immovable; let _y = x; // Error! } </code></pre> <p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=4a69ff52aea9a5895ee753f6e93aaa49\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=4a69ff52aea9a5895ee753f6e93aaa49</a></p> <pre><code>error: implementation of `IsStatic` is not general enough --&gt; src/main.rs:11:14 | 11 | let _y = x; // Error! | ^ implementation of `IsStatic` is not general enough | = note: `IsStatic` would have to be implemented for the type `&amp;&#39;0 ()`, for any lifetime `&#39;0`... = note: ...but `IsStatic` is actually implemented for the type `&amp;&#39;1 ()`, for some specific lifetime `&#39;1` </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/noop_noob\"> /u/noop_noob </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1higfmu/i_present_to_you_immovable_types_kinda/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1higfmu/i_present_to_you_immovable_types_kinda/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Frozen Collections 0.1.0 - Fast Partially Immutable Collections","url":"https://www.reddit.com/r/rust/comments/1hi6v3g/frozen_collections_010_fast_partially_immutable/","date":1734652814,"author":"/u/martin_taillefer","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/martin_taillefer\"> /u/martin_taillefer </a> <br/> <span><a href=\"https://docs.rs/frozen-collections/latest/frozen_collections/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hi6v3g/frozen_collections_010_fast_partially_immutable/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Made a terminal todo list that I would actually use","url":"https://www.reddit.com/r/rust/comments/1hi6cae/made_a_terminal_todo_list_that_i_would_actually/","date":1734651247,"author":"/u/Fair-Let8175","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Its main pulls are the ability to create deadline tasks and repeating tasks. Its name is chartodo, as a play on Rust projects being &#39;blazingly fast&#39;, a fire pokemon like Charmander, and todo. </p> <p>github: <a href=\"https://github.com/DashikiBulbasaur/chartodo\">https://github.com/DashikiBulbasaur/chartodo</a></p> <p>crates.io: <a href=\"https://crates.io/crates/chartodo\">https://crates.io/crates/chartodo</a></p> <p>I&#39;m sure it still has a lot of problems, even though I tried stamping them out by writing comprehensive tests with an ideal coverage that covers most of the program. I personally dislike how long the help section is; I made it that long so that it&#39;d be as helpful as possible and there are also a lot of commands, but ideally I&#39;d love for it to be shorter.</p> <p>Most of all, I just hope that you guys like the program and/or find it useful. I personally like using it, but that&#39;s also because I made it so I might be biased. If you have any concerns, criticisms, or thoughts, please feel free to say them in the comments. I know it&#39;s another terminal program in the Rust space, and I apologize for that. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fair-Let8175\"> /u/Fair-Let8175 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hi6cae/made_a_terminal_todo_list_that_i_would_actually/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hi6cae/made_a_terminal_todo_list_that_i_would_actually/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}