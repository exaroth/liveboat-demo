{"id":"2Qhhdda6Qnbf8RCfUPd4nB9sSt2WDQfEpF7H3gCnZZ4AsfbGMy3RmrCa6gigGY6TkbrrJn4wmHXXNYcVj1bK","title":"top scoring links : rust","displayTitle":"Reddit - Rust","url":"https://www.reddit.com/r/rust/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/rust/top/?sort=top&t=day&limit=6","items":[{"title":"dropping hyper (from curl)","url":"https://www.reddit.com/r/rust/comments/1hj8ng8/dropping_hyper_from_curl/","date":1734783158,"author":"/u/sondr3_","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sondr3_\"> /u/sondr3_ </a> <br/> <span><a href=\"https://daniel.haxx.se/blog/2024/12/21/dropping-hyper/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hj8ng8/dropping_hyper_from_curl/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Is cancelling Futures by dropping them a fundamentally terrible idea?","url":"https://www.reddit.com/r/rust/comments/1hj1eg9/is_cancelling_futures_by_dropping_them_a/","date":1734752477,"author":"/u/arsdragonfly","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://www.reddit.com/r/csharp/comments/16b35vc/how_do_i_stop_a_task_in_c_immediately_anywhere/\">Languages that only cancel tasks at explicit <code>CancellationToken</code> checkpoints exist.</a> There are very sound arguments about why that &quot;always-explicit cancellation&quot; is a good design.</p> <p>&quot;To cancel a future, we need to drop it&quot; might have been the single most harmful idea for Rust ever. No amount of mental gymnastics of &quot;let&#39;s consider what would happen at every <code>await</code> point&quot; or &quot;let&#39;s figure out how to do <code>AsyncDrop</code>&quot; would properly fix the problem. If you&#39;ve worked with this kind of stuff you will know what I&#39;m saying. Correctness-wise, reasoning about such implicit <code>Future</code> dropping is so, so much harder (arguably borderline impossible) than reasoning about explicit <code>CancellationToken</code> checks. You could almost argue that &quot;safe Rust&quot; is a lie if such dropping causes so many resource leaks and weird behaviors. Plus you have a hard time injecting your own logic (e.g. logging) for handling cancellation because you basically don&#39;t know where you are being cancelled from.</p> <p>It&#39;s not a problem of language design (except maybe they should standardize some <code>CancellationToken</code> trait, just as they do for <code>Future</code>). It&#39;s not about &quot;<a href=\"https://github.com/Matthias247/rfcs/pull/1\">oh we should mark these <code>Future</code>s as always-run-to-completion</a>&quot;. Of course all <code>Future</code>s should run to completion, either properly or exiting early from an explicit cancellation check. It&#39;s totally a problem of async runtimes. Runtimes should have never advocated primitives such as <code>tokio::select!</code> that dangerously drop <code>Future</code>s, or the idea that cancellation should be done by dropping the <code>Future</code>. It&#39;s an XY problem that these async runtimes imposed upon us that they should fix themselves.</p> <p>Oh and everyone should add <code>CancellationToken</code> parameter to their async functions. But there are languages that do that and I&#39;ve personally never seen programmers of those languages complain about it, so I guess it&#39;s just a price that we&#39;d have to pay for our earlier mistakes.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/arsdragonfly\"> /u/arsdragonfly </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hj1eg9/is_cancelling_futures_by_dropping_them_a/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hj1eg9/is_cancelling_futures_by_dropping_them_a/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Avian 0.2: ECS-Driven Physics for Bevy","url":"https://www.reddit.com/r/rust/comments/1hixvbm/avian_02_ecsdriven_physics_for_bevy/","date":1734740711,"author":"/u/Jondolof","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Jondolof\"> /u/Jondolof </a> <br/> <span><a href=\"https://joonaa.dev/blog/07/avian-0-2\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hixvbm/avian_02_ecsdriven_physics_for_bevy/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Would you say Rust is a general purpose language?","url":"https://www.reddit.com/r/rust/comments/1hivm9w/would_you_say_rust_is_a_general_purpose_language/","date":1734734024,"author":"/u/the_mean_person","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Do you try to use Rust as much as you can on a variety of projects? </p> <p>Or do you stick to using Rust for systems programming and opt for other languages for other purposes?</p> <p>I&#39;m just starting and I find myself writing small scripts in Rust over python all the time, and that feels... Wrong? But oh so right at the same time.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/the_mean_person\"> /u/the_mean_person </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hivm9w/would_you_say_rust_is_a_general_purpose_language/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hivm9w/would_you_say_rust_is_a_general_purpose_language/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"It's been two month since I started to learn this language and I am already able to release functional and pretty-looking cli tool. I love the rust ecosystem.","url":"https://www.reddit.com/r/rust/comments/1hiuicc/its_been_two_month_since_i_started_to_learn_this/","date":1734730848,"author":"/u/ResponsibilityNo1827","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ResponsibilityNo1827\"> /u/ResponsibilityNo1827 </a> <br/> <span><a href=\"https://github.com/1ort/resoy\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hiuicc/its_been_two_month_since_i_started_to_learn_this/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"[Media] crates.io has reached 100 billions downloads ðŸŽ‰","url":"https://www.reddit.com/r/rust/comments/1hiqv2f/media_cratesio_has_reached_100_billions_downloads/","date":1734720889,"author":"/u/kode1985","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kode1985\"> /u/kode1985 </a> <br/> <span><a href=\"https://i.redd.it/cbstg7zhv18e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hiqv2f/media_cratesio_has_reached_100_billions_downloads/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}