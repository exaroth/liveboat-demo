{"id":"82kPqomaPXmNomrHzpZWfbkQxiiNUBTAYKxHR5qZBEpf","title":"Hacker News: Show HN","displayTitle":"HN Show","url":"https://hnrss.org/show?points=60","feedLink":"https://news.ycombinator.com/shownew","items":[{"title":"Show HN: Replace CAPTCHAs with WebAuthn passkeys for bot prevention","url":"https://github.com/singlr-ai/nocaptcha","date":1733682932,"author":"uday_singlr","unread":true,"desc":"","content":"\n<p>I built Nocaptcha after getting frustrated with traditional CAPTCHAs both as a user and developer. WebAuthn passkeys offered a promising alternative that's both more secure and user-friendly.<p>What makes Nocaptcha different:\n- Uses WebAuthn standard instead of puzzle-solving\n- No need for users to remember passwords or solve puzzles\n- Open source<p>Current limitation: \nWorking with W3C WebAuthn Community Group on true passkey disposal for this use case.<p>Looking for feedback particularly on:\n1. Integration experience\n2. User experience compared to traditional CAPTCHAs</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42359067\">https://news.ycombinator.com/item?id=42359067</a></p>\n<p>Points: 71</p>\n<p># Comments: 40</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: A portable hash map in C","url":"https://github.com/e-dant/salmagundi","date":1733688325,"author":"e-dant","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/e-dant/salmagundi\">https://github.com/e-dant/salmagundi</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42359949\">https://news.ycombinator.com/item?id=42359949</a></p>\n<p>Points: 175</p>\n<p># Comments: 90</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Holos – Configure Kubernetes with CUE data structures instead of YAML","url":"https://holos.run/docs/v1alpha5/tutorial/overview/","date":1733755684,"author":"JeffMcCune","unread":true,"desc":"","content":"\n<p>Hi HN!  I’m excited to share Holos, a Go command line tool we wrote to fill the configuration management gap in Kubernetes.  Holos uses CUE to configure software distributed with Helm and Kustomize using a well defined, type safe language eliminating the need to template YAML.  You probably know (or are) someone who has suffered with the complexity of plain text YAML templates and merging multiple values.yaml files together to configure software running in Kubernetes.  We built Holos so we don’t have to template YAML but we can still integrate software distributed with Helm and Kustomize holistically into one unified configuration.<p>At the start of the pandemic I was migrating our platform to Kubernetes from virtual machines managed by Puppet.  My primary goal was to build an observability system similar to what we had when we managed Puppet at Twitter prior to the acquisition.  I started building the observability system with the official prometheus community charts [1], but quickly ran into issues where the individual charts didn’t work with each other.  I was frustrated with how difficult it was to configure these charts.  They weren’t well integrated, so I switched to the kube-prometheus-stack [2] umbrella chart which attempts to solve this integration problem.<p>The umbrella chart got us further but we quickly ran into operational challenges.  Upgrading the chart introduced breaking changes we couldn’t see until they were applied, causing incidents.  We needed to manage secrets securely so we mixed in ExternalSecrets with many of the charts.  We decided to handle these customizations by implementing the rendered manifests pattern [3] using scripts in our CI pipeline.<p>These CI scripts got us further, but we found them costly to maintain.  We needed to be careful to execute them with the same context they were executed in CI.  We realized we were reinventing tools to manage a hierarchy of helm values.yaml files to inject into multiple charts.<p>We saw the value in the rendered manifests pattern but could not find an agreed upon implementation.  I’d been thinking about the comments from the <i>Why are we templating YAML?</i> [4][5] posts and wondering what an answer to this question would look like, so I built a Go command line tool to implement the pattern as a data pipeline.  We still didn’t have a good way to handle the data values.  We were still templating YAML which didn’t catch errors early enough.  It was too easy to render invalid resources Kubernetes rejected.<p>I searched for a solution to manage and merge helm values.  A few HN comments mentioned CUE [6], and an engineer we worked with at Twitter used CUE to configure Envoy at scale, so I gave it a try.  I quickly appreciated how CUE provides both strong type checking and validation of constraints, unifies all configuration data, and provides clarity into where values originate from.<p>Take a look at Holos if you’re looking to implement the rendered manifests pattern or can’t shake that feeling it should be easier to integrate third party software into Kubernetes like we felt.  We recently overhauled our docs to be easier to get started and work locally on your device.<p>In the future we’re planning to use Holos much like Debian uses APT, to integrate open source software into a holistic k8s distribution.<p>[1]: <<a href=\"https://github.com/prometheus-community/helm-charts\">https://github.com/prometheus-community/helm-charts</a>><p>[2]: <<a href=\"https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack\">https://github.com/prometheus-community/helm-charts/tree/mai...</a>><p>[3]: <<a href=\"https://akuity.io/blog/the-rendered-manifests-pattern\" rel=\"nofollow\">https://akuity.io/blog/the-rendered-manifests-pattern</a>><p>[4]: <i>Why are we templating YAML? (2019)</i> - <<a href=\"https://news.ycombinator.com/item?id=19108787\">https://news.ycombinator.com/item?id=19108787</a>><p>[5]: <i>Why are we templating YAML? (2024)</i> - <<a href=\"https://news.ycombinator.com/item?id=39101828\">https://news.ycombinator.com/item?id=39101828</a>><p>[6]: <<a href=\"https://cuelang.org/\" rel=\"nofollow\">https://cuelang.org/</a>></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42366665\">https://news.ycombinator.com/item?id=42366665</a></p>\n<p>Points: 76</p>\n<p># Comments: 33</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Ternary Computer System","url":"https://www.ternary-computing.com/history/CPU-History.html","date":1733768591,"author":"claudio_mos","unread":true,"desc":"","content":"\n<p>Hi everyone!\nI'm an Italian programmer, very passionate about computer architecture. Some time ago I realized that some architectures potentially much superior to the classic VonNeumann, have been forgotten because there were no reliable technical solutions to implement them.<p>One of these architectures particularly struck me and it is the \"Dataflow architecture\", in which there is no Program counter, but the instructions are executed in real contemporaneity whenever the operands are available.<p>In trying to find a technical solution that implements this type of architecture effectively (spoiler: yes, maybe I succeeded but I still have to test the real correct functioning!) I realized that this solution works more than well with three logical states. And at this point I discovered that perhaps it is better to implement a CPU with three states (ternary) instead of a white one. This as a first step to realize my dataflow solution.<p>Obviously a world has opened up to me regarding ternary CPUs, I have discovered not only that they are the best solution implemented for a computing device, but also that an increasing number of university and researcher papers are dealing with them in recent times.<p>This is also thanks to the enormous potential compared to normal CPUs; lower circuit complexity (and also lower consumption and lower heat production) but at the same time the truly formidable information representation capabilities compared to binary counterparts!<p>So here I am creating this ternary CPU and all the hardware and software to be able to use it immediately. In the link you have found some other details, but obviously for questions, suggestions or anything else you can insert your comment here!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42368872\">https://news.ycombinator.com/item?id=42368872</a></p>\n<p>Points: 144</p>\n<p># Comments: 40</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: HackerNews-new-jobs – insights into fresh and recurring job ads","url":"https://github.com/nemanjam/hn-new-jobs","date":1733807047,"author":"nemanja_codes","unread":true,"desc":"","content":"\n<p>The website is meant for people that look for jobs on HackerNews \"Who's Hiring\" threads and want to focus more on fresh ads and companies, or to quickly look up ad history of any company.<p>Github repository: <a href=\"https://github.com/nemanjam/hn-new-jobs\">https://github.com/nemanjam/hn-new-jobs</a><p>Demo website: <a href=\"https://hackernews-new-jobs.arm1.nemanjamitic.com\" rel=\"nofollow\">https://hackernews-new-jobs.arm1.nemanjamitic.com</a><p>I used Algolia API as a data source, along with scheduled task that parses new threads few times at the beginning of each month. The extracted data is then stored in SQLite database for fast querying, and the results are cached with Keyv for faster page responses. I will see in the future how much traffic the website receives and if this stack is performant enough. For the website I used Next.js app with default ShadcnUI components and charts. I just wanted a quick functional prototype to test how much public interest is there for an app with functionality like this.<p>If you are interested in more implementation details you can find them in the Readme file on Github.<p>The project is free and open source. Feel free to use, self-host, fork and modify, and contribute. I would love to hear your impressions and suggestions and look forward to discussing features and technical details.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42373936\">https://news.ycombinator.com/item?id=42373936</a></p>\n<p>Points: 127</p>\n<p># Comments: 63</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I made Gyroscopic Gyro Sandwiches","url":"https://transistor-man.com/gyroscopic_gyros.html","date":1733807834,"author":"transistor-man","unread":true,"desc":"","content":"\n<p>Have you noticed that a gyro sandwich is only cooked in one axis? What a missed opportunity.<p>The following details an elaborate way to slow cook food, using a handmade contraption. Not only is it tasty, it's mesmerizing. Feel free to copy the design for your own festivities.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42373996\">https://news.ycombinator.com/item?id=42373996</a></p>\n<p>Points: 108</p>\n<p># Comments: 16</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Don't let your billion-dollar ideas die","url":"https://ideaharbor.xyz/","date":1733870715,"author":"curiousmindset","unread":true,"desc":"","content":"\n<p>Most great ideas are either forgotten or die in our notes app. So made this simple website in a day.<p>1. Save your ideas<p>2. Set an expiry<p>3. After expiry, the ideas goes public. So if you don't work on them, someone else probably will</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42382506\">https://news.ycombinator.com/item?id=42382506</a></p>\n<p>Points: 166</p>\n<p># Comments: 124</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Lfi – a lazy functional sync, async, and concurrent iteration library","url":"https://lfi.dev/","date":1733947650,"author":"tomeraberbach","unread":true,"desc":"","content":"\n<p>Hey HN! Roughly 4 years ago I started building a lazy functional iteration library for JS/TS. I had a few goals for the library:<p>- Supporting sync, sequential async, and concurrent async iteration<p>- Limiting it to a small number of orthogonal concepts that compose beautifully to solve problems<p>- Making it fully tree-shakeable<p>I built it for myself and have (mostly) been its only user as I refined it. I've used it in lots of personal projects and really enjoyed it.<p>I recently decided it would be nice to spread that enjoyment so I created a documentation website complete with a playground where you can try out the library.<p>I hope you enjoy using it as much as I do! Looking forward to hearing your thoughts :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42392267\">https://news.ycombinator.com/item?id=42392267</a></p>\n<p>Points: 93</p>\n<p># Comments: 44</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Quantus – LeetCode for Financial Modeling","url":"https://quantus.finance/","date":1734005099,"author":"misstercool","unread":true,"desc":"","content":"\n<p>Hi everyone,<p>I wanted to share Quantus, a finance learning and practice platform I’m building out of my own frustration with traditional resources.<p>As a dual major in engineering and finance who started my career at a hedge fund, I found it challenging to develop hands-on financial modeling skills using existing tools. Platforms like Coursera, Udemy, Corporate Finance Institute (CFI), and Wall Street Prep (WSP) primarily rely on video-based tutorials. While informative, these formats often lack the dynamic, interactive, and repetitive practice necessary to build real expertise.<p>For example, the learning process often involves:<p>- Replaying videos multiple times to grasp key concepts.<p>- Constantly switching between tutorials and Excel files.<p>- Dealing with occasional discrepancies between tutorial numbers and the provided Excel materials.<p>To solve these problems, I created Quantus—an interactive platform where users can learn finance by trying out formulas or building financial models directly in an Excel-like environment. Inspired by LeetCode, the content is organized into three levels—easy, medium, and hard—making it accessible for beginners while still challenging for advanced users.<p>Our growing library of examples includes:<p>- 3-statement financial models<p>- Discounted Cash Flow (DCF) analysis<p>- Leveraged Buyouts (LBO)<p>- Mergers and Acquisitions (M&A)<p>Here’s a demo video to showcase the platform in action. <a href=\"https://www.youtube.com/watch?v=bDRNHgBERLQ\" rel=\"nofollow\">https://www.youtube.com/watch?v=bDRNHgBERLQ</a><p>I’d love to hear your thoughts and feedback! Let me know what other features or examples you’d find useful.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42398471\">https://news.ycombinator.com/item?id=42398471</a></p>\n<p>Points: 272</p>\n<p># Comments: 50</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Kubernetes Spec Explorer","url":"https://kubespec.dev/","date":1734015734,"author":"goenning","unread":true,"desc":"","content":"\n<p>I built an interactive explorer for Kubernetes resources spec<p>A few things included:<p>- Tree view with schema, type and description of all native resources\n- History changes since version X (properties added/removed/modified)\n- Examples of some resources that you can easily copy as a starting point\n- Supports all versions since X, including the newly released 1.32\n- I also want to add support for popular CRD, but I’m not sure how I’ll do that yet, I’m open to suggestions!<p>Everything is auto generated based on the OpenAPI spec, with some manual inputs for examples and external links.<p>Hope you like it and if there’s anything else you think it could be useful just let me know.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42399701\">https://news.ycombinator.com/item?id=42399701</a></p>\n<p>Points: 210</p>\n<p># Comments: 30</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Bring-your-own-key browser extension for summarizing HN posts with LLMs","url":"https://github.com/ivanyu/hn-tldr-extension","date":1734024589,"author":"ivanyu","unread":true,"desc":"","content":"\n<p>Hi Hacker News,<p>I developed an open source browser extension for summarizing Hacker News articles with OpenAI and Anthropic LLMs. It currently supports Chrome [1] and Firefox [2] (desktop).<p>The extension adds the summarize buttons to the HN front page and article pages.<p>It is bring-your-own-key, i.e. there's no back end behind it and the usage is free, you insert your API key and pay only for tokens to your LLM provider.<p>[1] <a href=\"https://chromewebstore.google.com/detail/hacker-news-tldr/oobfhfehiidchknmihplkgknbjolanlk\" rel=\"nofollow\">https://chromewebstore.google.com/detail/hacker-news-tldr/oo...</a><p>[2] <a href=\"https://addons.mozilla.org/ru/firefox/addon/hacker-news-tl-dr/\" rel=\"nofollow\">https://addons.mozilla.org/ru/firefox/addon/hacker-news-tl-d...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42401227\">https://news.ycombinator.com/item?id=42401227</a></p>\n<p>Points: 72</p>\n<p># Comments: 31</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I made the slowest, most expensive GPT","url":"https://ithy.com/","date":1734102307,"author":"wluk","unread":true,"desc":"","content":"\n<p>This is another one of my automate-my-life projects - I'm constantly asking the same question to different AIs since there's always the hope of getting a better answer somewhere else. Maybe ChatGPT's answer is too short, so I ask Perplexity. But I realize that's hallucinated, so I try Gemini. That answer sounds right, but I cross-reference with Claude just to make sure.<p>This doesn't really apply to math/coding (where o1 or Gemini can probably one-shot an excellent response), but more to online search, where information is more fluid and there's no \"right\" search engine + text restructuring + model combination every time. Even o1 doesn't have online search, so it's obviously a hard problem to solve.<p>An example is something like \"best ski resorts in the US\", which will get a different response from every GPT, but most of their rankings won't reflect actual skiers' consensus - say, on Reddit <a href=\"https://www.reddit.com/r/skiing/comments/sew297/updated_us_ski_areas_tier_list_v3_128_please\" rel=\"nofollow\">https://www.reddit.com/r/skiing/comments/sew297/updated_us_s...</a> - because there's so many opinions floating around, a one-shot RAG search + LLM isn't going to have enough context to find how everyone thinks. And obviously, offline GPTs like o1 and Sonnet/Haiku aren't going to have the latest updates if a resort closes for example.<p>So I’ve spent the last few months experimenting with a new project that's basically the most expensive GPT I’ll ever run. It runs search queries through ChatGPT, Claude, Grok, Perplexity, Gemini, etc., then aggregates the responses. For added financial tragedy, in-between it also uses multiple embedding models and performs iterative RAG searches through different search engines. This all functions as sort of like one giant AI brain. So I pay for every search, then every embedding, then every intermediary LLM input/output, then the final LLM input/output. On average it costs about 10 to 30 cents per search. It's also extremely slow.<p><a href=\"https://ithy.com\" rel=\"nofollow\">https://ithy.com</a><p>I know that sounds absurdly overkill, but that’s kind of the point. The goal is to get the most accurate and comprehensive answer possible, because it's been vetted by a bunch of different AIs, each sourcing from different buckets of websites. Context limits today are just large enough that this type of search and cross-model iteration is possible, where we can determine the \"overlap\" between a diverse set of text to determine some sort of consensus. The idea is to get online answers that aren't attainable from any single AI. If you end up trying this out, I'd recommend comparing Ithy's output against the other GPTs to see the difference.<p>It's going to cost me a fortune to run this project (I'll probably keep it online for a month or two), but I see it as an exploration of what’s possible with today’s model APIs, rather than something that’s immediately practical. Think of it as an online o1 (without the $200/month price tag, though I'm offering a $29/month Pro plan to help subsidize). If nothing else, it’s a fun (and pricey) thought experiment.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42409056\">https://news.ycombinator.com/item?id=42409056</a></p>\n<p>Points: 71</p>\n<p># Comments: 57</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Rain hashes – well designed, simple and fast variable sized hashes","url":"https://github.com/DOSAYGO-Research/rain","date":1734104782,"author":"keepamovin","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/DOSAYGO-Research/rain\">https://github.com/DOSAYGO-Research/rain</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42409577\">https://news.ycombinator.com/item?id=42409577</a></p>\n<p>Points: 77</p>\n<p># Comments: 45</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Imposter Attack – Among Us-themed infrared game made with ESP32","url":"https://blog.langworth.com/imposter-attack","date":1734109219,"author":"statico","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://blog.langworth.com/imposter-attack\">https://blog.langworth.com/imposter-attack</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42410229\">https://news.ycombinator.com/item?id=42410229</a></p>\n<p>Points: 194</p>\n<p># Comments: 27</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: @smoores/epub, a JavaScript library for working with EPUB publications","url":"https://www.npmjs.com/package/@smoores/epub","date":1734119546,"author":"smoores","unread":true,"desc":"","content":"\n<p>Howdy! I've just written a blog post about this, and I figured I would share it here: <a href=\"https://smoores.dev/post/announcing_smoores_epub/\" rel=\"nofollow\">https://smoores.dev/post/announcing_smoores_epub/</a>. As I've been working on Storyteller[1], I've been developing a library for working with EPUB files, since that's a large amount of the work that Storyteller does. After a friend asked for advice on creating EPUB books in Node.js, I decided to publish Storyteller's EPUB library as a standalone NPM package. I really love the EPUB spec, and I think the Node.js developer community deserves an actively maintained library for working with it!<p>[1]: <a href=\"https://smoores.gitlab.io/storyteller\" rel=\"nofollow\">https://smoores.gitlab.io/storyteller</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42411727\">https://news.ycombinator.com/item?id=42411727</a></p>\n<p>Points: 147</p>\n<p># Comments: 43</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Performant intracontinental public transport routing in Rust","url":"https://github.com/ellenhp/farebox","date":1734134428,"author":"ellenhp","unread":true,"desc":"","content":"\n<p>I made a public transport route planning program that's capable of planning journeys across Europe or North America! There's only one other FOSS project I know of (MOTIS/Transitous) that can do transit routing at this scale, and in the testing I've performed mine is about 50x faster. I've spent a few weeks on this project now and it's getting to the point where I can show it off, but the API responses need a lot of work before they're usable for any downstream application.<p>Example query (Berlin to Barcelona): <a href=\"https://farebox.airmail.rs/plan/52.5176122,13.4180261/41.380458,2.1455451\" rel=\"nofollow\">https://farebox.airmail.rs/plan/52.5176122,13.4180261/41.380...</a><p>There are some bugs still. Notably, it's not capable of planning the return trip for this route, nor the reverse of the trip from Seattle to NYC that I gave in the blog post.<p>Blog post: <a href=\"https://blog.ellenhp.me/performant-intracontinental-transit-routing-in-rust\" rel=\"nofollow\">https://blog.ellenhp.me/performant-intracontinental-transit-...</a><p>Repo: <a href=\"https://github.com/ellenhp/farebox\">https://github.com/ellenhp/farebox</a><p>Side-note but in the past some have criticized my writing style and it's been a bit hurtful at times but if you have <i>constructive</i> feedback on the blog post I'd appreciate it. I'm trying to get better at writing. :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42413464\">https://news.ycombinator.com/item?id=42413464</a></p>\n<p>Points: 159</p>\n<p># Comments: 24</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""}]}