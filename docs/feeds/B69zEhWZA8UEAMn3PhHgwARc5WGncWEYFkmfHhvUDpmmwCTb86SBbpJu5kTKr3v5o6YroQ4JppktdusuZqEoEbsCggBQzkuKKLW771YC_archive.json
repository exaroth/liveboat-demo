{"id":"B69zEhWZA8UEAMn3PhHgwARc5WGncWEYFkmfHhvUDpmmwCTb86SBbpJu5kTKr3v5o6YroQ4JppktdusuZqEoEbsCggBQzkuKKLW771YC","title":"code.talks (ehem. Developer Conference)","displayTitle":"Podcast - CodeTalks","url":"https://www.youtube.com/feeds/videos.xml?channel_id=UCfuj1MM5p37CRzWYPv_PsWA","feedLink":"https://www.youtube.com/channel/UCfuj1MM5p37CRzWYPv_PsWA","items":[{"title":"Rolling out Service Levels across a large org","url":"https://www.youtube.com/watch?v=LrxA7IdIzWo","date":1734445911,"author":"code.talks (ehem. Developer Conference)","unread":true,"desc":"","content":"by Alex Ewerlöf\n\nA crash course on SLI, SLO, and SLA with examples, pitfalls, and tips. The goal is to shift the assumption that “system should never fail” to acknowledging that complex systems fail all the time, so let’s talk about “what is failure” (which shapes SLI) and “how much failure can we tolerate” (shapes the error budget and in turn, SLO). Alex shares his experience rolling out service levels across a large organization through a 4 step adoption model and ends with an experiment they're running at Volvo to map system reliability to organizational accountability.","flags":null,"enclosureUrl":"https://www.youtube.com/v/LrxA7IdIzWo?version=3","enclosureMime":""},{"title":"Achieving Weekly Releases: A Technical Deep Dive into Our Development Process","url":"https://www.youtube.com/watch?v=QmM-Z0HyPzE","date":1732271683,"author":"code.talks (ehem. Developer Conference)","unread":true,"desc":"","content":"by Mihri Minaz (Co-founder @ beams)\n\nAs a small team of six, we shipped 15 new versions of beams in 24 weeks, nearly one per week. We achieved this by gathering feedback from email, Slack, LinkedIn, our feature request page, and UI/UX research meetings to inform our roadmap. Prioritizing is crucial in a startup, balancing bugs, hot fixes, new features, and improvements, focusing on impactful tasks to keep core functionalities unblocked. We don't use sprints or endless backlogs; instead, we prefer brainstorming sessions, with developers crossing roles to prevent bottlenecks. Using Linear, our workflow moves tasks from Backlog to Done, ensuring tasks are well-defined before development, enabling rapid, iterative improvements and frequent releases.","flags":null,"enclosureUrl":"https://www.youtube.com/v/QmM-Z0HyPzE?version=3","enclosureMime":""}]}