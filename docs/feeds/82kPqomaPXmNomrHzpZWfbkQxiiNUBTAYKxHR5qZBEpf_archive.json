{"id":"82kPqomaPXmNomrHzpZWfbkQxiiNUBTAYKxHR5qZBEpf","title":"Hacker News: Show HN","displayTitle":"HN Show","url":"https://hnrss.org/show?points=60","feedLink":"https://news.ycombinator.com/shownew","items":[{"title":"Show HN: Gribstream.com – Historical Weather Forecast API","url":"https://gribstream.com/","date":1734658062,"author":"ElPeque","unread":true,"desc":"","content":"\n<p>Hello! I'd like share about my sideproject <a href=\"https://gribstream.com\" rel=\"nofollow\">https://gribstream.com</a><p>It is an API to extract weather forecasting data from the National Blend of Models (NBM) <a href=\"https://vlab.noaa.gov/web/mdl/nbm\" rel=\"nofollow\">https://vlab.noaa.gov/web/mdl/nbm</a> and the Global Forecast System (GFS) <a href=\"https://www.ncei.noaa.gov/products/weather-climate-models/global-forecast\" rel=\"nofollow\">https://www.ncei.noaa.gov/products/weather-climate-models/gl...</a> . The data is freely available from AWS S3 in grib2 format which can be great but also really hard (and resource intensive) to work with, especially if you want to extract timeseries over long periods of time based on a few coordinates. Being able to query and extract only what you want out of terabytes of data in just an http request is really nice.<p>What is cool about this dataset is that it has hourly data with full forecast history so you can use the dataset to train and forecast other parameters and have proper backtesting because you can see the weather \"as of\" points in time in the past. It has a free tier so you can play with it. There is a long list of upcoming features I intend to implement and I would very much appreciate both feedback on what is currently available and on what features you would be most interested in seeing. Like... I'm not sure if it would be better to support a few other datasets or focus on supporting aggregations.<p>Features include:<p>- A free tier to help you get started\n- Full history of weather forecasts\n- Extract timeseries for thousands of coordinates, for months at a time, at hourly resolution in a single http request taking only seconds.\n- Supports as-of/time-travel, indispensable for proper backtesting of derivative models\n- Automatic gap filling of any missing data with the next best (most recent) forecast.<p>Please try it out and let me know what you think :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42467449\">https://news.ycombinator.com/item?id=42467449</a></p>\n<p>Points: 62</p>\n<p># Comments: 28</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Mizu.js – Lightweight HTML templating library for any-side rendering","url":"https://mizu.sh/","date":1734632755,"author":"lowlighter","unread":true,"desc":"","content":"\n<p>Hey HN,<p>I'd like to share a fun project I've been working on: mizu.js.<p>It's a js library that add functional attributes support into your html, designed to be a simple and flexible alternative to fully-fledged web frameworks (such as Vue, React, and Angular), while offering more capabilities than other lightweight options (like Alpine.js and htmx).<p>As it's written using modern ES features and due to its isomorphic nature, it can be run in both browsers and runtimes (Node, Deno, Bun) without any changes.\nThis makes it ideal for client-side and server-side rendering, as well as static site generation, whichever environment you prefer.<p>Just include the script in any web page (or backend) to get started. \nYou can template content, bind attributes, add interactivity, handle HTTP interactions, create custom components, and much more — all out of the box, without any configuration, transpilation steps, or builds.<p>I hope you'll find mizu.js as exciting and useful as I do and I'd love to get your feedback!\nYou can learn more about it at <a href=\"https://mizu.sh\" rel=\"nofollow\">https://mizu.sh</a>!<p>Online playground: <a href=\"https://mizu.sh/playground\" rel=\"nofollow\">https://mizu.sh/playground</a> \nCustom builder: <a href=\"https://mizu.sh/build\" rel=\"nofollow\">https://mizu.sh/build</a>\nCode coverage: <a href=\"https://mizu.sh/coverage\" rel=\"nofollow\">https://mizu.sh/coverage</a>\nGitHub: <a href=\"https://github.com/lowlighter/mizu\">https://github.com/lowlighter/mizu</a><p>## Motivation ##<p>Nowadays, setting up a complete environment and installing thousands of packages is often required just to create a simple \"Hello World\" page. \nYet, with the current ECMAScript standard, vanilla JS has never been more powerful. \nIt offers built-in custom HTML components, proxies for changes tracking, weak references for better memory management, and many new data structures and methods.<p>So why is web development still insanely complex?<p>mizu.js aims to avoid adding bloat on top of native features, and instead focus on providing convenience helpers. \nIt's basically \"glue\" around all these native features with added sugar, a recipe for a lightweight yet powerful utility.<p>All evaluated expressions are interpreted as vanilla JavaScript, and you add your instructions directly into your HTML. \nSo if you know already know about JS/HTML, then you're already 80% know of how to use mizu.js (add an extra 10% if you've used Vue, Alpine.js or htmx in the past as some syntax and concepts are inspired by it), the rest is basically just remembering the directive names. \nThe learning curve is that small.<p>Also, you may have heard of <a href=\"https://matcha.mizu.sh\" rel=\"nofollow\">https://matcha.mizu.sh</a>, a CSS stylesheet to instantly make your web page stylized. \nWell, it's a great companion to mizu.js. With both of them, you can create MVPs for your projects super fast!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42464310\">https://news.ycombinator.com/item?id=42464310</a></p>\n<p>Points: 203</p>\n<p># Comments: 82</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: WebGPU Tech Demo","url":"https://gnikoloff.github.io/webgpu-sponza-demo/","date":1734628442,"author":"georginikolov","unread":true,"desc":"","content":"\n<p>WebGPU tech demo running in modern browsers showcasing various rendering techniques like deferred rendering with 400+ dynamic lights, Hi-Z screen space reflections and cascaded shadow mapping.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42463525\">https://news.ycombinator.com/item?id=42463525</a></p>\n<p>Points: 133</p>\n<p># Comments: 76</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Movie Iris - Visualizing Films Through Color Extraction","url":"https://github.com/LoSinCos/movie-iris","date":1734622155,"author":"losincos","unread":true,"desc":"","content":"\n<p>I saw someone post these on reddit 4 years ago, and I really wanted to make them. I was surprised they didn't open source their code, so I rebuilt it.<p>Lots of things I would do differently now haha, but anyway, figured someone here might find it interesting.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42462348\">https://news.ycombinator.com/item?id=42462348</a></p>\n<p>Points: 73</p>\n<p># Comments: 37</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Postgres as a VectorDB GUI","url":"https://github.com/Z-Gort/Reservoirs-Lab","date":1734575316,"author":"z-gort","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/Z-Gort/Reservoirs-Lab\">https://github.com/Z-Gort/Reservoirs-Lab</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42457782\">https://news.ycombinator.com/item?id=42457782</a></p>\n<p>Points: 154</p>\n<p># Comments: 22</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: K8s Cleaner – Roomba for Kubernetes","url":"https://sveltos.projectsveltos.io/k8sCleaner.html","date":1734553661,"author":"pescerosso","unread":true,"desc":"","content":"\n<p>Hello HN community!<p>I'm excited to share K8s Cleaner, a tool designed to help you clean up your Kubernetes clusters.<p>As Kubernetes environments grow, they often accumulate unused resources, leading to confusion, waste, and clutter. K8s-cleaner simplifies the process of identifying and removing unnecessary components.<p>The tool scans your Kubernetes clusters for unused or orphaned resources—including pods, services, ingresses, and secrets—and removes them safely. You can fully customize which resources to scan and delete, maintaining complete control over what stays and what goes.<p>Getting Started:<p>Visit <a href=\"https://sveltos.projectsveltos.io/k8sCleaner.html\" rel=\"nofollow\">https://sveltos.projectsveltos.io/k8sCleaner.html</a> and click the \"Getting Started\" button to try K8s-cleaner.<p>Key Features:<p>- Easy to Use: No complex setup or configuration required—perfect for developers and operators alike\n- Open Source: Modify the code to better fit your specific needs\n- Community Driven: We welcome your feedback, feature ideas, and bug reports to help improve K8s-cleaner for everyone<p>I'm here to answer questions, address feedback, and discuss ideas for future improvements.<p>Looking forward to your thoughts! And make sure your all you kubernetes clusters are sparkling clean for the holidays. :-)<p>Simone</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42454723\">https://news.ycombinator.com/item?id=42454723</a></p>\n<p>Points: 67</p>\n<p># Comments: 55</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Brisk – Cross-Platform C++ GUI Framework: Declarative, Reactive, Fast","url":"https://github.com/brisklib/brisk","date":1734534113,"author":"danlcaza","unread":true,"desc":"","content":"\n<p>Brisk is an open-source C++ GUI framework with a declarative approach, offering powerful data bindings, GPU-accelerated graphics, and dynamic widget management. It supports macOS, Linux, Windows, and simplifies UI creation with modern paradigms and CSS-like layouts.\nInitially developed for a graphics-intensive project with a complex and dynamic GUI, the framework is currently under active development.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42450963\">https://news.ycombinator.com/item?id=42450963</a></p>\n<p>Points: 81</p>\n<p># Comments: 79</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: ImPlot3D – A 3D Plotting Library for Dear ImGui","url":"https://github.com/brenocq/implot3d","date":1734510252,"author":"brenocq","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/brenocq/implot3d\">https://github.com/brenocq/implot3d</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42448913\">https://news.ycombinator.com/item?id=42448913</a></p>\n<p>Points: 168</p>\n<p># Comments: 42</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Adventures in OCR","url":"https://blog.medusis.com/38_Adventures+in+OCR.html","date":1734454854,"author":"bambax","unread":true,"desc":"","content":"\n<p>Hello HN!<p>In a recent \"Ask HN: What are you working on?\" thread, I mentioned I was working on OCRing a large book:<p><a href=\"https://news.ycombinator.com/item?id=41971614\">https://news.ycombinator.com/item?id=41971614</a><p>The post generated some interest so I thought I would keep HN posted.<p>The book is Saint-Simon’s Memoirs -- an invaluable historical account of the French court under Louis XIV, full of wit, sharp observations, and of incredible literary value. I'm OCRing the edition of reference made between 1879-1930, that contains a lot of comments and footnotes: 45 volumes, ~27,000 pages.<p>Here's a link to a blog post that describes the techniques used so far (the project is still ongoing):<p><a href=\"https://blog.medusis.com/38_Adventures+in+OCR.html\" rel=\"nofollow\">https://blog.medusis.com/38_Adventures+in+OCR.html</a><p>But you may also directly access the result here:<p><a href=\"https://divers.medusis.net/boislisle/pub\" rel=\"nofollow\">https://divers.medusis.net/boislisle/pub</a><p>This web app (not optimized for mobile, sorry) solves a tricky problem of preloading images efficiently. In short: preloading the next image isn't enough, since browsers will repaint if an image is moved, or scaled. Or browsers won't paint at all if visibility is hidden or opacity is zero, and will paint only when those values change. On an average, slow machine, this takes visible time. But if an image is simply behind another element, it will be painted, and the removal of the covering element or changing the z-index will not trigger a repaint.<p>(Preloading is important because it lets one review results fast; if one has to wait 150-200 ms between images it's simply discouraging).<p>Would love to hear feedback; happy to answer any question!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42443022\">https://news.ycombinator.com/item?id=42443022</a></p>\n<p>Points: 118</p>\n<p># Comments: 45</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I built an open-source data pipeline tool in Go","url":"https://github.com/bruin-data/bruin","date":1734453631,"author":"karakanb","unread":true,"desc":"","content":"\n<p>Every data pipeline job I had to tackle required quite a few components to set up:<p>- One tool to ingest data<p>- Another one to transform it<p>- If you wanted to run Python, set up an orchestrator<p>- If you need to check the data,  a data quality tool<p>Let alone this being hard to set up and taking time, it is also pretty high-maintenance. I had to do a lot of infra work, and while this being billable hours for me I didn’t enjoy the work at all. For some parts of it, there were nice solutions like dbt, but in the end for an end-to-end workflow, it didn’t work. That’s why I decided to build an end-to-end solution that could take care of data ingestion, transformation, and Python stuff. Initially, it was just for our own usage, but in the end, we thought this could be a useful tool for everyone.<p>In its core, Bruin is a data framework that consists of a CLI application written in Golang, and a VS Code extension that supports it with a local UI.<p>Bruin supports quite a few stuff:<p>- Data ingestion using ingestr (<a href=\"https://github.com/bruin-data/ingestr\">https://github.com/bruin-data/ingestr</a>)<p>- Data transformation in SQL & Python, similar to dbt<p>- Python env management using uv<p>- Built-in data quality checks<p>- Secrets management<p>- Query validation & SQL parsing<p>- Built-in templates for common scenarios, e.g. Shopify, Notion, Gorgias, BigQuery, etc<p>This means that you can write end-to-end pipelines within the same framework and get it running with a single command. You can run it on your own computer, on GitHub Actions, or in an EC2 instance somewhere. Using the templates, you can also have ready-to-go pipelines with modeled data for your data warehouse in seconds.<p>It includes an open-source VS Code extension as well, which allows working with the data pipelines locally, in a more visual way. The resulting changes are all in code, which means everything is version-controlled regardless, it just adds a nice layer.<p>Bruin can run SQL, Python, and data ingestion workflows, as well as quality checks. For Python stuff, we use the awesome (and it really is awesome!) uv under the hood, install dependencies in an isolated environment, and install and manage the Python versions locally, all in a cross-platform way. Then in order to manage data uploads to the data warehouse, it uses dlt under the hood to upload the data to the destination. It also uses Arrow’s memory-mapped files to easily access the data between the processes before uploading them to the destination.<p>We went with Golang because of its speed and strong concurrency primitives, but more importantly, I knew Go better than the other languages available to me and I enjoy writing Go, so there’s also that.<p>We had a small pool of beta testers for quite some time and I am really excited to launch Bruin CLI to the rest of the world and get feedback from you all. I know it is not often to build data tooling in Go but I believe we found ourselves in a nice spot in terms of features, speed, and stability.<p><a href=\"https://github.com/bruin-data/bruin\">https://github.com/bruin-data/bruin</a><p>I’d love to hear your feedback and learn more about how we can make data pipelines easier and better to work with, looking forward to your thoughts!<p>Best, Burak</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42442812\">https://news.ycombinator.com/item?id=42442812</a></p>\n<p>Points: 196</p>\n<p># Comments: 46</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: SmartHome – An Adventure Game","url":"https://smarthome.steviep.xyz/","date":1734282330,"author":"scyclow","unread":true,"desc":"","content":"\n<p>SmartHome is a free, browser-based game written in vanilla JavaScript and no libraries. I don't want to spoil anything about the gameplay, but if you like text adventures, point-and-click adventure games, puzzle games, escape room games, art games, incremental games, cozy games, and/or RPGs, then this might be your speed.<p>If you find it too hard and don't mind some mild spoilers, then check out the hints page: <a href=\"https://smarthome.steviep.xyz/help\" rel=\"nofollow\">https://smarthome.steviep.xyz/help</a><p>Enjoy!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42424508\">https://news.ycombinator.com/item?id=42424508</a></p>\n<p>Points: 268</p>\n<p># Comments: 89</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I built an embeddable Unicode library with MISRA C conformance","url":"https://railgunlabs.com/unicorn/","date":1734277287,"author":"hgs3","unread":true,"desc":"","content":"\n<p>Hello, everyone. I built Unicorn: an embeddable MISRA C:2012 implementation of essential Unicode Algorithms.<p>Unicorn is designed to be fully customizable: you can select which Unicode algorithms and character properties are included or excluded from compilation. You can also exclude Unicode character blocks wholesale for scripts your application does not support. It's perfect for resource constrained devices like microcontrollers and IoT devices.<p>About me: I quit my Big Corp job a few years back to pursue my passion for software development and this is one of my first commercial releases.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42423988\">https://news.ycombinator.com/item?id=42423988</a></p>\n<p>Points: 116</p>\n<p># Comments: 48</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Open-sourcing my failed startup Buzee – A file search application","url":"https://github.com/gsidhu/buzee-tauri","date":1734186299,"author":"thatgurjot","unread":true,"desc":"","content":"\n<p>Buzee is a file search application that helps you find your files effortlessly.<p>As a modern-day knowledge worker, I have several thousand documents, presentations and other files on my computer. I built Buzee in my free time to help me weave my way through this maze. I have been using it pretty much everyday since the day I built it - and I love it!<p>I thought I could turn Buzee into a startup. I reached out to offices and helped set it up for them. But it didn't pan out.<p>I am now letting go of this project because I have other priorities in life.<p>Please feel free to do with this project as you wish. I am happy to help you get started with the codebase.<p>Do share what you build. I would love to see it!<p>Cheers</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42417330\">https://news.ycombinator.com/item?id=42417330</a></p>\n<p>Points: 228</p>\n<p># Comments: 84</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: A simple web game to help learn chords and basic progressions","url":"https://chords.yottanami.com/","date":1734174314,"author":"yottanami","unread":true,"desc":"","content":"\n<p>Hi Hacker News,<p>I've created Chord Nebula, a simple web-based game designed to help users learn and practice piano chords, basic progressions, and harmony fundamentals. The game integrates with MIDI keyboards, allowing you to play chords in real-time and receive immediate feedback based on the key you choose.<p>GitHub Repository: \n<a href=\"https://github.com/yottanami/chord_nebula\">https://github.com/yottanami/chord_nebula</a>\nLive Demo: <a href=\"https://chords.yottanami.com\" rel=\"nofollow\">https://chords.yottanami.com</a><p>Requirements:\nTo use Chord Nebula, you'll need a MIDI keyboard connected to your computer.<p>Current Status:\nChord Nebula is still a simple project. I'm committed to improving it based on user feedback and would greatly appreciate any support or contributions from the community.<p>Looking for Feedback and Collaborators:\nI'm eager to hear your thoughts on Chord Nebula! Whether it's suggestions for new features, improvements, or bug reports, your feedback is invaluable. Additionally, if you're interested in collaborating to enhance the game, feel free to reach out or contribute directly via GitHub.<p>Thanks for taking the time to check out Chord Nebula!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42416258\">https://news.ycombinator.com/item?id=42416258</a></p>\n<p>Points: 213</p>\n<p># Comments: 51</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Svader – Create GPU-rendered Svelte components","url":"https://github.com/sockmaster27/svader","date":1734174049,"author":"sokmastr","unread":true,"desc":"","content":"\n<p>Svader is a library for rendering 2D shaders on Svelte websites, using either WebGL or WebGPU.<p>It's streamlined for the specific use case of rendering 2D graphics using fragment shaders as an alternative to SVG or the JS canvas API, so it's not meant for doing 3D objects like three.js, for example.<p>This started as something I needed for my own project, but I eventually decided to split it into a separate library. I've since found that this use case fits really well into the Svelte compiler-based approach and its fine-grained reactivity system.<p>In general, I think using shaders like these has some really positive upsides compared to traditional ways of doing graphics on the web — not just for games and stuff, but also for something like data visualizations and aesthetic details. My dream is that one day, you'll see web developers using small, isolated shader components ubiquitously across web applications, just as naturally as something like SVGs are used today.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42416230\">https://news.ycombinator.com/item?id=42416230</a></p>\n<p>Points: 189</p>\n<p># Comments: 41</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Performant intracontinental public transport routing in Rust","url":"https://github.com/ellenhp/farebox","date":1734134428,"author":"ellenhp","unread":true,"desc":"","content":"\n<p>I made a public transport route planning program that's capable of planning journeys across Europe or North America! There's only one other FOSS project I know of (MOTIS/Transitous) that can do transit routing at this scale, and in the testing I've performed mine is about 50x faster. I've spent a few weeks on this project now and it's getting to the point where I can show it off, but the API responses need a lot of work before they're usable for any downstream application.<p>Example query (Berlin to Barcelona): <a href=\"https://farebox.airmail.rs/plan/52.5176122,13.4180261/41.380458,2.1455451\" rel=\"nofollow\">https://farebox.airmail.rs/plan/52.5176122,13.4180261/41.380...</a><p>There are some bugs still. Notably, it's not capable of planning the return trip for this route, nor the reverse of the trip from Seattle to NYC that I gave in the blog post.<p>Blog post: <a href=\"https://blog.ellenhp.me/performant-intracontinental-transit-routing-in-rust\" rel=\"nofollow\">https://blog.ellenhp.me/performant-intracontinental-transit-...</a><p>Repo: <a href=\"https://github.com/ellenhp/farebox\">https://github.com/ellenhp/farebox</a><p>Side-note but in the past some have criticized my writing style and it's been a bit hurtful at times but if you have <i>constructive</i> feedback on the blog post I'd appreciate it. I'm trying to get better at writing. :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42413464\">https://news.ycombinator.com/item?id=42413464</a></p>\n<p>Points: 167</p>\n<p># Comments: 24</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: @smoores/epub, a JavaScript library for working with EPUB publications","url":"https://www.npmjs.com/package/@smoores/epub","date":1734119546,"author":"smoores","unread":true,"desc":"","content":"\n<p>Howdy! I've just written a blog post about this, and I figured I would share it here: <a href=\"https://smoores.dev/post/announcing_smoores_epub/\" rel=\"nofollow\">https://smoores.dev/post/announcing_smoores_epub/</a>. As I've been working on Storyteller[1], I've been developing a library for working with EPUB files, since that's a large amount of the work that Storyteller does. After a friend asked for advice on creating EPUB books in Node.js, I decided to publish Storyteller's EPUB library as a standalone NPM package. I really love the EPUB spec, and I think the Node.js developer community deserves an actively maintained library for working with it!<p>[1]: <a href=\"https://smoores.gitlab.io/storyteller\" rel=\"nofollow\">https://smoores.gitlab.io/storyteller</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42411727\">https://news.ycombinator.com/item?id=42411727</a></p>\n<p>Points: 155</p>\n<p># Comments: 43</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Imposter Attack – Among Us-themed infrared game made with ESP32","url":"https://blog.langworth.com/imposter-attack","date":1734109219,"author":"statico","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://blog.langworth.com/imposter-attack\">https://blog.langworth.com/imposter-attack</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42410229\">https://news.ycombinator.com/item?id=42410229</a></p>\n<p>Points: 201</p>\n<p># Comments: 28</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Rain hashes – well designed, simple and fast variable sized hashes","url":"https://github.com/DOSAYGO-Research/rain","date":1734104782,"author":"keepamovin","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/DOSAYGO-Research/rain\">https://github.com/DOSAYGO-Research/rain</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42409577\">https://news.ycombinator.com/item?id=42409577</a></p>\n<p>Points: 79</p>\n<p># Comments: 52</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""}]}