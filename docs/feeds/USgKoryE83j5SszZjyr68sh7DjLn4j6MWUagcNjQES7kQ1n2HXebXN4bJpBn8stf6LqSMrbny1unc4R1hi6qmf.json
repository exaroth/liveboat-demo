{"id":"USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf","title":"top scoring links : golang","displayTitle":"Reddit - Go","url":"https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6","items":[{"title":"What do you use to quickly create a frontend for your api?","url":"https://www.reddit.com/r/golang/comments/1he5f2m/what_do_you_use_to_quickly_create_a_frontend_for/","date":1734190617,"author":"/u/Interesting_Cake5060","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi all! I recently created a golang api (a server that gives json when accessing specific api routes)</p> <p>The problem is that I don&#39;t know how to make a frontend for it? A lot of people recommend htmx but it requires you to give html instead of json, I don&#39;t want to change my server. What other ways do we have to create a frontend? Learning react is a very difficult task, it looks huge, need something faster </p> <p>but what? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Interesting_Cake5060\"> /u/Interesting_Cake5060 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1he5f2m/what_do_you_use_to_quickly_create_a_frontend_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1he5f2m/what_do_you_use_to_quickly_create_a_frontend_for/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Go library to identify text encoding","url":"https://www.reddit.com/r/golang/comments/1he5tdp/a_go_library_to_identify_text_encoding/","date":1734191748,"author":"/u/Training_Square2340","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hiüëã, fellow Gophers!</p> <p>I made a Go package: <a href=\"https://github.com/wlynxg/chardet\">https://github.com/wlynxg/chardet</a>, which is used to identify text encoding formats, based on the <a href=\"https://github.com/chardet/chardet\">chardet</a>implementation of Python.</p> <p>It supports the identification of multiple encoding formats.</p> <p>A simple usage code is as follows:</p> <p>```go</p> <p>package main</p> <p>import (</p> <pre><code>&quot;fmt&quot; &quot;github.com/wlynxg/chardet&quot; </code></pre> <p>)</p> <p>func main() {</p> <pre><code>data := []byte(&quot;Your text data here...&quot;) result := chardet.Detect(data) fmt.Printf(&quot;Detected encoding: %s, Confidence: %.2f\\\\n&quot;, result.Encoding, result.Confidence) </code></pre> <p>}</p> <p>```</p> <p>Looking forward to hearing your thoughts and use cases! üôè</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Training_Square2340\"> /u/Training_Square2340 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1he5tdp/a_go_library_to_identify_text_encoding/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1he5tdp/a_go_library_to_identify_text_encoding/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Rate my VoIP server from scratch","url":"https://www.reddit.com/r/golang/comments/1hea9kh/rate_my_voip_server_from_scratch/","date":1734204169,"author":"/u/parrothacker1","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>So I created a VoIP server from scratch in go did some stuff for learning and I want you guys to rate and maybe tell me where I am lacking etc. The idea of the project was to learn how stuff works, so I kind of achieved that but I still haven&#39;t completed some interesting features etc (You can find these in my github).</p> <p>So rate it .. and point out what I can do to improve my coding and understanding of systems like these. I plan to do more stuff like these (SMTP, DBMS, ElasticSearch etc in diff langauges) and I can use your input there. Those who maybe liked it .. please show your support by maybe starring the repo or telling it here :-) . It would be really helpful and help me keep going. Here&#39;s the git link <a href=\"https://github.com/parrothacker1/toucan-calls\">GitHub</a> . Thank you .. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/parrothacker1\"> /u/parrothacker1 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hea9kh/rate_my_voip_server_from_scratch/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hea9kh/rate_my_voip_server_from_scratch/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Implementing background jobs","url":"https://www.reddit.com/r/golang/comments/1headif/implementing_background_jobs/","date":1734204466,"author":"/u/jessesv_","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I have a desktop app using Wails where I want to be able to run long running tasks in the background.</p> <p>Coming from .net, I&#39;ve been looking for packages that are similar to hangfire where i can just do the following</p> <p><code>c# BackgroundJob.Enqueue&lt;IBackgroundJob&gt;(job =&gt; job.Execute()); </code></p> <p>I&#39;ve found a few packages and an implementation using goroutines but not sure how to decide which one to go for.</p> <p><strong>github.com/hibiken/asynq</strong>: It seems the way to enqueue tasks here is to have a payload, task, and task handler, where different tasks are handled by their own handlers based on a list of task types. Does this mean I can have just one task handler and have it handle all tasks?</p> <p><strong>github.com/gammazero/workerpool</strong>: This one seems more straight forward where you just create a new workerpool and can submit functions that perform some work. Makes a lot more sense in my head but maybe I can do the same in asynq?</p> <p><strong>goroutines</strong>: I found a post on stackoverflow where the same was being done with a simple goroutine but the issue was that any further requests would hang until the goroutine completed, it looked like this: </p> <p><code>go func MyHandler(w http.ResponseWriter, r *http.Request) { //handle form values go doSomeBackgroundWork() // this will take 2 or 3 seconds w.WriteHeader(http.StatusOK) } </code></p> <p>Ideally what I would like to have is a backgroundJobService of some sorts where I call an enqueue method and pass the struct that implements something like IBackgroundJob with an Execute method.</p> <p>What would best fit my usecase here?</p> <p>Thanks</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jessesv_\"> /u/jessesv_ </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1headif/implementing_background_jobs/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1headif/implementing_background_jobs/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How easily can Go exe be decompiled/reversed compared to other languages ?","url":"https://www.reddit.com/r/golang/comments/1hef3xg/how_easily_can_go_exe_be_decompiledreversed/","date":1734217755,"author":"/u/D4kzy","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I noticed that when I compile my binaries for windows with GO, some of the path and package name are in the binary itself.</p> <p>When I use -trimpath flag it gets better, but still there is some stuff.</p> <p>It made me think how easy it is to reverse GO exe ? How to make it more time consuming for bad people ?</p> <p>I know everything can be reversed with enough time. I know Java and python (pyinstaller) default exe can be literally decompiled to get a good portion of the source code. I wonder the case with Go ...</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/D4kzy\"> /u/D4kzy </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hef3xg/how_easily_can_go_exe_be_decompiledreversed/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hef3xg/how_easily_can_go_exe_be_decompiledreversed/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Key Value store alternative to Redis for Golang","url":"https://www.reddit.com/r/golang/comments/1hepxjo/key_value_store_alternative_to_redis_for_golang/","date":1734258625,"author":"/u/Efficient-Pea-2990","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>We have a REST API Server written in Golang. We are currently using Redis for serving Access and Refresh token keys. We only store keys(ids) and values. We heard about Bitcask, Badger, BoltDB etc. It will be much helpful, if any one can share their experience on using Go based KeyValue store/database.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Efficient-Pea-2990\"> /u/Efficient-Pea-2990 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hepxjo/key_value_store_alternative_to_redis_for_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hepxjo/key_value_store_alternative_to_redis_for_golang/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}