{"id":"USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf","title":"top scoring links : golang","displayTitle":"Reddit - Go","url":"https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6","items":[{"title":"OllamaGo: A Type-Safe Go Client for Ollama with Complete API Coverage 🚀","url":"https://www.reddit.com/r/golang/comments/1hi0uh5/ollamago_a_typesafe_go_client_for_ollama_with/","date":1734636334,"author":"/u/Grand-Western-2130","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey Gophers! 👋<br/> I&#39;m excited to share OllamaGo, a new Go client library for Ollama that I&#39;ve been working on. It provides a clean interface to interact with Ollama&#39;s API, making it easy to integrate LLMs into your Go applications.</p> <p>**Key Features:**<br/> - 💬 Full support for text generation and chat completions<br/> - 🔄 Streaming responses<br/> - 🛠 Complete model management (create, pull, push, copy, delete)<br/> - 📊 Embeddings generation<br/> - 🔧 Highly configurable with type-safe options</p> <pre><code>**Quick Example:** ```go client := ollama.NewClient( ollama.WithTimeout(time.Minute*5), ) resp, err := client.Generate(context.Background(), &amp;ollama.GenerateRequest{ Model: &quot;llama2&quot;, Prompt: &quot;What is the capital of France?&quot;, }) ``` </code></pre> <p>The library is fully documented with examples for all major features. Check it out at: <a href=\"https://github.com/prathyushnallamothu/ollamago\">https://github.com/prathyushnallamothu/ollamago</a><br/> I&#39;d love to hear your feedback and suggestions! Feel free to open issues or contribute if you find it useful.</p> <p>#golang #llm #ollama</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Grand-Western-2130\"> /u/Grand-Western-2130 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0uh5/ollamago_a_typesafe_go_client_for_ollama_with/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0uh5/ollamago_a_typesafe_go_client_for_ollama_with/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Work Stealing Algorithm Implementation based on core primitives.","url":"https://www.reddit.com/r/golang/comments/1hi0x5t/work_stealing_algorithm_implementation_based_on/","date":1734636538,"author":"/u/Collymore815","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi everyone! 👋</p> <p>I hope you’re all doing well! I wanted to share something I’ve been working on recently. I’ve implemented a <strong>work stealing algorithm</strong> using its core primitives, and I would love for you all to take a look at it.</p> <p>This is just the <strong>first draft</strong>, but I believe I&#39;ve captured the main idea effectively. If anyone has a moment to review it, I would greatly appreciate your feedback!</p> <p>You can check it out here: <a href=\"https://github.com/ProgMastermind/work-stealing\">GitHub - Work Stealing Algorithm</a></p> <p>Thanks so much, and I look forward to hearing your thoughts! 😊</p> <p>Best, </p> <p>Prakash.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Collymore815\"> /u/Collymore815 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0x5t/work_stealing_algorithm_implementation_based_on/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi0x5t/work_stealing_algorithm_implementation_based_on/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Game I made in Go is now free (with source)","url":"https://www.reddit.com/r/golang/comments/1hi1ugf/game_i_made_in_go_is_now_free_with_source/","date":1734639016,"author":"/u/unklnik","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Earlier this year I posted about the game I made in Go that I put on Steam, thinking I would sell it and make money. No one bought it or played it, so I changed it from a paid to a free game, if you want to check it out then Mr Snuggles Dungeon Adventure is free here <a href=\"https://store.steampowered.com/app/2968730/Mr_Snuggles_Dungeon_Adventure/\">https://store.steampowered.com/app/2968730/Mr_Snuggles_Dungeon_Adventure/</a></p> <p>Source Code: <a href=\"https://github.com/unklnik/mr_snuggles_dungeon_adventure\">https://github.com/unklnik/mr_snuggles_dungeon_adventure</a><br/> Made using the Go bindings for Raylib <a href=\"https://github.com/gen2brain/raylib-go\">https://github.com/gen2brain/raylib-go</a> just note I taught myself to code and the code is all in a single file and rough... I am working on improving this in my next game.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/unklnik\"> /u/unklnik </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi1ugf/game_i_made_in_go_is_now_free_with_source/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi1ugf/game_i_made_in_go_is_now_free_with_source/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Go character encoding detector","url":"https://www.reddit.com/r/golang/comments/1hi8bi4/go_character_encoding_detector/","date":1734657165,"author":"/u/Training_Square2340","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>👋 Hey Gophers! 🐿️</p> <p>I&#39;m excited to share with you my latest creation: <strong><a href=\"https://github.com/wlynxg/chardet\">chardet for Go</a></strong>! 🚀 This package is your new go-to tool for detecting text encoding formats, inspired by the renowned Python <a href=\"https://github.com/chardet/chardet\">chardet</a> library.</p> <p>With <strong>chardet for Go</strong>, you can:</p> <ul> <li><strong>Detect Multiple Encoding Formats</strong>: From UTF-8 to ISO-8859-1, and beyond!</li> <li><strong>Simplify Your Text Processing</strong>: No more guessing or manual checks for encoding!</li> </ul> <p>Here&#39;s how easy it is to use:</p> <p>```go package main</p> <p>import ( &quot;fmt&quot; &quot;github.com/wlynxg/chardet&quot; )</p> <p>func main() { data := []byte(&quot;Your text data here...&quot;) // Your text here</p> <pre><code>// Detect the encoding result := chardet.Detect(data) // Print the detected encoding and confidence level fmt.Printf(&quot;Detected encoding: %s, Confidence: %.2f\\n&quot;, result.Encoding, result.Confidence) </code></pre> <p>} ```</p> <p><strong>What Can You Do With It?</strong></p> <ul> <li><strong>Web Scraping</strong>: Accurately process content from various websites.</li> <li><strong>File Handling</strong>: Automatically determine the encoding of files before processing.</li> <li><strong>Data Migration</strong>: Ensure data integrity when moving between different systems.</li> </ul> <p>I&#39;m eager to hear your feedback, ideas for improvements, or any interesting use cases you might come up with! Let&#39;s make text encoding detection in Go as seamless as possible. 🙏</p> <p>Join the conversation, and let&#39;s explore the possibilities together! 🌟</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Training_Square2340\"> /u/Training_Square2340 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hi8bi4/go_character_encoding_detector/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hi8bi4/go_character_encoding_detector/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What can I use for executing a large number of tasks across multiple servers?","url":"https://www.reddit.com/r/golang/comments/1hial9o/what_can_i_use_for_executing_a_large_number_of/","date":1734664593,"author":"/u/sunshine-and-sorrow","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I have a list of 250,000,000 inputs that I need to process. Running this on a single server will take too long, so I am thinking of running it on 100-200 virtual machines.</p> <p>At a high level, I was thinking each time a worker can request a batch of inputs, process it and then insert it into a database. I&#39;m hoping that all I need to do is write the fetch and execute functions.</p> <p>So far I found <a href=\"https://github.com/hibiken/asynq\">asynq</a>, which looks promising, but I wanted to get an idea about what else might be out there that I may have missed. Ideally I&#39;m just looking for something simple that I can run in Docker Swarm, and I don&#39;t want to have to deal with the worker registration, etc.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sunshine-and-sorrow\"> /u/sunshine-and-sorrow </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hial9o/what_can_i_use_for_executing_a_large_number_of/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hial9o/what_can_i_use_for_executing_a_large_number_of/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Are Pointers in Go Faster Than Values?","url":"https://www.reddit.com/r/golang/comments/1hih5b9/are_pointers_in_go_faster_than_values/","date":1734691226,"author":"/u/EightLines_03","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hih5b9/are_pointers_in_go_faster_than_values/\"> <img src=\"https://external-preview.redd.it/mQ4Hd8sFF41ty9JuRU-dwxXrW-mey161e6l1R_87gAw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=95fdc8dc3f34f064bb9924821f38f320e4c320a7\" alt=\"Are Pointers in Go Faster Than Values?\" title=\"Are Pointers in Go Faster Than Values?\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/EightLines_03\"> /u/EightLines_03 </a> <br/> <span><a href=\"https://blog.boot.dev/golang/pointers-faster-than-values/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hih5b9/are_pointers_in_go_faster_than_values/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""}]}