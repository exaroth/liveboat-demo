{
  "id": "2bP4pJr4wVimh6yine63HqNeafoyheTFz1gqCrQ4h7Z",
  "title": "AlgoMaster Newsletter",
  "displayTitle": "Dev - Algomaster",
  "url": "https://blog.algomaster.io/feed",
  "feedLink": "https://blog.algomaster.io/",
  "items": [
    {
      "title": "Proxy vs Reverse Proxy (Explained with Examples)",
      "url": "https://blog.algomaster.io/p/proxy-vs-reverse-proxy-explained",
      "date": 1730266231,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p><strong>Proxies</strong> and <strong>reverse proxies</strong> are servers that sit between clients and servers to improve security, privacy and performance.</p><p>A <strong>Proxy server</strong> (sometimes called a <strong>Forward proxy</strong>) acts on behalf of clients, while a <strong>Reverse Proxy</strong> acts on <strong>behalf</strong> of servers.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png\" width=\"688\" height=\"305.04973544973546\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:419,&quot;width&quot;:945,&quot;resizeWidth&quot;:688,&quot;bytes&quot;:75116,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F87424c89-0ba3-4580-89bb-ccd5870dff69_945x419.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/92xtmEY\">Multiplayer</a></strong></figcaption></figure></div><p>In this article, we&#8217;ll break down the key differences between <strong>proxies</strong> and <strong>reverse proxies</strong> and how they function with real-world examples and simple illustrations.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/ccnREBw\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg\" width=\"692\" height=\"389.25\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:692,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3a3add5-c4a6-419b-8467-fc3729564c38_1920x1080.jpeg 1456w\" sizes=\"100vw\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/ccnREBw\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/ccnREBw&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/ccnREBw\"><span>Get Started</span></a></p><div><hr></div><h2>What is a Proxy Server?</h2><blockquote><p>A <strong>proxy</strong> is an entity that has the authority to act on behalf of another.</p></blockquote><p>In computer terms, a <strong>proxy</strong> (or a <strong>forward proxy</strong>) is a server that acts on behalf of clients on a network.</p><p>When you send a request, like opening a webpage, the proxy intercepts it, forwards it to the target server, and then relays the server&#8217;s response back to you.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png\" width=\"887\" height=\"477\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:887,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:57665,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff11ff886-4db5-4550-aa0f-5f232b094b03_887x477.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/92xtmEY\">Multiplayer</a></strong></figcaption></figure></div><p>Think of proxy server as a <strong>middleman</strong> that sits between a private network and the public internet.</p><p>Let&#8217;s walk through a simplified example of how a proxy server handles a request:</p><ol><li><p>The user types a website URL into their browser. The request is intercepted by the proxy server instead of going directly to the website.</p></li><li><p>The proxy server examines the request to decide if it should forward it, deny it, or serve a cached copy.</p></li><li><p>If the proxy decides to forward the request, it contacts the target website. The website sees only the proxy server&#8217;s IP, not the user&#8217;s.</p></li><li><p>When the target website responds, the proxy receives the response and relays it to the user.</p></li></ol><h3><strong>Key Benefits of Proxy Servers:</strong></h3><ol><li><p><strong>Privacy and Anonymity:</strong> Proxy servers hide your IP address by using their own, so the destination server cannot know your real location or identity.</p></li><li><p><strong>Access Control:</strong> Organizations use proxies to enforce content restrictions, monitor internet usage.</p></li><li><p><strong>Security:</strong> Proxies can filter out malicious content and block suspicious sites, providing an additional layer of security.</p></li><li><p><strong>Improved Performance:</strong> Proxies cache frequently accessed content, reducing latency and improving load times for websites.</p></li></ol><h4>Is a VPN the same as a Proxy?</h4><p>No. While both hide your IP, a <strong>VPN</strong> encrypts all your internet traffic, making it more secure. A proxy only forwards specific requests without necessarily encrypting them.</p><h3>Real-World Applications of Proxy Servers</h3><h4>1. Bypassing Geographic Restrictions</h4><p>One of the most common uses of proxy servers is <strong>bypassing geographic restrictions</strong> on websites and content.</p><p>Streaming services, for instance, often offer different content based on a user&#8217;s location. With a proxy server based in the target region, you can access that region&#8217;s content library as if you were a local user.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png\" width=\"729\" height=\"519\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/db145010-53d0-4a3f-b158-31acec73d923_729x519.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:519,&quot;width&quot;:729,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:37637,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdb145010-53d0-4a3f-b158-31acec73d923_729x519.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/92xtmEY\">Multiplayer</a></strong></figcaption></figure></div><blockquote><p><strong>Example: </strong>Suppose you&#8217;re in India and want to access the US library of a streaming platform (eg.. Netflix). By connecting to a proxy server located in the US, your request to the streaming platform will appear to be coming from the US, allowing access to its content as if you were a US-based viewer.</p></blockquote><h4>2. Speed and Performance Optimization (Caching)</h4><p>Proxies can store cached versions of frequently accessed content, enabling faster load times and reducing bandwidth usage.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png\" width=\"887\" height=\"477\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:887,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:61911,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/92xtmEY\">Multiplayer</a></strong></figcaption></figure></div><p>When a user requests cached content, the proxy server serves the stored copy rather than fetching it from the destination server, which reduces latency. </p><p>To avoid stale content, it uses a Time-To-Live (TTL) value, automatically expiring cached data after the configured time</p><blockquote><p><strong>Example: </strong>An organization with hundreds of employees frequently accessing the same online resources can deploy a caching proxy. This proxy caches common websites in it&#8217;s database, so subsequent requests are served quickly from the proxy&#8217;s storage, saving time and bandwidth.</p></blockquote><div><hr></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><div><hr></div><h2>What is a Reverse Proxy?</h2><p>A <strong>reverse proxy</strong> is the <strong>reverse</strong> of a forward proxy. It regulates traffic coming into a network.</p><p>It sits in front of servers, intercepts client requests and forwards them to backend servers based on predefined rules.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png\" width=\"904\" height=\"517\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3be42662-47d2-4165-b278-95d583e2d2be_904x517.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:517,&quot;width&quot;:904,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:59812,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3be42662-47d2-4165-b278-95d583e2d2be_904x517.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/92xtmEY\">Multiplayer</a></strong></figcaption></figure></div><p>Think of a reverse proxy as a <strong>gatekeeper</strong>. Instead of hiding clients from the server, it hides servers from clients.</p><p>Allowing direct access to servers can pose <strong>security risks</strong>, exposing them to threats like <strong>hackers</strong> and <strong>DDoS attacks</strong>.</p><p>A reverse proxy mitigates these risks by creating a single, controlled point of entry that filters and regulates incoming traffic all while keeping server IP addresses hidden.</p><p>With a reverse proxy in place, clients no longer interact directly with the servers. They only communicate with the reverse proxy.</p><p>Let&#8217;s walk through a simplified example of how a proxy server handles a request:</p><ol><li><p>A user types a website URL into their browser, which sends a request to the server.</p></li><li><p>The reverse proxy server receives the request before it reaches the backend servers.</p></li><li><p>Based on predefined rules (like load balancing or server availability), the reverse proxy forwards the request to the appropriate backend server.</p></li><li><p>The backend server processes the request and sends a response back to the reverse proxy.</p></li><li><p>The reverse proxy relays the response to the client, with the client never directly interacting with the backend servers.</p></li></ol><h3>Key Benefits of Reverse Proxy</h3><ul><li><p><strong>Enhanced Security:</strong> By acting as a protective layer, a reverse proxy hides backend servers from clients, reducing the risk of attacks directly targeting backend infrastructure.</p></li><li><p><strong>Load Balancing:</strong> A reverse proxy can distribute incoming requests evenly across multiple backend servers, improving system reliability and preventing server overload.</p></li><li><p><strong>Caching Static Content:</strong> Reverse proxies can cache static assets like images, CSS, and JavaScript, reducing the need to fetch these files from the backend repeatedly.</p></li><li><p><strong>SSL Termination:</strong> Reverse proxies can handle SSL encryption, offloading this work from backend servers.</p></li><li><p><strong>Web Application Firewall (WAF):</strong> Reverse proxies can inspect incoming requests, acting as a firewall to detect and block malicious traffic.</p></li></ul><h3>Real-World Example of a Reverse Proxy</h3><p><strong>Cloudflare&#8217;s</strong> reverse proxy is widely used by global websites and applications to boost speed, security, and reliability. </p><p>It&#8217;s <strong>Web Application Firewall (WAF)</strong> and <strong>DDoS protection</strong> blocks malicious traffic before it reaches the site&#8217;s servers, safeguarding against attacks and improving uptime.</p><p>Cloudflare&#8217;s global content caching caches static and dynamic content at over 200 data centers around the world, storing frequently accessed files (like images, CSS, and JavaScript) closer to users. This significantly reduces load times and latency, as requests don&#8217;t always need to travel to the origin server.</p><h3>Setting Up a Reverse Proxy with Nginx</h3><p>One of the most popular reverse proxy tools is <strong>Nginx</strong>. </p><p>Here&#8217;s how you can set up a basic reverse proxy configuration using Nginx on a Linux server.</p><h4>1. Install Nginx</h4><pre><code>sudo apt update\nsudo apt install nginx</code></pre><h4>2. Add Reverse Proxy Configuration</h4><pre><code><code>server {\n    listen 80;\n\n    location / {\n        proxy_pass http://backend_server_ip;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}</code></code></pre><h4>3. Test and Reload Nginx</h4><pre><code>sudo nginx -t\nsudo systemctl reload nginx</code></pre><h3>Load Balancing Across Multiple Servers</h3><p>For a high-traffic website, spreading incoming requests across multiple backend servers is crucial.</p><p>A reverse proxy can implement load balancing algorithms such as round-robin, least connections, or IP hash, ensuring optimal distribution of traffic.</p><pre><code>upstream backend_servers {\n    ip_hash;\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com;\n}\n\nserver {\n    listen 80;\n    server_name example.com;\n\n    location / {\n        proxy_pass http://backend_servers;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}</code></pre><p>Nginx uses <strong>round robin</strong> by default. To change it, we can simply add the required algorithm (eg.. <strong>ip_hash</strong>) in the <code>upstream</code> block.</p><p>With this configuration, Nginx will balance requests among <code>backend1</code>, <code>backend2</code>, and <code>backend3</code>, ensuring no single server becomes overwhelmed.</p><h2>Summary</h2><p>Here&#8217;s a table summarizing the key details:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png\" width=\"1456\" height=\"717\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:717,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:157155,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2aa8d0f5-5ece-4ec1-9241-6eb5f33a523b_2144x1056.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/proxy-vs-reverse-proxy-explained?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/proxy-vs-reverse-proxy-explained?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong>, <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> and <strong><a href=\"https://medium.com/@ashishps\">Medium</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F005673b3-62cb-48a8-adc6-19fc69156a17_887x477.png",
      "enclosureMime": ""
    },
    {
      "title": "What is Idempotency in Distributed Systems?",
      "url": "https://blog.algomaster.io/p/idempotency-in-distributed-systems",
      "date": 1730608265,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Imagine you're making a <strong>purchase</strong> from an online store.  </p><p>You hit <strong>\"pay\"</strong> but the screen freezes, and you're unsure if the payment went through.</p><p>So, you <strong>refresh</strong> the page and <strong>try again</strong>.</p><p>Behind the scenes, how does the system ensure you aren&#8217;t accidentally <strong>charged twice</strong>?</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png\" width=\"618\" height=\"450.8679245283019\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:696,&quot;width&quot;:954,&quot;resizeWidth&quot;:618,&quot;bytes&quot;:105888,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>This scenario highlights a common problem in distributed systems: <strong>handling repeated operations gracefully.</strong> </p><p>The solution to this problem lies in the concept of <strong>idempotency.</strong> </p><p>In this blog, we'll explore what idempotency is, why it matters, how to implement it, challenges, considerations and best practices to ensure robust and reliable systems.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/algo-oct31\">Improve your Product Skills - PostHog Newsletter (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" width=\"1456\" height=\"291\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:291,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\" loading=\"lazy\" fetchpriority=\"high\"></picture><div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/algo-oct31\">Product for Engineers</a></strong> is PostHog&#8217;s newsletter dedicated to helping engineers improve their product skills. It features curated advice on building great products, lessons (and mistakes) from building PostHog, and research into the practices of top startups.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/algo-oct31&quot;,&quot;text&quot;:&quot;Subscribe for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/algo-oct31\"><span>Subscribe for FREE</span></a></p><div><hr></div><h2>What is Idempotency?</h2><blockquote><p>In mathematics, an operation is idempotent if applying it multiple times produces the same result as applying it once.</p></blockquote><p>For example, the absolute value function is idempotent: <code>||-5|| = |-5| = 5.</code></p><p><strong>Idempotency</strong> is a property of certain operations whereby executing the same operation multiple times produces the same result as executing it once.</p><p>For example: If a request to delete an item is idempotent&#8212;all requests after the first will have no impact.</p><p>In programming, setting a value is idempotent, while incrementing a value is not.</p><pre><code><code>Idempotent:\nuser.status = 'active'\n\nNot Idempotent:\nuser.login_count += 1</code></code></pre><p>Some operations are naturally idempotent.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png\" width=\"676\" height=\"69.03829787234042\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f6358570-6fec-4c8c-bc26-32071450a939_940x96.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:96,&quot;width&quot;:940,&quot;resizeWidth&quot;:676,&quot;bytes&quot;:19632,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff6358570-6fec-4c8c-bc26-32071450a939_940x96.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><p>No matter how many times you run this, the result remains the same.</p><h2>Why Idempotency Matters</h2><p>Distributed systems often require <strong>fault tolerance</strong> to ensure high availability. When a network issue causes a <strong>timeout</strong> or an <strong>error</strong>, the client might <strong>retry</strong> the request.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png\" width=\"652\" height=\"211.95379537953795\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:394,&quot;width&quot;:1212,&quot;resizeWidth&quot;:652,&quot;bytes&quot;:100737,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F637607fe-3d2c-49db-be80-3d247bea6ab8_1212x394.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><p>If the system handles retries without idempotency, every retry could change the system&#8217;s state unpredictably.</p><p>By designing operations to be idempotent, engineers create a buffer against unexpected behaviors caused by retries.</p><p>This &#8220;safety net&#8221; prevents repeated attempts from distorting the outcome, ensuring stability and reliability.</p><h2>Strategies to Implement Idempotency</h2><h3>1. Unique Request Identifiers</h3><p>One of the simplest techniques to achieve idempotency is by attaching a <strong>unique identifier</strong>, often called an <strong>idempotency key</strong> to each request.</p><p>When a client makes a request, it generates a <strong>unique ID</strong> that the server uses to track the request. If the server receives a request with the same ID later, it knows it&#8217;s a duplicate and discards it.</p><blockquote><p><strong>Example</strong>: A payment service could require every transaction request to include a unique ID. If the client retries with the same ID, the server will skip the charge, preventing duplicate transactions.</p></blockquote><p><strong>Code Example:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png\" width=\"674\" height=\"595.304945054945\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1286,&quot;width&quot;:1456,&quot;resizeWidth&quot;:674,&quot;bytes&quot;:314442,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa2db9023-fa9a-4d77-9941-a9eaa0b19e92_1698x1500.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>In this example, each request includes a unique <code>request_id</code> stored in the database to track processed requests and prevent duplicates.</p><h3>2. <strong>Database Design Adjustments (Upsert Operation)</strong></h3><p>Some database operations, such as inserting the same record multiple times, can lead to unintended duplicate entries. </p><p>Achieving idempotency in these cases often requires redesigning the database operations to be inherently idempotent. </p><p>This can involve using <code>upsert</code> operations (which updates a record if it exists or inserts it otherwise) or applying <strong>unique constraints</strong> that prevent duplicates from being added in the first place.</p><p>In this example, we use SQL <code>INSERT ... ON CONFLICT</code> to achieve an upsert operation, ensuring that duplicate entries don&#8217;t affect the database state.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png\" width=\"674\" height=\"175.42465753424656\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:228,&quot;width&quot;:876,&quot;resizeWidth&quot;:674,&quot;bytes&quot;:40650,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2283e98b-4bb9-4785-a247-60b571ffe43c_876x228.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><p>This SQL statement inserts a new item if it doesn't exist. If it does exist (conflict on <code>item_id</code>), it updates the stock by adding the new stock quantity, ensuring the operation remains idempotent.</p><h3>3. Idempotency in Messaging Systems</h3><p>In a messaging system, we can enforce idempotency by storing a log of processed message IDs and checking against it for every incoming message.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png\" width=\"672\" height=\"430.0408163265306\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:878,&quot;width&quot;:1372,&quot;resizeWidth&quot;:672,&quot;bytes&quot;:180306,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a1e1402-6368-424e-b3e7-f8be7247a786_1372x878.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>Each message has a unique <code>messageId</code>. Before processing, we check if the <code>messageId</code> is already in <code>processedMessages</code>. If it is, the message is ignored; otherwise, it&#8217;s processed and added to the set to avoid duplicates.</p><h3><strong>4. Idempotency in HTTP Methods</strong></h3><p>HTTP defines several methods (verbs) for different types of requests.</p><p>These methods can be categorized by whether they are idempotent or non-idempotent, influencing how a system handles retries and preventing unintended side effects.</p><h4><strong>Idempotent Methods:</strong></h4><ul><li><p><strong>GET:</strong> Retrieves data from a resource. GET requests are inherently idempotent because they only read data and do not alter the server&#8217;s state.</p><ul><li><p><strong>Example:</strong> Accessing a blog post by making a GET request to <code>/posts/123</code> will simply retrieve that post, without modifying any server data. Whether you retrieve it once or a thousand times, the post remains unchanged.</p></li></ul></li><li><p><strong>PUT:</strong> Update or completely replace an existing resource. PUT requests are idempotent because the final state is the same whether the PUT request is executed once or multiple times.</p><ul><li><p><strong>Example:</strong> Updating user information by making a PUT request to <code>/users/45</code> with updated user details will overwrite the user&#8217;s data with the new information provided. Executing the same PUT request repeatedly results in the same final user data on the server.</p></li></ul></li><li><p><strong>DELETE:</strong> Removes a resource from the server. DELETE requests are idempotent because deleting a resource that&#8217;s already been deleted has no further effect.</p><ul><li><p><strong>Example: </strong>Deleting an item by making a DELETE request to <code>/items/678</code> will remove the item. If you attempt the DELETE request again, it will have no effect since the item no longer exists.</p></li></ul></li></ul><h4><strong>Non-Idempotent Methods:</strong></h4><ul><li><p><strong>POST:</strong> Creates a new resource on the server. POST requests are non-idempotent because each request usually results in the creation of a new resource.</p><ul><li><p><strong>Example: </strong>Creating a new order by making a POST request to <code>/orders</code> with order details will generate a new order each time the request is made.</p></li></ul></li></ul><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Thanks for reading AlgoMaster Newsletter! Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>Challenges and Considerations</h2><p>While idempotency is powerful, it comes with its own set of challenges:</p><ol><li><p><strong>Performance Overhead</strong>: Storing idempotency keys or checking for duplicate operations can add overhead and increase the overall latency.</p></li><li><p><strong>State Management</strong>: Idempotency often requires maintaining state, which can be challenging in stateless architectures.</p></li><li><p><strong>Distributed Systems</strong>: Ensuring idempotency across distributed systems can be challenging and may require <strong>distributed locking</strong> or <strong>consensus algorithms</strong>.</p></li><li><p><strong>Time Window</strong>: How long should idempotency guarantees be maintained? Forever, or for a limited time?</p></li><li><p><strong>Database Constraints</strong>: Not all operations are idempotent by default; unique constraints or upsert logic may be necessary to avoid duplication.</p></li></ol><h2>Best Practices</h2><p>When implementing idempotency in your system, consider these best practices:</p><ol><li><p><strong>Use Unique Identifiers</strong>: Attach a unique ID (idempotency key) to each request to track and prevent duplicate processing.</p></li><li><p><strong>Design for Idempotency from the Start</strong>: It's much easier to design for idempotency from the beginning than to add it later.</p></li><li><p><strong>Implement Retry with Backoff</strong>: When retrying idempotent operations, use an exponential backoff strategy to avoid overwhelming the system.</p></li><li><p><strong>Employ Idempotent HTTP Methods</strong>: Prefer idempotent methods (GET, PUT, DELETE) for operations that may be retried; design POST with unique identifiers if idempotency is required.</p></li><li><p><strong>Document Idempotent Operations</strong>: Clearly document which operations are idempotent in your API specifications.</p></li><li><p><strong>Test Thoroughly</strong>: Implement tests that verify the idempotency of your operations, including edge cases and failure scenarios.</p></li><li><p><strong>Use Locks or Versioning</strong>: Use locks, optimistic concurrency control, or version numbers to manage simultaneous requests safely.</p></li></ol><p>Idempotency is a powerful concept in distributed systems that can greatly enhance the reliability and fault-tolerance of your systems.</p><p>Whether you're designing a distributed database, a payment processing system, or a simple web API, considering idempotency in your design can save you (and your users) from many headaches down the road.</p><div><hr></div><p>Thank you so much for reading.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/idempotency-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/idempotency-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F538d3bda-046f-48f0-b62d-730327bf3bd7_954x696.png",
      "enclosureMime": ""
    },
    {
      "title": "Design a Chat Application like WhatsApp - System Design Interview",
      "url": "https://blog.algomaster.io/p/design-a-chat-application-like-whatsapp",
      "date": 1731250967,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Nearly everyone uses a <strong>chat application</strong> to send messages and stay connected.</p><p>With over <strong>2.5 billion</strong> <strong>active users</strong> and more than <strong>100 billion messages</strong> exchanged daily, <strong>WhatsApp</strong> is the world&#8217;s most popular messaging app.</p><p>But what does it take to build such a platform that can connect billions of people in real-time across the globe?</p><p>In this article, we will dive into high-level design of building such a <strong>scalable</strong> <strong>chat application</strong>.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/ZQz2PMk\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png\" width=\"536\" height=\"536\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1200,&quot;width&quot;:1200,&quot;resizeWidth&quot;:536,&quot;bytes&quot;:307604,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/ZQz2PMk\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/ZQz2PMk&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/ZQz2PMk\"><span>Get Started</span></a></p><div><hr></div><h2>1. Requirement Gathering</h2><h3>Functional Requirements</h3><ul><li><p>Support <strong>1:1</strong> <strong>real-time messaging</strong> between users.</p></li><li><p>Show <strong>online/offline</strong> status and <strong>last seen time</strong> of users.</p></li><li><p>Show <strong>message delivery status</strong> (sent, delivered, read)</p></li><li><p>Allow users to share <strong>images</strong>, <strong>videos</strong>, and <strong>audio clips</strong>.</p></li><li><p>Support <strong>group conversations</strong> with up to 100 members.</p></li><li><p>Send<strong> Push notifications</strong> for new messages if the receiver is offline.</p></li><li><p><strong>Store</strong> and <strong>retrieve</strong> chat history for each user.</p></li></ul><h3>Non-Functional Requirements</h3><ul><li><p><strong>Scalability</strong>: Handle millions of concurrent users.</p></li><li><p><strong>High Availability</strong>: Ensure minimal downtime and resilience to server failures.</p></li><li><p><strong>Low Latency</strong>: Deliver messages in real-time with minimal delay.</p></li><li><p><strong>Reliability</strong>: Ensure messages are not lost.</p></li></ul><h2>2. Capacity Estimation</h2><p>Let&#8217;s assume the following traffic characteristics for our chat application:</p><blockquote><p><strong>Total Users</strong>: Assume 1 billion registered users.</p><p><strong>Daily Active Users (DAU)</strong>: Around 500 million users actively use the app each day.</p><p><strong>Peak Concurrent Connections</strong>: Approximately 50 million users connected at peak times.</p></blockquote><p><strong>Average Messages per Day</strong>: If each active user sends an average of 10 messages daily, this results in 5 billion messages per day.</p><h4>Storage Requirements (for Messages):</h4><p>Assuming each message is around 1 KB.</p><ul><li><p><strong>Daily Storage</strong>: 1&#8201;KB &#215; 5&#8201;Billion&nbsp;messages = 5 &#8201;TB</p></li><li><p><strong>Annual Storage</strong>: 365 &#215; 5 &#8201;TB &#8776; 1.8&#8201;PB&nbsp;(Petabytes)</p></li></ul><h4>Bandwidth Estimation (for Real-Time Communication):</h4><p>With 10 million users connected concurrently during peak times.</p><ul><li><p><strong>Average Bandwidth per Connection</strong>: Assuming an average of 10 KB/s per connection, we would need a total of 100 GB/s of bandwidth to support real-time messaging at peak usage.</p></li></ul><h2>3. High-Level Design</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png\" width=\"1456\" height=\"921\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:921,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:162285,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/nmI4K2G\">Multiplayer</a></strong></figcaption></figure></div><h3>Chat Servers</h3><p>The <strong>Chat Servers</strong> manage a large number of concurrent connections, facilitate real-time communication, and ensure that messages are delivered efficiently between users with minimal latency.</p><p>To support seamless two-way messaging, a protocol like <strong><a href=\"https://blog.algomaster.io/p/websockets\">WebSockets</a></strong>&#8212;designed for native bidirectional communication between clients and servers&#8212;is ideal. (We'll delve into this in more detail later.)</p><h3>Load Balancer</h3><p>The <strong>load balancer</strong> efficiently distributes incoming traffic from users across multiple instances of chat servers and user-facing services, such as the media service.</p><p>Here&#8217;s how the connection is established between the user and chat servers via the load balancer:</p><ul><li><p><strong>Initial Connection</strong>: The client initiates an HTTP(S) request to set up a WebSocket connection. This request passes through the load balancer, which routes it to an appropriate chat server based on factors like user&#8217;s location and the load-balancing algorithm in use (e.g., round-robin, least connections).</p></li><li><p><strong>Connection Upgrade</strong>: Once the request reaches the selected server, the connection is upgraded from HTTP to WebSocket, establishing a persistent, bidirectional WebSocket link between the client and the selected chat server via the load balancer.</p></li><li><p><strong>Session Persistence</strong>: To ensure that the client remains connected to the same chat server, load balancer uses <strong>sticky</strong> sessions. This can be achieved through <strong>IP hashing</strong>, where the load balancer consistently routes the user to the same server based on the hash of their IP address.</p></li></ul><h4>Alternative with Service Discovery</h4><p>An alternative approach is to use service discovery, which enables users to connect directly to chat servers. </p><p>In this case, users first connect to the service discovery layer to identify the chat server they should connect to and then establish a WebSocket connection directly with that server.</p><h3>User Connection Cache</h3><p>The <strong>User Connection Cache</strong> is a fast, in-memory cache (e.g., Redis) that stores each user's active connection details, such as the chat server they&#8217;re connected to and their <code>last_active</code> timestamp.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png\" width=\"584\" height=\"284.5128205128205\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:608,&quot;width&quot;:1248,&quot;resizeWidth&quot;:584,&quot;bytes&quot;:55052,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28edee9e-289f-46ff-a2da-322a5f050df1_1248x608.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>Clients periodically send heartbeat signals to their connected server, and each heartbeat updates the user&#8217;s <code>last_active</code> timestamp in the cache.</p><p>This setup enables efficient support for <code>online/offline</code> status and <code>last seen</code> functionality.</p><p>If the difference between the current time and the <code>last_active</code> timestamp is within a defined threshold (e.g., 3 seconds), the user is shown as online; otherwise, they are marked as offline.</p><h3>Notification Service</h3><p>The <strong><a href=\"https://blog.algomaster.io/p/design-a-scalable-notification-service\">Notification Service</a></strong> is responsible for delivering real-time notifications to users, especially when they are offline or not actively using the application.</p><p>When a user is offline, the chat server forwards the message to the Notification Service.</p><p>To enhance efficiency, the chat server can send this message to a message queue rather than directly interacting with the Notification Service and waiting for a response. </p><p>The Notification service integrates with external push notification providers like <strong>Firebase Cloud Messaging (FCM)</strong> and <strong>Apple Push Notification Service (APNS)</strong> to deliver messages as push notifications to offline users.</p><h3>Message Queue</h3><p>The <strong><a href=\"https://blog.algomaster.io/p/message-queues\">Message Queue</a></strong> is a distributed, high-throughput queue (e.g., Kafka, RabbitMQ) that temporarily stores messages before they are consumed by the Message Storage Service.</p><p>By acting as an intermediary, the Message Queue decouples message storage from real-time message handling on chat servers, reducing latency and enhancing the scalability of the application.</p><h3>Message Storage Service</h3><p>The <strong>Message Storage Service</strong> is responsible for the reliable storage, fast retrieval, and efficient archival of chat messages. </p><p>It consumes incoming messages from the <strong>Message Queue</strong> and persists them in the <strong>Message DB</strong> for efficient storage and retrieval.</p><h3><strong>Message DB</strong></h3><p>The <strong>Message DB</strong> stores all chat messages in a reliable and efficient manner, ensuring users can access past messages.</p><p>This database is designed for <strong>high-write</strong> throughput and efficient retrieval (e.g., <strong>Cassandra</strong>) to handle the large volume of messages in real-time chat applications.</p><h3>Group Service</h3><p>The <strong>Group Service</strong> is responsible for handling all group-related functionalities, including creating groups, updating group details and managing group memberships.</p><p>When a message needs to be delivered to a group conversation, the Chat Servers query the Group Service to retrieve the current list of group members.</p><h3>Group DB</h3><p>The <strong>Group DB</strong> stores and retrieves all data associated with group chats, including group IDs, member lists, admin roles, and group setting.</p><h3>Media Service</h3><p>The <strong>Media Service</strong> handles the uploading and management of multimedia content, such as images, videos, and audio files. </p><p>It securely stores media files in a blob storage system, while maintaining metadata&#8212;such as file type, size, and upload timestamps&#8212;in a separate database for easy access and organization.</p><p>By offloading media storage from the main chat servers, the Media Service reduces bandwidth usage on the chat servers and enhances overall app performance.</p><h3>Blob Store</h3><p>The <strong>Blob Store</strong> is the storage backend for a chat application&#8217;s multimedia content, including images, videos, audio files, and documents.</p><p>It&#8217;s designed to handle large volumes of media content while ensuring fast, secure, and reliable access.</p><p>The Media Store typically leverages cloud-based object storage solutions (such as Amazon S3, Google Cloud Storage, or Azure Blob Storage) that provide high durability, scalability, and cost-effectiveness.</p><h3>CDN</h3><p>To reduce latency when uploading or downloading multimedia content, files are distributed to locations geographically closer to users via a <strong>Content Delivery Network (CDN)</strong>.</p><p>When a user shares a multimedia file, the client application uploads it directly to the CDN, storing it in a location close to the recipient.</p><p>Instead of sending the file itself, the client sends the file&#8217;s URL to the chat server as part of the message, allowing other users to download and access the content quickly and efficiently from the nearest CDN location.</p><p>Once files are uploaded to the CDN, the Media Service retrieves them and stores them in a blob store for long-term storage.</p><p>This approach reduces the load on chat servers, minimizes latency, and significantly improves media delivery speed for users.</p><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>4. Database Design</h2><p>For a chat application, the database needs to handle core entities like <strong>users</strong>, <strong>messages</strong> and <strong>groups</strong>.</p><p>Here&#8217;s a breakdown of a database design that could support a scalable and efficient chat application.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png\" width=\"690\" height=\"506.60027472527474\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1069,&quot;width&quot;:1456,&quot;resizeWidth&quot;:690,&quot;bytes&quot;:537477,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37329a85-ad91-40c6-830c-c1fd5175d40d_3744x2748.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>To store the user, group and conversations data, we can use a SQL database like PostgreSQL.</p><p>For message data, it&#8217;s preferred to use a NoSQL database like Cassandra due to high-write throughput.</p><p>For media files, an object store like AWS S3 provides scalable and secure storage.</p><h2>5. Deep Dive into Key Components</h2><h3><strong>5.1 Why Choose WebSockets over HTTP?</strong></h3><p>To understand why WebSockets are ideal for real-time messaging, let&#8217;s examine other potential solutions and their limitations:</p><h4><strong>Polling</strong></h4><p>In polling, the client periodically sends HTTP requests to the server to check for new messages.</p><p><strong>Drawbacks</strong>: Polling can be resource-intensive, especially with high polling frequency. Since the server responds with \"no new messages\" most times, this approach can add substantial overhead and waste server resources.</p><h4><strong>Long Polling</strong></h4><p>In long polling, the client holds an open connection with the server until a new message is available or a timeout occurs. When the server has new data, it responds, and the client immediately re-establishes the connection, restarting the process.</p><p>While this reduces the need for repeated requests as in standard polling, long polling has several limitations:</p><ul><li><p><strong>Connection Overhead</strong>: Each message exchange requires re-establishing the connection, creating significant overhead and putting a heavy load on servers and network resources.</p></li><li><p><strong>Resource Consumption</strong>: The server must maintain many open connections, consuming memory and capacity even without active data exchange.</p></li><li><p><strong>Latency Issues</strong>: If the timeout is long, messages may be delayed. If short, frequent resets add the same overhead as standard polling.</p></li></ul><p>Overall, long polling&#8217;s connection and resource demands make it less suited for real-time chat applications.</p><h4><strong>WebSockets</strong></h4><p>WebSockets on the other hand eliminate the need for repeated HTTP handshakes, headers, and responses, reducing overhead and enhancing performance.</p><p>The client and server establish a connection once, and this connection stays open for the entire chat session, enabling seamless data transfer.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png\" width=\"467\" height=\"361\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/19a77b62-831f-4078-b8e8-326313be302f_467x361.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:361,&quot;width&quot;:467,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:23443,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19a77b62-831f-4078-b8e8-326313be302f_467x361.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/nmI4K2G\">Multiplayer</a></strong></figcaption></figure></div><p>This persistent connection makes WebSocket ideal for real-time communication, where both the client and server need to exchange data frequently and in a timely manner.</p><h3><strong>5.2 </strong>Real-time Message Delivery</h3><h4><strong>Establishing the Connection</strong></h4><p>When a user opens the chat app, it initiates a WebSocket connection with one of the chat servers. This persistent connection remains open throughout the chat session, enabling real-time communication between the client and server without requiring repeated HTTP requests.</p><h4><strong>Sending Messages</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png\" width=\"492\" height=\"459.6232258064516\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:724,&quot;width&quot;:775,&quot;resizeWidth&quot;:492,&quot;bytes&quot;:57745,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9351cb50-0bde-4beb-b35c-a283fa5c2879_775x724.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/nmI4K2G\">Multiplayer</a></strong></figcaption></figure></div><p>Once connected, when User A sends a message to User B, the message travels through User A&#8217;s WebSocket connection to the server managing that connection (Server A). </p><p>Server A then looks up the <strong>user connection cache</strong> to determine whether User B is online and, if so, which server currently holds User B's connection.</p><ul><li><p><strong>If User B is online</strong>: Server A forwards the message to Server B, which delivers it to User B via their open WebSocket connection.</p></li><li><p><strong>If User B is offline</strong>: Server A sends the message to the <strong>notification service</strong>, which triggers a push notification to notify User B of the new message.</p></li></ul><h3>5.3 Message Delivery Indicators</h3><p>WebSockets enable real-time status updates for messages (e.g., &#8220;message sent,&#8221; &#8220;message delivered,&#8221; &#8220;message read&#8221;), providing users with instant feedback on message states.</p><h4><strong>Message Sent</strong></h4><p>When User A sends a message, it is transmitted over their WebSocket connection to the server handling their connection (Server A).</p><ol><li><p>Server A receives the message, pushes it to the message queue for storage, and sends an acknowledgment back to User A.</p></li><li><p>Upon receiving this acknowledgment, User A&#8217;s app updates the message status to &#8220;sent.&#8221;</p></li></ol><p>If User A is offline when attempting to send a message, the message won&#8217;t be sent until they are back online. The message remains in a pending state on User A's device until it reconnects and successfully sends the message to Server A.</p><h4><strong>Message Delivered</strong></h4><p>Once the User B receives the message, it sends an acknowledgment to Server B.</p><ul><li><p>Server B sends a delivery acknowledgment to Server A.</p></li><li><p>Server A sends the message status &#8220;delivered&#8221; to the message queue for permanent storage and then relays this update to User A&#8217;s app, which reflects the message as &#8220;delivered.&#8221;</p></li></ul><p>If User B is offline, Server A will not receive an acknowledgment of delivery from Server B, so the message remains in the &#8220;sent&#8221; state for User A until User B reconnects.</p><p>When User B comes online, the client app sends the updates to Server B, at which point it sends a &#8220;delivered&#8221; acknowledgment to Server A. User A&#8217;s app is then updated to reflect the &#8220;delivered&#8221; status.</p><h4><strong>Message Read</strong></h4><p>When User B opens the chat window and views the message, their app sends a &#8220;read&#8221; acknowledgment to Server B.</p><ol><li><p><strong>Server B</strong> logs this event in the message queue and forwards the &#8220;read&#8221; status to Server A.</p></li><li><p><strong>Server A</strong> pushes this update to User A&#8217;s device, allowing User A&#8217;s app to display the message as &#8220;read.&#8221;</p></li></ol><p>If User B is offline, they cannot view the message, so it will not trigger a &#8220;read&#8221; status. When User B reconnects and opens the chat, their app will send a &#8220;read&#8221; acknowledgment to Server B.</p><p>The Server B logs the &#8220;read&#8221; status in the message queue and forwards it to Server A. User A&#8217;s app then receives this update, marking the message as &#8220;read.&#8221;</p><h3><strong>5.4 </strong>Group Messages</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png\" width=\"658\" height=\"525.3078838174274\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:962,&quot;width&quot;:1205,&quot;resizeWidth&quot;:658,&quot;bytes&quot;:99867,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0f00cb1e-0dde-4771-b5d2-c1df50c4165e_1205x962.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/nmI4K2G\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p>When User A sends a message in a group chat, the message travels through User A&#8217;s WebSocket connection to the server managing that connection (Server A).</p></li><li><p><strong>Server A</strong> queries the <strong>Group Service</strong> to retrieve a list of all active members in the group.</p></li><li><p><strong>Server A</strong> checks the <strong>user connection cache</strong> to determine which group members are currently online and the specific servers they are connected to.</p></li><li><p><strong>For Each Online Member</strong>:</p><ul><li><p>If a member is connected to <strong>Server A</strong>, it delivers the message directly over the existing WebSocket connection.</p></li><li><p>If a member is connected to a different server (e.g., <strong>Server B</strong>), <strong>Server A</strong> forwards the message to <strong>Server B</strong>, which then delivers the message to the user over their WebSocket connection.</p></li></ul></li><li><p>For offline group members, <strong>Server A</strong> sends the message to the <strong>Notification Service</strong>. The Notification Service triggers push notifications for each offline group member, alerting them of the new message.</p></li></ol><p>In a group chat, every message sent must be distributed (or \"fanned out\") to each group member. </p><p>As group size increases, so does the fan-out workload. For instance, in a group of 500 members, each message requires 500 individual message deliveries, which can quickly overwhelm the server.</p><p>That&#8217;s why, most chat applications put limits on the number of members a group can have (WhatsApp currently has 1024).</p><h4><strong>Message Persistence</strong>:</h4><p>To ensure that all group members can access the message history, <strong>Server A</strong> pushes the message to the <strong>Message Queue</strong> for storage. </p><p>The <strong>Message Storage Service</strong> consumes the message from the queue and stores it in the <strong>Message DB</strong>, where it will be available for group members to retrieve later.</p><h4><strong>Acknowledgments and Status Updates</strong></h4><ul><li><p>As each online group member receives the message, their respective server sends delivery acknowledgments to <strong>Server A</strong> (or directly updates the status in the <strong>Message DB</strong> if needed).</p></li><li><p>Once users open and view the message, read acknowledgments are similarly propagated back to <strong>Server A</strong> and stored for future reference, allowing User A to see which group members have received and read the message.</p></li></ul><h3>5.5 How to generate Message ID?</h3><p>To retrieve recent messages efficiently, we can use a <strong>time-based message ID.</strong></p><p>A time-based message ID typically combines a timestamp with a unique identifier for each message. </p><p>This allows us to order messages by timestamp, retrieve messages within a specific time range and support pagination (&#8220;load more&#8220;) where you retrieve messages before or after a specific timestamp without re-sorting the dataset.</p><p>A common format might include:</p><pre><code>[Timestamp in milliseconds][Unique Sequence/Random Component]</code></pre><ul><li><p><strong>Timestamp (in milliseconds)</strong>: The first part of the ID is the timestamp at which the message is created. This allows messages to be sorted chronologically by their creation time.</p></li><li><p><strong>Unique Sequence or Randomized Component</strong>: Appending a unique component (like a random or incremental sequence) ensures each message ID is unique, even if multiple messages are sent at the same millisecond.</p></li></ul><p>For instance, a message sent at <code>2024-11-05 12:34:56.789</code> with a sequence <code>001</code> could have an ID: <code>20241105123456789001</code>.</p><h2>6. Address Key Issues and Bottlenecks</h2><h3>6.1 Chat Server Failure</h3><p>In the event of a chat server failure, all clients connected to that server will lose their connection. </p><p>To recover, clients automatically attempt to reconnect, this time establishing a new connection with a different available server.</p><p>The load balancer continuously monitors the health of each chat server through regular health checks. </p><p>If a server goes down, the load balancer immediately stops directing traffic to it, ensuring new connections are routed to healthy servers only.</p><h3>6.2 Sharding</h3><p>To support horizontal scaling and efficient data access, we can implement sharding across different data types:</p><ol><li><p><strong>User Data Sharding</strong>: Shard user data based on <code>user_id</code>. This will allow us to distribute user records across multiple servers and enable us to scale as the user base grows.</p></li><li><p><strong>Message Data Partitioning</strong>: Partition messages based on <code>message_id</code>, using a timestamp-based <code>message_id</code> to enable efficient time-based searches. This structure allows recent messages to be accessed quickly and older messages to be located based on timestamp.</p></li></ol><h3>6.3 Optimizing Storage Cost</h3><p>With large volumes of messages and multimedia content, optimizing storage costs is essential. </p><p>Here are some effective strategies:</p><ol><li><p><strong>Compress Multimedia Files</strong>: Compressing large files (e.g., images, videos) can reduce storage requirements and cuts costs significantly.</p></li><li><p><strong>Archive Older Messages</strong>: Most users only access recent messages, which can be cached locally on their devices. Older messages can be moved to lower-cost, cold storage (e.g., Amazon Glacier), reducing expenses while still allowing access if needed.</p></li><li><p><strong>Deduplicate Files</strong>: Avoid storing multiple copies of identical files by implementing deduplication, which can save significant space when the same media is shared across multiple users or groups.</p></li><li><p><strong>Efficient Metadata Storage</strong>: Store metadata (e.g., file type, size, timestamps) separately from the media itself to reduce the load on primary storage and make searches faster and more efficient.</p></li></ol><div><hr></div><p>Thank you so much for reading.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/design-a-chat-application-like-whatsapp?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/design-a-chat-application-like-whatsapp?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F02013ca3-016b-43e9-93b7-e078f20a692a_1619x1024.png",
      "enclosureMime": ""
    },
    {
      "title": "How to Generate Unique IDs in Distributed Systems",
      "url": "https://blog.algomaster.io/p/unique-ids-in-distributed-systems",
      "date": 1731558328,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Any <strong>distributed system</strong> that operates at scale often relies on <strong>unique ids.</strong> </p><blockquote><p>For example, consider <strong>order tracking in e-commerce</strong>: each order placed by a customer is assigned a unique ID, allowing the system to track it through every stage&#8212;order processing, payment, shipping, and delivery.</p></blockquote><p>But how do we generate these IDs in a way that&#8217;s fast, unique, reliable, and scalable?</p><p>In this article we&#8217;ll dive into <strong>7 popular approaches</strong> to generate unique ids in distributed systems.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/6Rt6xPp\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-imag\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png\" width=\"676\" height=\"380.25\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:676,&quot;bytes&quot;:348203,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/6Rt6xPp\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/6Rt6xPp&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/6Rt6xPp\"><span>Get Started</span></a></p><div><hr></div><h2>1. UUID (Universally Unique Identifier)</h2><p><strong>UUIDs</strong>, also known as <strong>GUIDs</strong> (Globally Unique Identifiers) are <strong>128-bit</strong> numbers widely used for generating unique identifiers across distributed systems due to their simplicity and lack of dependency on a centralized source.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png\" width=\"632\" height=\"190\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:190,&quot;width&quot;:632,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:12265,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/9KT4SHW\">Multiplayer</a></strong></figcaption></figure></div><p>In this setup, each server can generate unique IDs independently.</p><p>UUIDs come in multiple versions:</p><ol><li><p><strong>UUID v1 (Time-Based)</strong>: Uses timestamp and machine-specific information like the MAC address.</p></li><li><p><strong>UUID v3 (Name-Based with MD5)</strong>: Generated by hashing a namespace and name using MD5.</p></li><li><p><strong>UUID v4 (Random)</strong>: Uses random values for most bits, providing a high degree of uniqueness.</p></li><li><p><strong>UUID v5 (Name-Based with SHA-1)</strong>: Similar to v3 but uses SHA-1 hashing for stronger uniqueness.</p></li></ol><p>The most commonly used version is <strong>UUID v4.</strong></p><h3>Format (UUID 4)</h3><pre><code>Example: <strong>550e8400-e29b-41d4-a716-446655440000</strong></code></pre><ul><li><p><strong>Randomness (122 bits)</strong>: Most of the UUID is composed of random hexadecimal digit <code>(0&#8211;9 or a&#8211;f)</code>.</p></li><li><p><strong>Version (4 bits)</strong>: The third block&#8217;s first character is always <code>4</code>, identifying it as a version 4 UUID.</p></li><li><p><strong>Variant (2-3 bits)</strong>: Located in the fourth block, it&#8217;s either <code>8</code>, <code>9</code>, <code>a</code>, or <code>b</code>. It represents the variant and ensures that UUID follows the RFC 4122 standard.</p></li></ul><h3>Code Example (Python)</h3><pre><code><code>import uuid\n\n# Generate a random UUID (version 4)\nuuid_v4 = uuid.uuid4()\nprint(f\"Generated UUID v4: {uuid_v4}\")</code></code></pre><h3>Pros:</h3><ul><li><p><strong>Decentralized</strong>: UUIDs can be generated independently across servers.</p></li><li><p><strong>Collision Resistance</strong>: With 128 bits, UUID v4 has a collision probability so low it&#8217;s practically negligible.</p><blockquote><p>To visualize: Even if every person on Earth generated 1 million UUIDs per second, it would take over 100 years to have a 50% chance of a single collision.</p></blockquote></li><li><p><strong>Ease of Implementation</strong>: Most programming languages provide built-in libraries for generating UUIDs.</p></li></ul><h3>Cons:</h3><ul><li><p><strong>Large Size</strong>: UUIDs consume 128 bits, which can be excessive for some storage-sensitive systems.</p></li><li><p><strong>Not Sequential</strong>: UUIDs lack order, meaning they don&#8217;t play well with indexing systems like B-Trees.</p></li></ul><blockquote><p>UUIDs are ideal when you need globally unique IDs across distributed systems without central coordination and when order isn&#8217;t important (e.g., Order IDs in E-commerce, Session IDs for User Authentication).</p></blockquote><h2>2. Database Auto-Increment</h2><p><strong>Database auto-increment</strong> is a feature in relational databases that automatically generates unique, sequential numeric IDs whenever a new record is inserted into a table.</p><p>Typically, the numbering starts from an initial value (often 1) and increments by a fixed amount (commonly 1) for each new row.</p><p><strong>Example in SQL:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png\" width=\"512\" height=\"194.0524781341108\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:260,&quot;width&quot;:686,&quot;resizeWidth&quot;:512,&quot;bytes&quot;:40483,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><p>Here, the <code>user_id</code> column will start from 1 and automatically increment for each new row, generating unique values.</p><p>This approach works well for small applications with just one database node.</p><p>However, in distributed environments, depending on a single database node for ID generation can quickly become a bottleneck and a single point of failure.</p><p>To make auto-increment work in distributed systems, here are two effective strategies:</p><h3>2.1 Range-Based ID Allocation</h3><p>In this approach, each <strong>database node</strong> is assigned a unique range of IDs, allowing them to generate IDs independently and avoid conflicts or overlaps with other nodes.</p><p>For example, in a three-node setup:</p><ul><li><p>Node 1 can use IDs from 1 to 100000.</p></li><li><p>Node 2 can use IDs from 100001 to 200000.</p></li><li><p>Node 3 can use IDs from 200001 to 300000.</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-imag\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png\" width=\"510\" height=\"423.9375\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c97397ca-f890-4dec-9542-7e3318b68dee_640x532.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:532,&quot;width&quot;:640,&quot;resizeWidth&quot;:510,&quot;bytes&quot;:40300,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong>Limitations of Range-Based Allocation</strong>:</p><ol><li><p><strong>Range Exhaustion</strong>: High-traffic nodes may exhaust their assigned range quickly, requiring reallocation or range expansion.</p></li><li><p><strong>Complex Management</strong>: As nodes are added or removed, reassigning and managing ranges can become complex.</p></li><li><p><strong>Waste of ID Space</strong>: Uneven traffic across nodes may leave some ranges underutilized.</p></li></ol><h3>2.2 Step-Based Auto-Increment</h3><p>In step-based auto-increment, each node generates IDs with a predefined step size.</p><p>For example, if the step size is 3:</p><ul><li><p>Node 1 generates IDs as 1, 4, 7, 10, &#8230;.</p></li><li><p>Node 2 generates IDs as 2, 5, 8, 11, &#8230;.</p></li><li><p>Node 3 generates IDs as 3, 6, 9, 12, &#8230;.</p></li></ul><p>This approach ensures each node generates unique IDs independently, but adding or removing nodes may require reconfiguring the step size.</p><h3><strong>Pros of Database Auto-Increment</strong></h3><ol><li><p><strong>Simplicity</strong>: Straightforward to set up, as most relational databases support it natively.</p></li><li><p><strong>Sequential Order</strong>: IDs are generated in a strictly increasing order, making it easier to sort records by insertion order.</p></li><li><p><strong>Low Storage Overhead</strong>: IDs are typically small integers, making them efficient for storage and indexing.</p></li></ol><h3>Cons <strong>of Database Auto-Increment</strong>:</h3><ol><li><p><strong>Coordination Overhead</strong>: In a distributed setup, managing ranges or step increments requires careful setup and ongoing monitoring to avoid collisions.</p></li><li><p><strong>Predictable IDs</strong>: Sequential IDs can be predictable, which may pose security risks in some applications (e.g., an attacker could guess the next ID).</p></li><li><p><strong>ID Exhaustion</strong>: High insertion rates can exhaust the integer range, especially with smaller data types.</p></li></ol><blockquote><p>Database Auto-Increment is useful when you need simple, sequential IDs (e.g., relational database primary keys).</p></blockquote><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>3. Snowflake ID (Twitter's Approach)</h2><p>The <strong>Snowflake ID</strong> generation system, developed by Twitter, is a method for generating 64-bit IDs that are:</p><ul><li><p>Time-based</p></li><li><p>Ordered</p></li><li><p>Distributed-system friendly </p></li></ul><p>It was created to handle the need for high-throughput, time-ordered IDs that can scale horizontally across multiple data centers and machines.</p><p>These IDs are not only unique but also sequential within each machine, making them highly efficient for indexing and ordering operations.</p><h3>Format</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png\" width=\"1034\" height=\"95\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:95,&quot;width&quot;:1034,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:16850,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/9KT4SHW\">Multiplayer</a></strong></figcaption></figure></div><pre><code>Example Snowflake ID (binary):\n\n0000011010011001110010110010101001010101100010101110000000000001</code></pre><p><strong>Breakdown:</strong></p><p><strong>1. Sign Bit (1 bit)</strong>: Always set to <code>0</code> to ensure the ID is positive.</p><p><strong>2. Timestamp (41 bits): </strong>The first 41 bits encode the timestamp in milliseconds since the Snowflake epoch (often set to November 4, 2010). This timestamp allows the IDs to be sorted chronologically.</p><p><strong>3. Datacenter ID (5 bits): </strong>The next 5 bits represent the data center or region ID, which allows for up to 32 (2^5) unique data centers.</p><p><strong>4. Machine ID (5 bits): </strong>The following 5 bits represent the machine (or worker) ID within the data center, allowing for 32 machines per data center.</p><p><strong>5. Sequence Number (12 bits): </strong>The last 12 bits are a sequence counter, which resets every millisecond. This counter allows each machine to generate up to 4,096 (2^12) unique IDs per millisecond.</p><h3><strong>Pros</strong></h3><ol><li><p><strong>Time-Ordered</strong>: Snowflake IDs include a timestamp, making them naturally ordered by generation time. This is beneficial for indexing and time-series data.</p></li><li><p><strong>Decentralized</strong>: Each machine can generate unique IDs independently, without requiring a central coordination server.</p></li><li><p><strong>High Throughput</strong>: With 12 bits for the sequence, each machine can generate up to 4,096 unique IDs per millisecond, making Snowflake IDs suitable for high-traffic environments.</p></li><li><p><strong>Compact and Efficient</strong>: At 64 bits, Snowflake IDs are more storage-efficient than UUIDs (128 bits).</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Clock Synchronization</strong>: Snowflake ID generation depends on synchronized clocks. If the system clock moves backward, it can lead to duplicate IDs or ID generation errors.</p></li><li><p><strong>Limited Capacity</strong>: Each machine can only generate up to 4,096 IDs per millisecond. If a higher rate is required, additional machines or other scaling solutions are needed.</p></li></ol><blockquote><p>Snowflake IDs are ideal when you need unique, time-ordered IDs in distributed systems that require high throughput and scalability (e.g., social media posts, event logs).</p></blockquote><h2>4. <strong>Redis-Based ID Generation</strong></h2><p><strong>Redis</strong>, an in-memory key-value store, can also be used for ID generation due to its <strong>atomic operations</strong> and <strong>low-latency</strong> performance.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-imag\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png\" width=\"583\" height=\"261\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:261,&quot;width&quot;:583,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:21746,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/9KT4SHW\">Multiplayer</a></strong></figcaption></figure></div><p>Here&#8217;s how Redis-based ID generation works:</p><ol><li><p><strong>Initialize a Key:</strong> Setup a Redis key to store the current ID value.</p></li><li><p><strong>Increment on Demand</strong>: Whenever a new ID is needed, an application node increments the counter using Redis&#8217;s atomic <code>INCR</code> or <code>INCRBY</code> command.</p></li><li><p><strong>Return Unique ID</strong>: The incremented counter value is guaranteed to be unique and it&#8217;s returned to the application.</p></li></ol><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-imag\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png\" width=\"543\" height=\"310\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:310,&quot;width&quot;:543,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:39794,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>Redis guarantees atomicity, so no two calls to <code>generate_id()</code> will ever receive the same ID, even if multiple nodes are concurrently accessing the Redis server.</p><h3>Pros</h3><ol><li><p><strong>Atomicity</strong>: Redis&#8217;s <code>INCR</code> and <code>INCRBY</code> commands are atomic, ensuring each generated ID is unique and sequential without any risk of collision.</p></li><li><p><strong>High Throughput</strong>: As an in-memory database, Redis provides very low latency, making it ideal for high-speed ID generation.</p></li><li><p><strong>Simplicity</strong>: Setting up Redis for ID generation is straightforward and requires minimal configuration.</p></li><li><p><strong>Sequential IDs</strong>: Redis-generated IDs are sequential, making them suitable for ordered indexing in databases or applications where chronological order is important.</p></li></ol><h3>Cons</h3><ol><li><p><strong>Single Point of Failure</strong>: Using a single Redis instance as the ID generator can become a bottleneck and a potential single point of failure.</p></li><li><p><strong>Scalability Limitations</strong>: While Redis can handle high throughput, using it as a centralized ID generator limits horizontal scaling because every request depends on a single Redis instance.</p></li></ol><blockquote><p>Redis-based ID generation is useful when you need high-speed, centralized ID generation with sequential order, and the setup is primarily single-node.</p></blockquote><h2>5. <strong>Nano ID</strong></h2><p>NanoID is a small, URL-friendly, unique string ID generator designed for simplicity, flexibility, and performance in distributed systems.</p><p>Created as a modern alternative to UUID, Nano ID has gained popularity in frontend applications and modern web development.</p><p>Unlike UUIDs, Nano ID doesn&#8217;t follow a rigid structure, making it highly adaptable to different applications.</p><h3>Format</h3><p>By default, NanoID generates a <strong>21-character</strong> ID using a <strong>URL-safe</strong> base64 alphabet. Each character is randomly chosen from a 64-character set <code>(A-Z, a-z, 0-9, \"-\", \"_\")</code>, creating a 128-bit identifier. </p><p>However, you can customize the length and character set to meet your application&#8217;s specific requirements.</p><pre><code><strong>Example: 7QLiKDgL-WG4E8z6xyVc0</strong> </code></pre><p>Here&#8217;s how to generate custom nano ids in Python:</p><pre><code>import nanoid\n\n# Generate default ID\nid = nanoid.generate() # \"V1StGXR8_Z5jdHi6B-myT\"\n\n# Custom length\ncustom_id = nanoid.generate(size=10) # \"IRFa-VaY2b\"\n\n# Custom alphabet\ncustom_generator = nanoid.generate(\n    alphabet='1234567890',\n    size=6\n)  # \"123456\"</code></pre><h3><strong>Pros</strong></h3><ol><li><p><strong>Compact and Readable</strong>: With a default length of 21 characters, NanoID is shorter and more readable than UUIDs, which are 36 characters.</p></li><li><p><strong>URL-Friendly</strong>: NanoID uses a URL-safe character set by default, making it ideal for use in URLs without needing additional encoding.</p></li><li><p><strong>Decentralized</strong>: Each node can generate unique IDs independently with minimal risk of collision.</p></li><li><p><strong>Customizable</strong>: You can adjust the length and character set to suit specific needs.</p></li><li><p><strong>High Performance</strong>: Nano ID&#8217;s generation is fast, making it ideal for scenarios requiring rapid creation of many unique IDs.</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Non-Sequential</strong>: NanoIDs are purely random and lack sequential ordering, which can lead to fragmentation in database indexes.</p></li><li><p><strong>Collision Probability</strong>: Reducing the length of Nano ID increases the risk of collision, so longer IDs may be needed for critical applications.</p></li></ol><blockquote><p>Nano ID is ideal for generating short, customizable, URL-friendly IDs in applications that don&#8217;t require time-ordering, such as URLs, tokens, and frontend identifiers.</p></blockquote><h2>6. Hash-Based IDs</h2><p><strong>Hash-Based IDs</strong> are unique identifiers generated by applying <strong>cryptographic hash functions</strong> to specific data inputs.</p><p>They're deterministic, meaning the same input always produces the same ID, making them ideal for systems that need consistent identifiers, like <strong>deduplication</strong> and <strong>caching</strong>.</p><h3>Format</h3><p>The format of hash-based IDs depends on the hashing algorithm used, such as <strong>MD5</strong>, <strong>SHA-1</strong>, or <strong>SHA-256</strong>. </p><p>These IDs are typically encoded as hexadecimal strings and can vary in length depending on the hash function:</p><ul><li><p><strong>MD5</strong>: 128 bits (32 hexadecimal characters)</p></li><li><p><strong>SHA-1</strong>: 160 bits (40 hexadecimal characters)</p></li><li><p><strong>SHA-256</strong>: 256 bits (64 hexadecimal characters)</p></li></ul><p>The choice of hashing algorithm depends on the application's requirements for uniqueness, security, and collision resistance.</p><pre><code><strong>Example URL: https://example.com/some-page\n\nSHA-256 hash output: 66e9c37ef3c04d3df238cd7d6b6b524f06c6e6dc9892e13c46f6d59f212dad0e</strong></code></pre><h3>Code Example:</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-imag\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png\" width=\"642\" height=\"262.0822784810127\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/edeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:516,&quot;width&quot;:1264,&quot;resizeWidth&quot;:642,&quot;bytes&quot;:106116,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><h3><strong>Pros</strong></h3><ol><li><p><strong>Deterministic</strong>: The same input will always generate the same ID.</p></li><li><p><strong>Collision-Resistant</strong>: Strong hash algorithms like SHA-256 provide high collision resistance, making it extremely unlikely for two different inputs to produce the same hash.</p></li><li><p><strong>Decentralized</strong>: IDs can be generated independently across nodes in a distributed system without needing central coordination.</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Non-Sequential</strong>: Hash-based IDs are non-sequential, which can lead to fragmentation in database indexes, slowing down query performance.</p></li><li><p><strong>Length</strong>: Some hash functions, like SHA-256, produce long IDs (64 characters) that may be inefficient for certain applications.</p></li><li><p><strong>Collision Probability</strong>: Using weaker hashes (e.g., MD5) increases the risk of collisions, which can cause issues in systems that require strict uniqueness.</p></li><li><p><strong>No Metadata</strong>: Hash-based IDs are pure hashes and don&#8217;t contain metadata information like timestamps or machine identifiers.</p></li></ol><blockquote><p>Hash-Based IDs are useful when you need deterministic, unique IDs based on input data, like content or URLs, rather than random values (e.g., deduplication, URL shorteners, caching systems).</p></blockquote><h2>7. ULID (Universally Unique Lexicographically Sortable Identifier)</h2><p>A <strong>ULID</strong> is a 26-character, URL-safe string that combines:</p><ul><li><p><strong>Timestamp</strong> (first 10 characters)</p></li><li><p><strong>Randomness</strong> (last 16 characters)</p></li></ul><p>This format produces unique, readable and lexicographically sortable IDs. </p><p>Unlike UUIDs, which lack natural ordering, ULIDs embed a timestamp component and use a compact, URL-friendly base32 encoding.</p><h3>Format</h3><pre><code>01AN4Z07BY      79KA1307SR9X4MV3\n|----------|    |----------------|\n Timestamp          Randomness\n 10 chars           16 chars\n (48 bits)         (80 bits)</code></pre><ul><li><p><strong>Timestamp (48 bits)</strong>: The first 10 characters represent the timestamp in milliseconds since the Unix epoch (January 1, 1970). This allows ULIDs to be naturally sorted by creation time.</p></li><li><p><strong>Randomness (80 bits)</strong>: The remaining 16 characters are random, ensuring uniqueness even when multiple ULIDs are generated within the same millisecond.</p></li></ul><p>There are libraries available for generating ULIDs in many programming languages, including JavaScript, Python, Java, and Go. </p><h3><strong>Pros</strong></h3><ol><li><p><strong>Lexicographically Sortable</strong>: ULIDs are time-ordered and naturally sortable, making them suitable for time-series data.</p></li><li><p><strong>Compact and URL-Friendly</strong>: With 26 characters in base32 format, ULIDs are shorter than UUIDs, making them suitable for embedding in URLs.</p></li><li><p><strong>Decentralized</strong>: ULIDs can be generated independently on multiple nodes, as each ID is based on a timestamp and a random component, reducing the need for centralized coordination.</p></li><li><p><strong>Readable and Error-Resistant</strong>: The base32 encoding used in ULIDs is designed to avoid confusing characters, such as \"I\" and \"O\".</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Limited Time Precision</strong>: ULIDs use milliseconds for the timestamp, which may not be precise enough for high-frequency systems that need IDs at microsecond or nanosecond levels.</p></li><li><p><strong>Limited Popularity</strong>: Although gaining popularity, ULIDs are still less widely supported than UUIDs.</p></li><li><p><strong>No Embedded Metadata</strong>: ULIDs encode only a timestamp; they do not include other metadata, such as machine ID or data center information, like Snowflake IDs.</p></li></ol><blockquote><p>ULIDs are a great choice when you need unique, time-ordered, URL-friendly IDs that can be generated independently without central coordination (e.g., time-series data, event logs).</p></blockquote><div><hr></div><p>Thank you so much for reading.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/unique-ids-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/unique-ids-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substack-post-media.s3.amazonaws.com/public/images/b94d2d8f-1906-4f53-a7f5-f8721426ba1c_632x436.webp",
      "enclosureMime": ""
    },
    {
      "title": "10 Data Structures That Make Databases Fast and Scalable",
      "url": "https://blog.algomaster.io/p/data-structures-that-make-databases-scalable",
      "date": 1732164619,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Have you ever wondered why <strong>modern databases</strong> are so fast and efficient, even when managing <strong>terabytes of data</strong>?</p><p>The answer lies in their underlying <strong>data structures</strong> and <strong>indexing techniques</strong> that enable efficient storage, retrieval, and management of data.</p><p>In this article, we'll look at <strong>10 important data structures</strong> that make modern databases fast, reliable, and scalable.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/hQjAEpt\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png\" width=\"556\" height=\"556\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:600,&quot;width&quot;:600,&quot;resizeWidth&quot;:556,&quot;bytes&quot;:119834,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/hQjAEpt\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/hQjAEpt&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/hQjAEpt\"><span>Get Started</span></a></p><div><hr></div><h2><strong>1. Hash Indexes</strong></h2><p>A <strong>hash index</strong> is a data structure that maps keys to values using a <strong>hash function</strong>.</p><p>The hash function converts a key into an integer, which is used as an index in a <strong>hash table (buckets)</strong> to locate the corresponding value.</p><p>It is designed for <strong>fast insertion</strong> and<strong> lookup</strong>, such as: </p><ul><li><p>Insert/Find a new record with <code>id = 123</code>.</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png\" width=\"743\" height=\"262\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:262,&quot;width&quot;:743,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:32737,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>This structure provides <strong>O(1) average-time complexity</strong> for insertions, deletions, and lookups.</p><blockquote><p>Hash indexes are widely used in <strong>key-value</strong> <strong>stores</strong> (eg., DynamoDB), and <strong>caching systems</strong> (eg., Redis).</p></blockquote><h2>2. B-Trees</h2><p>A <strong>B-tree</strong> is a <strong>self-balancing tree data structure</strong> designed to store <strong>sorted data</strong> in a way that optimizes reads, writes, and queries on large datasets.</p><p>It minimizes disk I/O by storing multiple keys in a single node and automatically balances itself during insertions and deletions.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png\" width=\"788\" height=\"281\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c408716d-6795-4055-9c87-9eff17329c15_788x281.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:281,&quot;width&quot;:788,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:16821,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>Unlike binary search trees, where each node has at most two children, B-Trees allow multiple children per node. The number of children is defined by the <strong>order</strong> of the B-Tree.</p><p><strong>Internal nodes</strong> contain keys and pointers to child nodes and <strong>leaf nodes</strong> contain keys and pointers to the actual data.</p><p>Keys in each node are stored in sorted order, enabling fast binary searches.</p><blockquote><p><strong>B-Trees</strong> are widely used for indexing in relational databases (eg., MySQL).</p><p>While many NoSQL databases favor <strong>LSM Trees</strong> for write-heavy workloads, some use <strong>B-Trees</strong> for read-heavy scenarios or as part of their indexing strategy.</p></blockquote><h2><strong>3. Skip Lists</strong></h2><p>A <strong>skip list</strong> is a <strong>probabilistic data structure</strong> that extends the functionality of linked lists by adding multiple levels of \"shortcuts\" to enable fast search, insertion, and deletion operations. </p><p>It is designed to offer performance comparable to balanced binary trees or B-Trees while being simpler to implement and manage.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png\" width=\"777\" height=\"307\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:307,&quot;width&quot;:777,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:24334,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>A skip list consists of <strong>multiple levels</strong>, with each level being a subset of the level below.</p><p>The bottom-most layer contains all the elements in sorted order, and higher layers are sparser subsets that provide shortcuts to quickly navigate the lower layers.</p><p>Nodes are promoted to higher levels <strong>probabilistically</strong>, ensuring an even distribution without the need for rebalancing.</p><blockquote><p>Skip lists are particularly well-suited for <strong>in-memory</strong> <strong>storage</strong> and <strong>dynamic datasets</strong> where updates are frequent.</p><p><strong>Redis</strong> uses skip lists to implement it&#8217;s sorted sets (<code>ZSET</code>), enabling fast insertions, deletions, and range queries while maintaining sorted order.</p></blockquote><h2>4. Memtables</h2><p>A <strong>memtable</strong> is an <strong>in-memory data structure</strong> used in modern databases to temporarily store write operations before they are flushed to disk.</p><p>It plays a critical role in optimizing write performance and ensuring data durability, especially in databases designed for high-throughput workloads, such as <strong>Cassandra</strong>, <strong>RocksDB</strong>, and <strong>HBase</strong>.</p><p>Memtables are typically implemented as a sorted structure like a <strong>Red-Black Tree</strong> or <strong>Skip List</strong>, enabling efficient lookups and ordered writes to disk.</p><p>When data is written to the database: it is logged in the <strong>Write-Ahead Log</strong> (to persist the change) and added to the <strong>memtable</strong>.</p><p>For recent writes, the memtable is checked first. If the key is not found in the memtable, the query searches <strong>on-disk SSTables (Sorted String Table)</strong> or other storage files.</p><p>When the memtable reaches its size limit, it is flushed to disk as an immutable SSTable and a new memtable is initialized for subsequent writes.</p><h2>5. SSTables</h2><p>An <strong>SSTable (Sorted String Table)</strong> is an immutable, on-disk data structure used in modern databases like <strong>Cassandra</strong>, <strong>RocksDB</strong>, and <strong>HBase</strong> to store sorted <strong>key-value</strong> pairs.</p><p>SSTables are primarily used in <strong>Log-Structured Merge Tree (LSM Tree) </strong>databases to optimize read and write performance.</p><p>They enable efficient sequential writes, fast lookups, and range queries.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png\" width=\"787\" height=\"548\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:548,&quot;width&quot;:787,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:43140,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using </strong><a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></figcaption></figure></div><h4>Key Characteristics of SSTables:</h4><ul><li><p>Once written, an SSTable is never modified. New writes are handled by creating new SSTables.</p></li><li><p>SSTables are written as sequential blocks to disk, minimizing fragmentation and improving I/O performance.</p></li><li><p>SSTables include an in-memory index or Bloom filter to quickly determine whether a key might exist without scanning the entire table.</p></li><li><p>Older SSTables are periodically merged into larger tables, removing duplicates and reclaiming storage space.</p></li></ul><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2><strong>6. Inverted Index</strong></h2><p>An <strong>inverted index</strong> is a data structure that maps <strong>terms (words or tokens)</strong> to the <strong>documents or locations</strong> where they appear.</p><p>It is called \"inverted\" because it reverses the conventional relationship of an index: instead of mapping documents to the terms they contain, it maps terms to the documents that contain them.</p><p>This structure allows for optimal handling of <strong>full-text searches </strong>like:</p><ul><li><p>Find all document which contain the terms: &#8220;database powerful&#8220;</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png\" width=\"808\" height=\"341\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/12460beb-892a-40db-b2f3-932e183b2acd_808x341.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:341,&quot;width&quot;:808,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:50996,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><h4><strong>How Inverted Index is Created:</strong></h4><ol><li><p><strong>Tokenization</strong>: Text is split into individual tokens (words or terms).</p><ul><li><p>Example: \"Database systems are powerful\" &#8594; [\"database\", \"systems\", \"are\", \"powerful\"]</p></li></ul></li><li><p><strong>Normalization</strong>: Tokens are standardized (e.g., lowercased, stemmed, or lemmatized).</p><ul><li><p>Example: \"Databases\" &#8594; \"database\"</p></li></ul></li><li><p><strong>Index Construction and Storage</strong>: For each term, a postings list is created or updated with the document ID and metadata (e.g., term frequency, positions).</p></li></ol><blockquote><p>Inverted indexes are widely used in <strong>databases</strong>, <strong>search engines</strong>, and <strong>information retrieval systems</strong> to enable efficient keyword lookups, Boolean queries, and relevance ranking.</p></blockquote><h2>7. Bloom Filters</h2><p>A <strong>Bloom Filter</strong> is a <strong>space-efficient</strong>, <strong>probabilistic</strong> <strong>data structure</strong> that answers the question: <strong>\"Does this element exist in a set?\"</strong></p><p>It starts as a <strong>bit array</strong> of size m, initialized with all bits set to <code>0</code>. It also requires <code>k</code> independent <strong>hash functions</strong>, each of which maps an element to one of the <code>m</code> positions in the bit array.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" width=\"454\" height=\"329\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:329,&quot;width&quot;:454,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:18824,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>To insert an element into the Bloom filter, you pass it through each of the <code>k</code> hash functions to get <code>k</code> positions in the bit array. The bits at these positions are set to 1.</p><p>To check if an element is in the set, you again pass it through the <code>k</code> hash functions to get <code>k</code> positions.</p><ul><li><p>If all the bits at these positions are set to 1, the element is <em>probably</em> in the set (though there's a chance it might be a false positive).</p></li><li><p>If any bit at these positions is 0, the element is <em>definitely</em> not in the set.</p></li></ul><p>Unlike traditional data structures, it does not store the actual elements, making it extremely memory-efficient.</p><blockquote><p>Bloom filters allow databases to quickly check if a key <em>might</em> exist in a specific data structure (e.g., an SSTable or a database partition). They avoid unnecessary disk lookups in places where the key is guaranteed to be absent.</p></blockquote><h2>8. Bitmap Indexes</h2><p>A <strong>bitmap index </strong>is a specialized indexing technique that encodes the values of a column as a series of <strong>bitmaps</strong>, where each bitmap corresponds to a unique value in the column.</p><p>Each bit in the bitmap represents whether a row in the dataset contains that value.</p><p>Consider a dataset with a column <code>Color</code>:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png\" width=\"511\" height=\"268\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:268,&quot;width&quot;:511,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:27461,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>In the bitmap index:</p><ul><li><p>Each row corresponds to a bit in the bitmap.</p></li><li><p>A <code>1</code> indicates that the value is present in the row, while a <code>0</code> indicates its absence.</p></li></ul><p>Bitmap indexes use <strong>bitwise operations</strong> (AND, OR, NOT, XOR) to efficiently filter data.</p><p><strong>Example Query</strong>: Find rows with <code>Color = 'Red' OR Color = 'Green'</code></p><ul><li><p>Retrieve the bitmap for <code>'Red'</code> &#8594; <code>1 0 0 1 0</code></p></li><li><p>Retrieve the bitmap for <code>'Green'</code> &#8594; <code>0 0 1 0 1</code></p></li><li><p>Perform a bitwise OR &#8594; <code>1 0 1 1 1</code></p></li></ul><blockquote><p>Bitmap indexes are widely used in <strong>data warehouses</strong>, <strong>columnar databases</strong>, and <strong>OLAP (Online Analytical Processing)</strong> systems for their ability to speed up complex queries like filtering, aggregations, and joins when dealing with large datasets containing low-cardinality columns (columns with few unique values).</p></blockquote><h2>9. R-trees</h2><p>An <strong>R-Tree </strong>(short for <strong>Rectangle Tree</strong>) is a tree-based data structure designed for indexing multidimensional spatial data, such as geographic locations, geometric shapes, or bounding boxes.</p><p>It is particularly effective for queries involving spatial relationships, such as intersections, containment, and nearest neighbors.</p><p>Each node is represented by an <strong>Minimum Bounding Rectangle (MBR)</strong> that encloses all its child nodes or objects. Leaf nodes store the actual spatial objects.</p><p>PostGIS, an extension of PostgreSQL, uses R-Trees to index spatial data for queries like: <strong>Find all locations within a rectangular region.</strong></p><pre><code>SELECT * FROM locations\nWHERE ST_Intersects(\n    geometry,\n    ST_MakeEnvelope(-74.02, 40.70, -73.93, 40.80)\n);</code></pre><h2>10. Write-Ahead Logs (WAL)</h2><p>A Write-Ahead Log is an <strong>append-only persistent log file</strong> that records all changes made to a database before they are applied to the actual database.</p><p>This ensures that even if the system crashes during a write operation, the database can recover to a consistent state by replaying or rolling back these logged changes.</p><h4>Structure of a WAL Entry:</h4><ul><li><p><strong>Transaction ID (TXID)</strong>: A unique identifier for the transaction.</p></li><li><p><strong>Operation Type</strong>: The action performed (INSERT, UPDATE, DELETE).</p></li><li><p><strong>Table Name</strong>: The table where the operation occurred.</p></li><li><p><strong>Key</strong>: The primary key or unique identifier of the record.</p></li><li><p><strong>Old Value</strong>: The previous value of the record (used in UPDATE and DELETE).</p></li><li><p><strong>New Value</strong>: The new value of the record (used in INSERT and UPDATE).</p></li><li><p><strong>Timestamp</strong>: The time the operation was logged.</p></li></ul><h4>Sample WAL Record:</h4><pre><code>TXID: 1002\nOperation: UPDATE\nTable: users\nKey: id=1\nOld Value: {\"id\": 1, \"name\": \"Alice\", \"email\": \"alice@example.com\", \"age\": 30}\nNew Value: {\"id\": 1, \"name\": \"Alice\", \"email\": \"alice.new@example.com\", \"age\": 31}\nTimestamp: 2024-11-19T10:05:00Z</code></pre><p>By logging changes before they are applied to the main database, WAL enables databases to recover from crashes and maintain ACID (Atomicity, Consistency, Isolation, Durability) properties.</p><p>Periodically, the database truncates or archives old log entries after ensuring that the changes are safely written to the main database file.</p><div><hr></div><p>Thank you so much for reading.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/data-structures-that-make-databases-scalable?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/data-structures-that-make-databases-scalable?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p><h3>References:</h3><ul><li><p><a href=\"https://www.youtube.com/watch?v=W_v05d_2RTo\">8 Key Data Structures That Power Modern Databases</a></p></li></ul>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png",
      "enclosureMime": ""
    },
    {
      "title": "What are Bloom Filters and Where are they Used?",
      "url": "https://blog.algomaster.io/p/bloom-filters",
      "date": 1732428410,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Have you ever wondered how <strong>Netflix</strong> knows which shows you've already watched? Or how <strong>Amazon</strong> avoids showing you products you've already purchased?</p><p>Using a traditional data structure like a <strong>hash table</strong> for these checks could consume significant amount of <strong>memory</strong>, especially with millions of users and items. </p><p>Instead, many systems rely on a more efficient data structure&#8212;a <strong>Bloom Filter</strong>.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" width=\"522\" height=\"378.27753303964755\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:329,&quot;width&quot;:454,&quot;resizeWidth&quot;:522,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>In this article, we will learn what a bloom filter is, how it works, how to implement it in code, it&#8217;s real-world applications and limitations.</p><div><hr></div><h2>&#128227; <a href=\"https://newsletter.posthog.com/\">Improve your Product Skills - PostHog Newsletter (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" width=\"1456\" height=\"291\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:291,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\" loading=\"lazy\" fetchpriority=\"high\"></picture><div></div></div></a></figure></div><p><strong><a href=\"https://newsletter.posthog.com/\">Product for Engineers</a></strong> is PostHog&#8217;s newsletter dedicated to helping engineers improve their product skills. It features curated advice on building great products, lessons (and mistakes) from building PostHog, and research into the practices of top startups.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://newsletter.posthog.com/&quot;,&quot;text&quot;:&quot;Subscriber for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://newsletter.posthog.com/\"><span>Subscriber for FREE</span></a></p><div><hr></div><h2>&#129300; What is a Bloom Filter?</h2><p>A <strong>Bloom Filter</strong> is a <strong>probabilistic data structure</strong> that allows you to quickly check whether an element might be in a set.</p><p>It&#8217;s useful in scenarios where you need <strong>fast lookups</strong> and don&#8217;t want to use a large amount of memory, but you&#8217;re okay with occasional <strong>false positives</strong>.</p><h2>&#129513; Key Components of a Bloom Filter:</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png\" width=\"544\" height=\"461.92070484581495\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:771,&quot;width&quot;:908,&quot;resizeWidth&quot;:544,&quot;bytes&quot;:57975,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ol><li><p><strong>Bit Array</strong>: The Bloom Filter consists of a bit array of a fixed size, initialized to all zeros. This array represents whether certain elements are in the set.</p></li><li><p><strong>Hash Functions</strong>: To add or check an element, a Bloom Filter uses multiple hash functions. Each hash function maps an element to an index in the bit array.</p></li></ol><h2>&#9881;&#65039; How Does a Bloom Filter Work?</h2><p>A Bloom filter works by using multiple hash functions to map each element in the set to a bit array. </p><h4><strong>1. Initialization:</strong></h4><ul><li><p>A Bloom filter starts with an empty bit array of size <code>m</code> (all bits are initially set to 0).</p></li><li><p>It also requires <code>k</code> independent hash functions, each of which maps an element to one of the <code>m</code> positions in the bit array.</p></li></ul><h4><strong>2. Inserting an Element:</strong></h4><ul><li><p>To insert an element into the Bloom filter, you pass it through each of the <code>k</code> hash functions to get <code>k</code> positions in the bit array.</p></li><li><p>The bits at these positions are set to 1.</p></li></ul><h4><strong>3. Checking for Membership:</strong></h4><ul><li><p>To check if an element is in the set, you again pass it through the <code>k</code> hash functions to get <code>k</code> positions.</p></li><li><p>If all the bits at these positions are set to 1, the element is considered to be in the set (though there's a chance it might be a false positive).</p></li><li><p>If any bit at these positions is 0, the element is definitely not in the set.</p></li></ul><h2>&#128270; Example: Using a Bloom Filter for URL Checking</h2><p>Imagine you're building a web crawler that needs to keep track of which URLs it has already visited. </p><p>Instead of storing every URL (which would require a lot of memory), you decide to use a Bloom Filter.</p><h4>Step 1: Set Up the Bloom Filter</h4><ul><li><p><strong>Initialize a Bit Array</strong>: Let&#8217;s assume our Bloom Filter uses a bit array of size <strong>10</strong>, initially all set to 0.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png\" width=\"499\" height=\"136.93488372093023\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:177,&quot;width&quot;:645,&quot;resizeWidth&quot;:499,&quot;bytes&quot;:17621,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div></li><li><p><strong>Choose Hash Functions</strong>: We&#8217;ll use two hash functions in this example. These hash functions take an input (like a URL) and output an index in the bit array.</p></li></ul><h4>Step 2: Adding a URL to the Bloom Filter</h4><p>Suppose we want to add the URL <code>example.com</code> to our Bloom Filter.</p><ol><li><p><strong>Hash Function 1</strong> generates an index of <code>3</code> for <code>example.com</code>.</p></li><li><p><strong>Hash Function 2</strong> generates an index of <code>7</code> for <code>example.com</code>.</p></li></ol><p>We set the bits at indices 3 and 7 in the bit array to 1.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png\" width=\"463\" height=\"142.84806201550387\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8765730b-731c-4237-926c-930d6fb067ae_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:463,&quot;bytes&quot;:19068,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h4>Step 3: Adding Another URL</h4><p>Now, let's add another URL, <code>algomaster.io</code>.</p><ol><li><p><strong>Hash Function 1</strong> generates an index of <code>1</code> for <code>algomaster.io.</code></p></li><li><p><strong>Hash Function 2</strong> generates an index of <code>4</code> for <code>algomaster.io.</code></p></li></ol><p>We set the bits at indices 1 and 4 in the bit array to 1.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png\" width=\"465\" height=\"143.46511627906978\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:465,&quot;bytes&quot;:18840,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h4>Step 4: Checking for a URL in the Bloom Filter</h4><p>Suppose we want to check if <code>example.com</code> is already in the Bloom Filter.</p><ol><li><p><strong>Hash Function 1</strong> generates index <code>3</code> for <code>example.com</code>.</p></li><li><p><strong>Hash Function 2</strong> generates index <code>7</code> for <code>example.com</code>.</p></li></ol><p>Since both bits at indices 3 and 7 are set to 1, we can say that <code>example.com</code> <strong>is probably in the set</strong> (there's a small chance of a false positive).</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png\" width=\"481\" height=\"148.4015503875969\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:481,&quot;bytes&quot;:19103,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h4>Step 5: Checking for a Non-Existent URL</h4><p>Now, let's check if <code>nonexistent.com</code> is in the Bloom Filter.</p><ol><li><p><strong>Hash Function 1</strong> generates index <code>2</code> for <code>nonexistent.com</code>.</p></li><li><p><strong>Hash Function 2</strong> generates index <code>5</code> for <code>nonexistent.com</code>.</p></li></ol><p>Since the bits at indices 2 and 5 are both 0, we can confidently say that <code>nonexistent.com</code> <strong>is not in the set</strong>.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png\" width=\"493\" height=\"152.10387596899224\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:493,&quot;bytes&quot;:19134,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h3>&#128187; Code Implementation (Java)</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png\" width=\"1456\" height=\"1342\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1342,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:284385,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h4>Explanation</h4><ol><li><p><strong>BitSet</strong>: Java&#8217;s <code>BitSet</code> is used for the bit array to efficiently store and manipulate bits.</p></li><li><p><strong>Hash Functions</strong>: The code uses two simple hash functions. You can add more complex ones for better distribution.</p></li><li><p><strong>add(String item)</strong>: This method takes an item, applies each hash function, and sets the corresponding bit in the bit array.</p></li><li><p><strong>mightContain(String item)</strong>: This method checks if an item might be in the set by testing if all corresponding bits are 1.</p><ul><li><p>If any bit is 0, the item is <strong>definitely not in the set</strong>.</p></li><li><p>If all bits are 1, the item is <strong>probably in the set</strong> (with a small chance of a false positive).</p></li></ul></li></ol><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>&#127758; Real-World Applications of Bloom Filters</h2><p>Bloom Filters are widely used in real-world applications where space efficiency and speed are essential, and occasional false positives are acceptable. </p><p>Here are some common scenarios where Bloom Filters are employed:</p><h3>1. <strong>Web Caching</strong></h3><p><strong>Problem</strong>: Web servers often cache frequently accessed pages or resources to improve response times. However, checking the cache for every resource could become costly and slow as the cache grows.</p><p><strong>Solution</strong>: A Bloom Filter can be used to quickly check if a URL might be in the cache. When a request arrives, the Bloom Filter is checked first. If the Bloom Filter indicates the URL is &#8220;probably in the cache,&#8221; a cache lookup is performed. </p><p>If it indicates the URL is &#8220;definitely not in the cache,&#8221; the server skips the cache lookup and fetches the resource from the primary storage, saving time and resources.</p><h3>2. Spam Filtering in Email Systems</h3><p><strong>Problem</strong>: Email systems need to filter out spam emails without constantly checking large spam databases.</p><p><strong>Solution</strong>: A Bloom Filter can store hashes of known spam email addresses. When a new email arrives, the Bloom Filter checks if the sender's address might be in the spam list.</p><p>This allows the email system to quickly determine whether an email is likely to be spam or legitimate.</p><h3>3. Databases</h3><p><strong>Problem</strong>: Databases, especially distributed ones, often need to check if a key exists before accessing or modifying data. Performing these checks for every key directly in the database can be slow.</p><p><strong>Solution</strong>: Many databases, such as <strong>Cassandra</strong>, <strong>HBase</strong>, and <strong>Redis</strong>, use Bloom Filters to avoid unnecessary disk lookups for non-existent keys. The Bloom Filter quickly checks if a key might be present. If the Bloom Filter indicates &#8220;not present,&#8221; it can skip the database lookup.</p><h3>4. Content Recommendation Systems</h3><p><strong>Problem</strong>: Recommendation systems, such as those used by streaming services, need to avoid recommending content that users have already consumed.</p><p><strong>Solution</strong>: A Bloom Filter can track the content each user has previously watched or interacted with. When generating new recommendations, the Bloom Filter quickly checks if an item might already have been consumed.</p><h3>5. Social Network Friend Recommendations</h3><p><strong>Problem</strong>: Social networks like Facebook or LinkedIn recommend friends or connections to users, but they need to avoid recommending people who are already friends.</p><p><strong>Solution</strong>: A Bloom Filter is used to store the list of each user&#8217;s existing connections. Before suggesting new friends, the Bloom Filter can be checked to ensure the user isn&#8217;t already connected with them.</p><h2>&#128721; Limitations of Bloom Filters</h2><h3>1. <strong>False Positives</strong></h3><p>Bloom Filters can produce false positives, meaning they may incorrectly indicate that an element is present in the set when it is not.</p><blockquote><p><strong>Example: </strong>Consider a scenario where a non-existent key is checked against a Bloom Filter. If all the hash functions map to bits that are already set to <code>1</code>, the filter falsely signals the presence of the key.</p></blockquote><p>Such false positives can lead to unnecessary processing or incorrect assumptions about data.</p><p><strong>For instance,</strong> in a database system, this might trigger unnecessary cache lookups or wasted attempts to fetch data that doesn&#8217;t actually exist.</p><p>The likelihood of false positives can be reduced by choosing an optimal size for the bit array and an appropriate number of hash functions, but they can never be completely eliminated.</p><h3>2. <strong>No Support for Deletions</strong></h3><p>Standard Bloom Filters do not support element deletions. Once a bit is set to 1 by adding an element, it cannot be unset because other elements may also rely on that bit.</p><p>This limitation makes Bloom Filters unsuitable for dynamic sets where elements are frequently added and removed.</p><p>Variants like the <strong>Counting Bloom Filter</strong> can allow deletions by using counters instead of bits, but this requires more memory.</p><h3>3. Limited to Set Membership Queries</h3><p>Bloom Filters are specifically designed to answer set membership queries. They do not provide information about the actual elements in the set, nor do they support complex queries or operations beyond basic membership checks.</p><p><strong>Example</strong>: If you need to know the details of an element (e.g., full information about a user ID), you would need another data structure in addition to the Bloom Filter.</p><h3><strong>4. Not Suitable for Exact Set Membership</strong></h3><p>Bloom Filters are probabilistic, meaning they cannot provide a definite &#8220;yes&#8221; answer (only a &#8220;probably yes&#8221; or &#8220;definitely no&#8221;).</p><p>For applications requiring exact membership information, Bloom Filters are not suitable. Other data structures like hash tables or balanced trees should be used instead.</p><h3>5. Vulnerable to Hash Collisions</h3><p>Hash collisions are more likely as the number of elements in the Bloom Filter grows. Multiple elements can end up setting or relying on the same bits, increasing false positives.</p><p>As hash collisions accumulate, the filter&#8217;s effectiveness decreases. With a high load factor, the filter may perform poorly and become unreliable.</p><p>The use of additional hash functions can help reduce collisions, but increasing the number of hash functions also increases the complexity and the memory requirements.</p><h2>&#9989; Conclusion</h2><p>To summarize, bloom filters are a powerful tool for space-efficient set membership testing, with a wide range of applications. While they may not be suitable for all applications due to the possibility of false positives, they shine in scenarios where space is at a premium and a small error rate is acceptable.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/bloom-filters?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/bloom-filters?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png",
      "enclosureMime": ""
    },
    {
      "title": "Concurrency vs Parallelism",
      "url": "https://blog.algomaster.io/p/concurrency-vs-parallelism",
      "date": 1733028341,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p><strong>Concurrency</strong> and <strong>parallelism</strong> are two of the most misunderstood concepts in <strong>system design</strong>.</p><p>While they might sound similar, they refer to fundamentally different approaches to handling tasks.</p><p>Simply put, one is about <strong>managing</strong> multiple tasks simultaneously, while the other is about <strong>executing</strong> multiple tasks at the same time.</p><p>In this article, we&#8217;ll break down the differences between these two concepts, explore how they work, and illustrate their real-world applications with examples and code.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/NpM99yj\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png\" width=\"536\" height=\"536\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1200,&quot;width&quot;:1200,&quot;resizeWidth&quot;:536,&quot;bytes&quot;:307604,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/NpM99yj\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/NpM99yj&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/NpM99yj\"><span>Get Started</span></a></p><div><hr></div><h2>1. What is concurrency?</h2><blockquote><p><em>Concurrency </em>means an application is making progress on more than one task at the same time.</p></blockquote><p>In a computer, the tasks are executed using <strong>Central Processing Unit (CPU).</strong></p><p>While a single <strong>CPU</strong> can work on only one task at a time, it achieves concurrency by rapidly switching between tasks. </p><p>For example, consider playing music while writing code. The CPU alternates between these tasks so quickly that, to the user, it feels like both are happening at the same time.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png\" width=\"701\" height=\"289\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:289,&quot;width&quot;:701,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:20891,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><p>This seamless switching&#8212;enabled by modern CPU designs&#8212;creates the <strong>illusion of multitasking </strong>and<strong> </strong>gives the appearance of tasks running in parallel.</p><p>However, it&#8217;s important to note <strong>this is not parallel</strong>. <strong>This is concurrent</strong>.</p><p>Concurrency is primarily achieved using <strong>threads</strong>, which are the smallest units of execution within a process. The CPU switches between threads to handle multiple tasks concurrently, ensuring the system remains responsive.</p><p>The primary objective of concurrency is to <strong>maximize CPU utilization</strong> by minimizing idle time.</p><p><strong>For example:</strong></p><ul><li><p>When one thread or process is waiting for I/O operations, database transactions, or external program launches, the CPU can allocate resources to another thread.</p></li></ul><p>This ensures the CPU remains productive, even when individual tasks are stalled.</p><h3><strong>How Does Concurrency Works?</strong></h3><p>Concurrency in a CPU is achieved through <strong>context switching</strong>. </p><p>Here&#8217;s how it works:</p><ol><li><p><strong>Context Saving</strong>: When the CPU switches from one task to another, it saves the current task's state (e.g., program counter, registers) in memory.</p></li><li><p><strong>Context Loading</strong>: The CPU then loads the context of the next task and continues executing it.</p></li><li><p><strong>Rapid Switching</strong>: The CPU repeats this process, switching between tasks so quickly that it seems like they are running simultaneously.</p></li></ol><h4>The Cost of Context Switching</h4><p>While context switching enables concurrency, it also introduces <strong>overhead</strong>:</p><ul><li><p>Every switch requires saving and restoring task states, which consumes both time and resources.</p></li><li><p>Excessive context switching can degrade performance by increasing CPU overhead.</p></li></ul><h3>Real-World Examples of Concurrency</h3><h4>1. <strong>Web Browsers</strong></h4><p>Modern web browsers perform multiple tasks concurrently:</p><ul><li><p>Rendering web pages (HTML/CSS).</p></li><li><p>Fetching external resources like images and scripts.</p></li><li><p>Responding to user actions such as clicks and scrolling.</p></li></ul><p>Each of these tasks is managed by separate threads, ensuring the browser remains responsive while loading and displaying content.</p><h4><strong>2. Web Servers</strong></h4><p>Web servers like Apache or Nginx handle multiple client requests concurrently:</p><ul><li><p>Each request is processed independently using threads or asynchronous I/O.</p></li><li><p>For example, a server can handle multiple users loading different pages simultaneously without blocking.</p></li></ul><h4><strong>3. Chat Applications</strong></h4><p>Chat applications perform several operations concurrently:</p><ul><li><p>Processing incoming messages.</p></li><li><p>Updating the user interface with new messages.</p></li><li><p>Sending outgoing messages.</p></li></ul><p>This ensures smooth real-time communication without delays or freezes.</p><h4><strong>4. Video Games</strong></h4><p>Video games rely heavily on concurrency to deliver an immersive experience:</p><ul><li><p>Rendering graphics.</p></li><li><p>Processing user input (e.g., character movement).</p></li><li><p>Simulating physics.</p></li><li><p>Playing background audio.</p></li></ul><p>For example, while a player moves a character, the game simultaneously updates the environment and plays music, ensuring smooth gameplay.</p><h3>Code Example</h3><p>Most popular programming languages come with inbuilt support for creating and managing threads.</p><p>Here's an example of a concurrent program in Java:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png\" width=\"616\" height=\"707.8508914100486\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1418,&quot;width&quot;:1234,&quot;resizeWidth&quot;:616,&quot;bytes&quot;:240878,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><h4>Output (Interleaved Execution):</h4><pre><code>Task A - Step 1\nTask B - Step 1\nTask C - Step 1\nTask A - Step 2\nTask B - Step 2\nTask C - Step 2\n...\n</code></pre><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week!</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>2. What is parallelism?</h2><blockquote><p><em>Parallelism</em> means multiple tasks are executed simultaneously.</p></blockquote><p>To achieve parallelism, an application divides its tasks into smaller, independent subtasks. These subtasks are distributed across multiple CPUs, CPU cores, GPU cores, or similar processing units, allowing them to be processed in parallel.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png\" width=\"595\" height=\"276\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:276,&quot;width&quot;:595,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:20158,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><p>To achieve true parallelism, your application must:</p><ol><li><p>Utilize more than one thread.</p></li><li><p>Ensure each thread is assigned to a separate CPU core or processing unit.</p></li></ol><h3><strong>How does Parallelism Works?</strong></h3><p>Modern CPUs consist of multiple cores. Each core can independently execute a task. Parallelism divides a problem into smaller parts and assigns each part to a separate core for simultaneous processing.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png\" width=\"1456\" height=\"541\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:541,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:88812,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><ul><li><p><strong>Task Division</strong>: The problem is broken into smaller independent sub-tasks.</p></li><li><p><strong>Task Assignment</strong>: Sub-tasks are distributed across multiple CPU cores.</p></li><li><p><strong>Execution</strong>: Each core processes its assigned task simultaneously.</p></li><li><p><strong>Result Aggregation</strong>: Results from all cores are combined to form the final output.</p></li></ul><h3>Real-World Examples of Parallelism</h3><h4><strong>1. Machine Learning Training</strong></h4><ul><li><p>Training deep learning models involves dividing datasets into smaller batches.</p></li><li><p>Each batch is processed simultaneously across multiple GPUs or CPU cores, significantly speeding up the training process.</p></li></ul><h4><strong>2. Video Rendering</strong></h4><ul><li><p>Video frames are rendered independently, making it possible to process multiple frames simultaneously.</p></li><li><p>For example, rendering a 3D animation becomes much faster when using multiple cores to handle different frames in parallel.</p></li></ul><h4><strong>3. Web Crawlers</strong></h4><ul><li><p>Web crawlers like Googlebot break a list of URLs into smaller chunks and process them in parallel.</p></li><li><p>This allows the crawler to fetch data from multiple websites simultaneously, reducing the time to gather information.</p></li></ul><h4><strong>4. Data Processing</strong></h4><ul><li><p>Big data frameworks like Apache Spark leverage parallelism to handle massive datasets.</p></li><li><p>Tasks such as analyzing logs from millions of users are distributed across a cluster, enabling simultaneous processing and faster insights.</p></li></ul><h4><strong>5. Scientific Simulations</strong></h4><ul><li><p>Simulations like weather modeling or molecular interactions require heavy computations.</p></li><li><p>These computations are divided among multiple cores, allowing simultaneous execution and faster results.</p></li></ul><h3>Code Example</h3><p>Here's a simple example of parallelism in Java using the <code>ForkJoinPool</code> framework to compute the sum of an array in parallel:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png\" width=\"1244\" height=\"1396\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1396,&quot;width&quot;:1244,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:284116,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><ol><li><p><strong>Task Splitting</strong>: The array is divided into smaller segments until the segment size is below the <code>THRESHOLD</code>.</p></li><li><p><strong>Parallel Execution</strong>: Subtasks are executed in parallel using separate threads from the <code>ForkJoinPool</code>.</p></li><li><p><strong>Result Combination</strong>: Results from all subtasks are combined to compute the final sum.</p></li></ol><h2>4. Concurrency and Parallelism Combinations</h2><h4><strong>4.1 Concurrent, Not Parallel</strong></h4><p>An application can be concurrent without being parallel. In this case:</p><ul><li><p>The application makes progress on multiple tasks at the same time <strong>seemingly</strong> (concurrently).</p></li><li><p>However, it achieves this by <strong>switching</strong> between tasks rapidly, rather than running them simultaneously.</p></li><li><p><strong>Example</strong>: A single-core CPU alternating between tasks, giving the illusion of multitasking.</p></li></ul><h4><strong>4.2 Parallel, Not Concurrent</strong></h4><p>An application can be parallel without being concurrent. Here:</p><ul><li><p>A single task is divided into subtasks, and these subtasks are executed simultaneously on separate cores.</p></li><li><p>There is no overlap between tasks; one task (and its subtasks) completes before the next task starts.</p></li><li><p><strong>Example</strong>: Video rendering, where a single video is divided into frames, and each frame is processed in parallel.</p></li></ul><h4><strong>4.3 Neither Concurrent Nor Parallel</strong></h4><p>Some applications are neither concurrent nor parallel. This means:</p><ul><li><p>Tasks are executed sequentially, one at a time, without any overlap or parallel execution.</p></li><li><p><strong>Example</strong>: A single-core CPU where only one task is processed, and it completes fully before the next task begins.</p></li></ul><h4><strong>4.4 Concurrent and Parallel</strong></h4><p>An application can be both <strong>concurrent and parallel</strong>, combining the strengths of both execution models.</p><p>In this approach:</p><ol><li><p>Multiple tasks make progress at the same time, and each task is also divided into subtasks that are executed in parallel.</p></li><li><p><strong>Example</strong>: A Multi-core CPU where some subtasks run concurrently on the same core, while others run in parallel on separate cores.</p></li></ol><p></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png\" width=\"584\" height=\"392.9773399014778\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:683,&quot;width&quot;:1015,&quot;resizeWidth&quot;:584,&quot;bytes&quot;:68152,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><p>In the above example, a single task is broken into 4 <strong>subtasks</strong>, which are distributed across 2 CPU cores for <strong>parallel execution</strong>. These subtasks are executed by multiple threads. Some threads run on the same CPU core (concurrent execution), while others run on separate CPU cores (parallel execution).</p><p>If each subtask is executed by its own thread on a <strong>dedicated CPU</strong> (e.g., 4 threads on 4 CPUs), the task execution becomes fully <strong>parallel</strong>, with no concurrency involved.</p><p>It&#8217;s often challenging to break a task into exactly as many subtasks as there are CPUs. Instead, tasks are typically divided into a number of subtasks that align naturally with the problem's structure and number of CPU cores available.</p><h2>Summary</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png\" width=\"1456\" height=\"1079\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1079,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:412640,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/concurrency-vs-parallelism?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/concurrency-vs-parallelism?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png",
      "enclosureMime": ""
    },
    {
      "title": "System Design: What is Service Discovery?",
      "url": "https://blog.algomaster.io/p/service-discovery-in-distributed-systems",
      "date": 1733407022,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Back when applications ran on a <strong>single server</strong>, life was simple. </p><p>Today&#8217;s modern applications are far more complex, consisting of <strong>dozens or even hundreds of services</strong>, each with multiple instances that scale up and down dynamically.</p><p>This makes it harder for services to efficiently <strong>find and communicate</strong> with each other across networks.</p><p>That&#8217;s where <strong>Service Discovery</strong> comes into play.</p><p>In this article, we&#8217;ll dive into what service discovery is, why it&#8217;s important, how it works, the different types (client and server side discovery), and best practices for implementing it effectively.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/yx8gx14\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:217429,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/yx8gx14\">Multiplayer's</a></strong> System Dashboard auto-discovers, tracks, and documents your entire system architecture&#8212;from its components to APIs, dependencies, and environments. Gain real-time, comprehensive visibility into your system, all at a glance.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/yx8gx14&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary button-wrapper\" href=\"https://dub.sh/yx8gx14\"><span>Get Started for FREE</span></a></p><div><hr></div><h2><strong>1. What is Service Discovery?</strong></h2><p><strong>Service discovery</strong> is a mechanism that allows services in a distributed system to <strong>find and communicate</strong> with each other dynamically. </p><p>It hides the complex details of where services are located, so they can interact without knowing each other's exact network spots.</p><p>Service discovery registers and maintains a record of all your services in a <strong>service registry</strong>. This service registry acts as a single source of truth that allows your services to query and communicate with each other.</p><p><strong>Example service registry record of a service:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" width=\"594\" height=\"537.4712990936556\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/58cc013a-3a06-474e-a695-82fef7d469be_662x599.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:599,&quot;width&quot;:662,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:54339,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>A service registry typically stores:</p><ul><li><p><strong>Basic Details:</strong> Service name, IP, port, and status.</p></li><li><p><strong>Metadata:</strong> Version, environment, region, tags, etc.</p></li><li><p><strong>Health Information:</strong> Health status, last health check.</p></li><li><p><strong>Load Balancing Info:</strong> Weights, priorities.</p></li><li><p><strong>Secure Communication:</strong> Protocols, certificates.</p></li></ul><p>This abstraction is important in environments where services are constantly being added, removed, or scaled.</p><h2><strong>2. Why is Service Discovery Important?</strong></h2><p>Think about a massive system like <strong>Netflix</strong>, with hundreds of microservices working together. Hardcoding the locations of these services isn&#8217;t scalable. If a service moves to a new server or scales dynamically, it could break the entire system.</p><p><strong>Service discovery</strong> solves this by dynamically and reliably enabling services to locate and communicate with one another.</p><p>Here are its key benefits:</p><ul><li><p><strong>Reduced Manual Configuration:</strong> Services can automatically discover and connect to each other, eliminating the need for manual configuration and hardcoding of network locations.</p></li><li><p><strong>Improved Scalability:</strong> As new service instances are added or removed, service discovery ensures that other services can seamlessly adapt to the changing environment.</p></li><li><p><strong>Fault Tolerance:</strong> Service discovery often include health checks, enabling systems to automatically reroute traffic away from failing service instances.</p></li><li><p><strong>Simplified Management:</strong> Having a central registry of services makes it easier to monitor, manage, and troubleshoot the entire system.</p></li></ul><h2>3. Service Registration Options</h2><p>Service registration is the process where a service announces its availability to a <strong>service registry</strong>, making it discoverable by other services.</p><p>The method of registration can vary depending on the architecture, tools, and deployment environment.</p><p>Here are the most common <strong>service registration options</strong>:</p><h4>3.1. <strong>Manual Registration</strong></h4><p>In manual registration, service details are added to the registry manually by a developer or operator. This approach is simple but not suitable for dynamic systems where services scale or move frequently.</p><h4>3.2. <strong>Self-Registration</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" width=\"565\" height=\"278\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:278,&quot;width&quot;:565,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:22928,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In self-registration, the service is responsible for registering itself with the service registry when it starts. The service includes logic to interact with the registry, such as sending API requests to register its details.</p><p><strong>How it works:</strong></p><ol><li><p>When a service or an instance starts, it retrieves its own network information (e.g., IP address, port).</p></li><li><p>It sends a registration request to the service registry (e.g., via HTTP or gRPC).</p></li><li><p>To ensure the registry has up-to-date information, the service may periodically send heartbeat signals to confirm it is active and healthy.</p></li></ol><h4>3.3. <strong>Third-Party Registration (Sidecar Pattern)</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" width=\"603\" height=\"289.9571209800919\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:314,&quot;width&quot;:653,&quot;resizeWidth&quot;:603,&quot;bytes&quot;:26561,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In third-party registration, an external agent or \"sidecar\" process handles service registration. The service itself does not directly interact with the registry. Instead, the sidecar detects the service and registers it on its behalf.</p><p><strong>How it works:</strong></p><ol><li><p>The sidecar runs alongside the service (e.g., in the same container or on the same host).</p></li><li><p>The sidecar detects when the service starts and gathers its network details.</p></li><li><p>It sends the registration request to the service registry.</p></li></ol><h4>3.4. <strong>Automatic Registration by Orchestrators</strong></h4><p>In modern orchestrated environments like <strong>Kubernetes</strong>, service registration happens automatically. The orchestration platform manages the lifecycle of services and updates the service registry as services start, stop, or scale.</p><p><strong>How it works:</strong></p><ol><li><p>The orchestrator (e.g., Kubernetes) detects when a service or container is deployed.</p></li><li><p>It assigns the service an IP address and port.</p></li><li><p>It registers the service automatically with its built-in service discovery mechanism (e.g., Kubernetes DNS).</p></li></ol><h4>3.5. <strong>Configuration Management Systems</strong></h4><p>Some systems use configuration management tools (e.g., Chef, Puppet, Ansible) to register services. These tools manage the service lifecycle and update the service registry whenever services are added or removed.</p><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2><strong>4. Types of Service Discovery</strong></h2><p>There are two primary types of service discovery: client-side discovery and server-side discovery.</p><h3><strong>4.1. Client-Side Discovery</strong></h3><p>In this model, the responsibility for discovering and connecting to a service lies entirely with the client.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" width=\"647\" height=\"446.6266280752533\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:691,&quot;resizeWidth&quot;:647,&quot;bytes&quot;:40525,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services (e.g., <code>UserService</code>, <code>PaymentService</code>) register themselves with a centralized <strong>service registry</strong>.</p><ol><li><p>They provide their network details (IP address and port) along with metadata like service health or version.</p></li></ol></li><li><p><strong>Client Queries the Registry: </strong>The client (a microservice or API gateway) sends a request to the <strong>service registry</strong> to find the instances of a target service (e.g., <code>PaymentService</code>).</p><ol><li><p>The registry responds with a list of available instances, including their IP addresses and ports.</p></li></ol></li><li><p><strong>Client Routes the Request: </strong>Based on the information retrieved, the client selects one of the service instances (often using a load balancing algorithm) and connects directly to it.</p></li></ol><p>The client maintains control over how requests are routed, such as distributing traffic evenly across instances or prioritizing the closest instance.</p><h4>Example Workflow</h4><p>Let&#8217;s consider a real-world example of a food delivery app:</p><ul><li><p>A <strong>Payment Service</strong> has three instances running on different servers.</p></li><li><p>When the <strong>Order Service</strong> needs to process a payment, it queries the <strong>service registry</strong> for the location of the <code>Payment Service</code>.</p></li><li><p>The service registry responds with a list of available instances (e.g., <code>IP1:Port1</code>, <code>IP2:Port2</code>, <code>IP3:Port3</code>).</p></li><li><p>The <strong>Order Service</strong> chooses an instance (e.g., <code>IP1:Port1</code>) and sends the payment request directly to it.</p></li></ul><h4><strong>Advantages</strong>:</h4><ul><li><p>Simple to implement and understand.</p></li><li><p>Reduces the load on a central load balancer.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Consumers need to implement discovery logic.</p></li><li><p>Changes in the registry protocol require changes in clients.</p></li></ul><blockquote><p><strong>Example:</strong> Netflix&#8217;s open-source library, <strong>Eureka</strong>, is a popular tool for client-side service discovery.</p></blockquote><h3><strong>4.2. Server-Side Discovery</strong></h3><p>In this model, the client delegates the responsibility of discovering and routing requests to a specific service instance to a <strong>centralized server or load balancer</strong>.</p><p>Unlike client-side discovery, the client does not need to query the service registry directly or perform any load balancing itself. </p><p>Instead, the client simply sends a request to a central server (load balancer or api gateway), which handles the rest.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" width=\"600\" height=\"397.6284584980237\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:503,&quot;width&quot;:759,&quot;resizeWidth&quot;:600,&quot;bytes&quot;:44548,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services register themselves with a centralized <strong>service registry</strong>, similar to client-side discovery.</p><ul><li><p>The service registry keeps track of all service instances, their IP addresses, ports, and metadata.</p></li></ul></li><li><p><strong>Client Sends Request: </strong>The client sends a request to a <strong>load balancer</strong> or <strong>API gateway</strong>, specifying the service it wants to communicate with (e.g., <code>payment-service</code>).</p><ul><li><p>The client does not query the service registry or know the specific location of the service instances.</p></li></ul></li><li><p><strong>Server Queries the Service Registry: </strong>The load balancer or gateway queries the service registry to find available instances of the requested service.</p></li><li><p><strong>Routing: </strong>The load balancer selects a suitable service instance (based on factors like load, proximity, or health) and routes the client&#8217;s request to that instance.</p></li><li><p><strong>Response: </strong>The service instance processes the request and sends the response back to the client via the load balancer or gateway.</p></li></ol><h4>Example Workflow</h4><p>Let&#8217;s take an example of an e-commerce platform with microservices for \"Order Management\" and \"Payment Processing.\"</p><ol><li><p><strong>Registration: </strong>The <code>PaymentService</code> registers two instances with the service registry:</p><ul><li><p>Instance 1: <code>IP1:8080</code></p></li><li><p>Instance 2: <code>IP2:8081</code></p></li></ul></li><li><p><strong>Client Request: </strong>The <code>OrderService</code> sends a request to the <strong>load balancer</strong> or API gateway, specifying the <code>PaymentService</code>.</p></li><li><p><strong>Discovery and Routing: </strong>The load balancer queries the service registry and retrieves the list of available <code>PaymentService</code> instances.</p><ul><li><p>It selects one instance (e.g., <code>IP1:8080</code>) and routes the request to it.</p></li></ul></li><li><p><strong>Processing and Response: </strong>The selected instance of <code>PaymentService</code> processes the request and sends the response back to the <code>OrderService</code> via the load balancer.</p></li></ol><h4><strong>Advantages</strong>:</h4><ul><li><p>Centralizes discovery logic, reducing the complexity for consumers.</p></li><li><p>Easier to manage and update discovery protocols.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Introduces an additional network hop.</p></li><li><p>The load balancer can become a single point of failure.</p></li></ul><blockquote><p><strong>Example</strong>: AWS Elastic Load Balancer (ELB) integrates with the AWS service registry for server-side discovery.</p></blockquote><h2><strong>5. Best Practices for Implementing Service Discovery</strong></h2><ol><li><p><strong>Choose the Right Model: </strong>Use client-side discovery for custom load balancing and server-side for centralized routing.</p></li><li><p><strong>Ensure High Availability: </strong>Replicate the service registry and test failover scenarios to prevent downtime. Deploy multiple instances of the service registry to avoid single points of failure.</p></li><li><p><strong>Automate Registration: </strong>Use self-registration, sidecars, or orchestration tools for dynamic environments. Ensure proper deregistration of stale services.</p></li><li><p><strong>Use Health Checks: </strong>Monitor service health and remove failing instances automatically.</p></li><li><p><strong>Follow Naming Conventions: </strong>Use clear, unique service names with versioning to avoid conflicts (e.g., <code>payment-service-v1</code>).</p></li><li><p><strong>Caching</strong>: Use caching mechanisms to reduce the load on the service registry and improve discovery performance.</p></li><li><p><strong>Scalability</strong>: Ensure that the service discovery system can scale with the growth of your services.</p></li></ol><h2>6. Conclusion</h2><p>Service discovery may not be the most glamorous aspect of distributed systems, but it is undoubtedly one of the most essential. </p><p>Think of service discovery as the address book of your microservices architecture. Without it, scaling and maintaining distributed systems would be chaotic.</p><p>It serves as the backbone that enables the seamless communication and coordination between services, allowing complex applications to function reliably and efficiently.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png",
      "enclosureMime": ""
    }
  ]
}