{"id":"2bP4pJr4wVimh6yine63HqNeafoyheTFz1gqCrQ4h7Z","title":"AlgoMaster Newsletter","displayTitle":"Dev - Algomaster","url":"https://blog.algomaster.io/feed","feedLink":"https://blog.algomaster.io/","items":[{"title":"How to Generate Unique IDs in Distributed Systems","url":"https://blog.algomaster.io/p/unique-ids-in-distributed-systems","date":1731558328,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>Any <strong>distributed system</strong> that operates at scale often relies on <strong>unique ids.</strong> </p><blockquote><p>For example, consider <strong>order tracking in e-commerce</strong>: each order placed by a customer is assigned a unique ID, allowing the system to track it through every stage&#8212;order processing, payment, shipping, and delivery.</p></blockquote><p>But how do we generate these IDs in a way that&#8217;s fast, unique, reliable, and scalable?</p><p>In this article we&#8217;ll dive into <strong>7 popular approaches</strong> to generate unique ids in distributed systems.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/6Rt6xPp\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png\" width=\"676\" height=\"380.25\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:676,&quot;bytes&quot;:348203,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F358fdc79-ae5a-461b-ad3d-c00400d68c82_3840x2160.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/6Rt6xPp\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/6Rt6xPp&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/6Rt6xPp\"><span>Get Started</span></a></p><div><hr></div><h2>1. UUID (Universally Unique Identifier)</h2><p><strong>UUIDs</strong>, also known as <strong>GUIDs</strong> (Globally Unique Identifiers) are <strong>128-bit</strong> numbers widely used for generating unique identifiers across distributed systems due to their simplicity and lack of dependency on a centralized source.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png\" width=\"632\" height=\"190\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:190,&quot;width&quot;:632,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:12265,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0173cb5e-498f-473d-9f46-d0875efdf6aa_632x190.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/9KT4SHW\">Multiplayer</a></strong></figcaption></figure></div><p>In this setup, each server can generate unique IDs independently.</p><p>UUIDs come in multiple versions:</p><ol><li><p><strong>UUID v1 (Time-Based)</strong>: Uses timestamp and machine-specific information like the MAC address.</p></li><li><p><strong>UUID v3 (Name-Based with MD5)</strong>: Generated by hashing a namespace and name using MD5.</p></li><li><p><strong>UUID v4 (Random)</strong>: Uses random values for most bits, providing a high degree of uniqueness.</p></li><li><p><strong>UUID v5 (Name-Based with SHA-1)</strong>: Similar to v3 but uses SHA-1 hashing for stronger uniqueness.</p></li></ol><p>The most commonly used version is <strong>UUID v4.</strong></p><h3>Format (UUID 4)</h3><pre><code>Example: <strong>550e8400-e29b-41d4-a716-446655440000</strong></code></pre><ul><li><p><strong>Randomness (122 bits)</strong>: Most of the UUID is composed of random hexadecimal digit <code>(0&#8211;9 or a&#8211;f)</code>.</p></li><li><p><strong>Version (4 bits)</strong>: The third block&#8217;s first character is always <code>4</code>, identifying it as a version 4 UUID.</p></li><li><p><strong>Variant (2-3 bits)</strong>: Located in the fourth block, it&#8217;s either <code>8</code>, <code>9</code>, <code>a</code>, or <code>b</code>. It represents the variant and ensures that UUID follows the RFC 4122 standard.</p></li></ul><h3>Code Example (Python)</h3><pre><code><code>import uuid\n\n# Generate a random UUID (version 4)\nuuid_v4 = uuid.uuid4()\nprint(f\"Generated UUID v4: {uuid_v4}\")</code></code></pre><h3>Pros:</h3><ul><li><p><strong>Decentralized</strong>: UUIDs can be generated independently across servers.</p></li><li><p><strong>Collision Resistance</strong>: With 128 bits, UUID v4 has a collision probability so low it&#8217;s practically negligible.</p><blockquote><p>To visualize: Even if every person on Earth generated 1 million UUIDs per second, it would take over 100 years to have a 50% chance of a single collision.</p></blockquote></li><li><p><strong>Ease of Implementation</strong>: Most programming languages provide built-in libraries for generating UUIDs.</p></li></ul><h3>Cons:</h3><ul><li><p><strong>Large Size</strong>: UUIDs consume 128 bits, which can be excessive for some storage-sensitive systems.</p></li><li><p><strong>Not Sequential</strong>: UUIDs lack order, meaning they don&#8217;t play well with indexing systems like B-Trees.</p></li></ul><blockquote><p>UUIDs are ideal when you need globally unique IDs across distributed systems without central coordination and when order isn&#8217;t important (e.g., Order IDs in E-commerce, Session IDs for User Authentication).</p></blockquote><h2>2. Database Auto-Increment</h2><p><strong>Database auto-increment</strong> is a feature in relational databases that automatically generates unique, sequential numeric IDs whenever a new record is inserted into a table.</p><p>Typically, the numbering starts from an initial value (often 1) and increments by a fixed amount (commonly 1) for each new row.</p><p><strong>Example in SQL:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png\" width=\"512\" height=\"194.0524781341108\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:260,&quot;width&quot;:686,&quot;resizeWidth&quot;:512,&quot;bytes&quot;:40483,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae40d463-7431-4d4e-b5c8-89c6c645c315_686x260.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><p>Here, the <code>user_id</code> column will start from 1 and automatically increment for each new row, generating unique values.</p><p>This approach works well for small applications with just one database node.</p><p>However, in distributed environments, depending on a single database node for ID generation can quickly become a bottleneck and a single point of failure.</p><p>To make auto-increment work in distributed systems, here are two effective strategies:</p><h3>2.1 Range-Based ID Allocation</h3><p>In this approach, each <strong>database node</strong> is assigned a unique range of IDs, allowing them to generate IDs independently and avoid conflicts or overlaps with other nodes.</p><p>For example, in a three-node setup:</p><ul><li><p>Node 1 can use IDs from 1 to 100000.</p></li><li><p>Node 2 can use IDs from 100001 to 200000.</p></li><li><p>Node 3 can use IDs from 200001 to 300000.</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png\" width=\"510\" height=\"423.9375\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c97397ca-f890-4dec-9542-7e3318b68dee_640x532.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:532,&quot;width&quot;:640,&quot;resizeWidth&quot;:510,&quot;bytes&quot;:40300,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97397ca-f890-4dec-9542-7e3318b68dee_640x532.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong>Limitations of Range-Based Allocation</strong>:</p><ol><li><p><strong>Range Exhaustion</strong>: High-traffic nodes may exhaust their assigned range quickly, requiring reallocation or range expansion.</p></li><li><p><strong>Complex Management</strong>: As nodes are added or removed, reassigning and managing ranges can become complex.</p></li><li><p><strong>Waste of ID Space</strong>: Uneven traffic across nodes may leave some ranges underutilized.</p></li></ol><h3>2.2 Step-Based Auto-Increment</h3><p>In step-based auto-increment, each node generates IDs with a predefined step size.</p><p>For example, if the step size is 3:</p><ul><li><p>Node 1 generates IDs as 1, 4, 7, 10, &#8230;.</p></li><li><p>Node 2 generates IDs as 2, 5, 8, 11, &#8230;.</p></li><li><p>Node 3 generates IDs as 3, 6, 9, 12, &#8230;.</p></li></ul><p>This approach ensures each node generates unique IDs independently, but adding or removing nodes may require reconfiguring the step size.</p><h3><strong>Pros of Database Auto-Increment</strong></h3><ol><li><p><strong>Simplicity</strong>: Straightforward to set up, as most relational databases support it natively.</p></li><li><p><strong>Sequential Order</strong>: IDs are generated in a strictly increasing order, making it easier to sort records by insertion order.</p></li><li><p><strong>Low Storage Overhead</strong>: IDs are typically small integers, making them efficient for storage and indexing.</p></li></ol><h3>Cons <strong>of Database Auto-Increment</strong>:</h3><ol><li><p><strong>Coordination Overhead</strong>: In a distributed setup, managing ranges or step increments requires careful setup and ongoing monitoring to avoid collisions.</p></li><li><p><strong>Predictable IDs</strong>: Sequential IDs can be predictable, which may pose security risks in some applications (e.g., an attacker could guess the next ID).</p></li><li><p><strong>ID Exhaustion</strong>: High insertion rates can exhaust the integer range, especially with smaller data types.</p></li></ol><blockquote><p>Database Auto-Increment is useful when you need simple, sequential IDs (e.g., relational database primary keys).</p></blockquote><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>3. Snowflake ID (Twitter's Approach)</h2><p>The <strong>Snowflake ID</strong> generation system, developed by Twitter, is a method for generating 64-bit IDs that are:</p><ul><li><p>Time-based</p></li><li><p>Ordered</p></li><li><p>Distributed-system friendly </p></li></ul><p>It was created to handle the need for high-throughput, time-ordered IDs that can scale horizontally across multiple data centers and machines.</p><p>These IDs are not only unique but also sequential within each machine, making them highly efficient for indexing and ordering operations.</p><h3>Format</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png\" width=\"1034\" height=\"95\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:95,&quot;width&quot;:1034,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:16850,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd25890a8-0b2e-4abc-8668-7e3cb1ffc0b0_1034x95.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/9KT4SHW\">Multiplayer</a></strong></figcaption></figure></div><pre><code>Example Snowflake ID (binary):\n\n0000011010011001110010110010101001010101100010101110000000000001</code></pre><p><strong>Breakdown:</strong></p><p><strong>1. Sign Bit (1 bit)</strong>: Always set to <code>0</code> to ensure the ID is positive.</p><p><strong>2. Timestamp (41 bits): </strong>The first 41 bits encode the timestamp in milliseconds since the Snowflake epoch (often set to November 4, 2010). This timestamp allows the IDs to be sorted chronologically.</p><p><strong>3. Datacenter ID (5 bits): </strong>The next 5 bits represent the data center or region ID, which allows for up to 32 (2^5) unique data centers.</p><p><strong>4. Machine ID (5 bits): </strong>The following 5 bits represent the machine (or worker) ID within the data center, allowing for 32 machines per data center.</p><p><strong>5. Sequence Number (12 bits): </strong>The last 12 bits are a sequence counter, which resets every millisecond. This counter allows each machine to generate up to 4,096 (2^12) unique IDs per millisecond.</p><h3><strong>Pros</strong></h3><ol><li><p><strong>Time-Ordered</strong>: Snowflake IDs include a timestamp, making them naturally ordered by generation time. This is beneficial for indexing and time-series data.</p></li><li><p><strong>Decentralized</strong>: Each machine can generate unique IDs independently, without requiring a central coordination server.</p></li><li><p><strong>High Throughput</strong>: With 12 bits for the sequence, each machine can generate up to 4,096 unique IDs per millisecond, making Snowflake IDs suitable for high-traffic environments.</p></li><li><p><strong>Compact and Efficient</strong>: At 64 bits, Snowflake IDs are more storage-efficient than UUIDs (128 bits).</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Clock Synchronization</strong>: Snowflake ID generation depends on synchronized clocks. If the system clock moves backward, it can lead to duplicate IDs or ID generation errors.</p></li><li><p><strong>Limited Capacity</strong>: Each machine can only generate up to 4,096 IDs per millisecond. If a higher rate is required, additional machines or other scaling solutions are needed.</p></li></ol><blockquote><p>Snowflake IDs are ideal when you need unique, time-ordered IDs in distributed systems that require high throughput and scalability (e.g., social media posts, event logs).</p></blockquote><h2>4. <strong>Redis-Based ID Generation</strong></h2><p><strong>Redis</strong>, an in-memory key-value store, can also be used for ID generation due to its <strong>atomic operations</strong> and <strong>low-latency</strong> performance.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png\" width=\"583\" height=\"261\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:261,&quot;width&quot;:583,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:21746,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F726f8d21-b37c-416e-aa6b-699b2339dcc7_583x261.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/9KT4SHW\">Multiplayer</a></strong></figcaption></figure></div><p>Here&#8217;s how Redis-based ID generation works:</p><ol><li><p><strong>Initialize a Key:</strong> Setup a Redis key to store the current ID value.</p></li><li><p><strong>Increment on Demand</strong>: Whenever a new ID is needed, an application node increments the counter using Redis&#8217;s atomic <code>INCR</code> or <code>INCRBY</code> command.</p></li><li><p><strong>Return Unique ID</strong>: The incremented counter value is guaranteed to be unique and it&#8217;s returned to the application.</p></li></ol><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png\" width=\"543\" height=\"310\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:310,&quot;width&quot;:543,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:39794,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf2158f2-7bde-42b9-bdca-f8f446598947_543x310.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>Redis guarantees atomicity, so no two calls to <code>generate_id()</code> will ever receive the same ID, even if multiple nodes are concurrently accessing the Redis server.</p><h3>Pros</h3><ol><li><p><strong>Atomicity</strong>: Redis&#8217;s <code>INCR</code> and <code>INCRBY</code> commands are atomic, ensuring each generated ID is unique and sequential without any risk of collision.</p></li><li><p><strong>High Throughput</strong>: As an in-memory database, Redis provides very low latency, making it ideal for high-speed ID generation.</p></li><li><p><strong>Simplicity</strong>: Setting up Redis for ID generation is straightforward and requires minimal configuration.</p></li><li><p><strong>Sequential IDs</strong>: Redis-generated IDs are sequential, making them suitable for ordered indexing in databases or applications where chronological order is important.</p></li></ol><h3>Cons</h3><ol><li><p><strong>Single Point of Failure</strong>: Using a single Redis instance as the ID generator can become a bottleneck and a potential single point of failure.</p></li><li><p><strong>Scalability Limitations</strong>: While Redis can handle high throughput, using it as a centralized ID generator limits horizontal scaling because every request depends on a single Redis instance.</p></li></ol><blockquote><p>Redis-based ID generation is useful when you need high-speed, centralized ID generation with sequential order, and the setup is primarily single-node.</p></blockquote><h2>5. <strong>Nano ID</strong></h2><p>NanoID is a small, URL-friendly, unique string ID generator designed for simplicity, flexibility, and performance in distributed systems.</p><p>Created as a modern alternative to UUID, Nano ID has gained popularity in frontend applications and modern web development.</p><p>Unlike UUIDs, Nano ID doesn&#8217;t follow a rigid structure, making it highly adaptable to different applications.</p><h3>Format</h3><p>By default, NanoID generates a <strong>21-character</strong> ID using a <strong>URL-safe</strong> base64 alphabet. Each character is randomly chosen from a 64-character set <code>(A-Z, a-z, 0-9, \"-\", \"_\")</code>, creating a 128-bit identifier. </p><p>However, you can customize the length and character set to meet your application&#8217;s specific requirements.</p><pre><code><strong>Example: 7QLiKDgL-WG4E8z6xyVc0</strong> </code></pre><p>Here&#8217;s how to generate custom nano ids in Python:</p><pre><code>import nanoid\n\n# Generate default ID\nid = nanoid.generate() # \"V1StGXR8_Z5jdHi6B-myT\"\n\n# Custom length\ncustom_id = nanoid.generate(size=10) # \"IRFa-VaY2b\"\n\n# Custom alphabet\ncustom_generator = nanoid.generate(\n    alphabet='1234567890',\n    size=6\n)  # \"123456\"</code></pre><h3><strong>Pros</strong></h3><ol><li><p><strong>Compact and Readable</strong>: With a default length of 21 characters, NanoID is shorter and more readable than UUIDs, which are 36 characters.</p></li><li><p><strong>URL-Friendly</strong>: NanoID uses a URL-safe character set by default, making it ideal for use in URLs without needing additional encoding.</p></li><li><p><strong>Decentralized</strong>: Each node can generate unique IDs independently with minimal risk of collision.</p></li><li><p><strong>Customizable</strong>: You can adjust the length and character set to suit specific needs.</p></li><li><p><strong>High Performance</strong>: Nano ID&#8217;s generation is fast, making it ideal for scenarios requiring rapid creation of many unique IDs.</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Non-Sequential</strong>: NanoIDs are purely random and lack sequential ordering, which can lead to fragmentation in database indexes.</p></li><li><p><strong>Collision Probability</strong>: Reducing the length of Nano ID increases the risk of collision, so longer IDs may be needed for critical applications.</p></li></ol><blockquote><p>Nano ID is ideal for generating short, customizable, URL-friendly IDs in applications that don&#8217;t require time-ordering, such as URLs, tokens, and frontend identifiers.</p></blockquote><h2>6. Hash-Based IDs</h2><p><strong>Hash-Based IDs</strong> are unique identifiers generated by applying <strong>cryptographic hash functions</strong> to specific data inputs.</p><p>They're deterministic, meaning the same input always produces the same ID, making them ideal for systems that need consistent identifiers, like <strong>deduplication</strong> and <strong>caching</strong>.</p><h3>Format</h3><p>The format of hash-based IDs depends on the hashing algorithm used, such as <strong>MD5</strong>, <strong>SHA-1</strong>, or <strong>SHA-256</strong>. </p><p>These IDs are typically encoded as hexadecimal strings and can vary in length depending on the hash function:</p><ul><li><p><strong>MD5</strong>: 128 bits (32 hexadecimal characters)</p></li><li><p><strong>SHA-1</strong>: 160 bits (40 hexadecimal characters)</p></li><li><p><strong>SHA-256</strong>: 256 bits (64 hexadecimal characters)</p></li></ul><p>The choice of hashing algorithm depends on the application's requirements for uniqueness, security, and collision resistance.</p><pre><code><strong>Example URL: https://example.com/some-page\n\nSHA-256 hash output: 66e9c37ef3c04d3df238cd7d6b6b524f06c6e6dc9892e13c46f6d59f212dad0e</strong></code></pre><h3>Code Example:</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png\" width=\"642\" height=\"262.0822784810127\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/edeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:516,&quot;width&quot;:1264,&quot;resizeWidth&quot;:642,&quot;bytes&quot;:106116,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fedeca33b-3dd5-418f-be19-c90e1c9dc762_1264x516.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h3><strong>Pros</strong></h3><ol><li><p><strong>Deterministic</strong>: The same input will always generate the same ID.</p></li><li><p><strong>Collision-Resistant</strong>: Strong hash algorithms like SHA-256 provide high collision resistance, making it extremely unlikely for two different inputs to produce the same hash.</p></li><li><p><strong>Decentralized</strong>: IDs can be generated independently across nodes in a distributed system without needing central coordination.</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Non-Sequential</strong>: Hash-based IDs are non-sequential, which can lead to fragmentation in database indexes, slowing down query performance.</p></li><li><p><strong>Length</strong>: Some hash functions, like SHA-256, produce long IDs (64 characters) that may be inefficient for certain applications.</p></li><li><p><strong>Collision Probability</strong>: Using weaker hashes (e.g., MD5) increases the risk of collisions, which can cause issues in systems that require strict uniqueness.</p></li><li><p><strong>No Metadata</strong>: Hash-based IDs are pure hashes and don&#8217;t contain metadata information like timestamps or machine identifiers.</p></li></ol><blockquote><p>Hash-Based IDs are useful when you need deterministic, unique IDs based on input data, like content or URLs, rather than random values (e.g., deduplication, URL shorteners, caching systems).</p></blockquote><h2>7. ULID (Universally Unique Lexicographically Sortable Identifier)</h2><p>A <strong>ULID</strong> is a 26-character, URL-safe string that combines:</p><ul><li><p><strong>Timestamp</strong> (first 10 characters)</p></li><li><p><strong>Randomness</strong> (last 16 characters)</p></li></ul><p>This format produces unique, readable and lexicographically sortable IDs. </p><p>Unlike UUIDs, which lack natural ordering, ULIDs embed a timestamp component and use a compact, URL-friendly base32 encoding.</p><h3>Format</h3><pre><code>01AN4Z07BY      79KA1307SR9X4MV3\n|----------|    |----------------|\n Timestamp          Randomness\n 10 chars           16 chars\n (48 bits)         (80 bits)</code></pre><ul><li><p><strong>Timestamp (48 bits)</strong>: The first 10 characters represent the timestamp in milliseconds since the Unix epoch (January 1, 1970). This allows ULIDs to be naturally sorted by creation time.</p></li><li><p><strong>Randomness (80 bits)</strong>: The remaining 16 characters are random, ensuring uniqueness even when multiple ULIDs are generated within the same millisecond.</p></li></ul><p>There are libraries available for generating ULIDs in many programming languages, including JavaScript, Python, Java, and Go. </p><h3><strong>Pros</strong></h3><ol><li><p><strong>Lexicographically Sortable</strong>: ULIDs are time-ordered and naturally sortable, making them suitable for time-series data.</p></li><li><p><strong>Compact and URL-Friendly</strong>: With 26 characters in base32 format, ULIDs are shorter than UUIDs, making them suitable for embedding in URLs.</p></li><li><p><strong>Decentralized</strong>: ULIDs can be generated independently on multiple nodes, as each ID is based on a timestamp and a random component, reducing the need for centralized coordination.</p></li><li><p><strong>Readable and Error-Resistant</strong>: The base32 encoding used in ULIDs is designed to avoid confusing characters, such as \"I\" and \"O\".</p></li></ol><h3><strong>Cons</strong></h3><ol><li><p><strong>Limited Time Precision</strong>: ULIDs use milliseconds for the timestamp, which may not be precise enough for high-frequency systems that need IDs at microsecond or nanosecond levels.</p></li><li><p><strong>Limited Popularity</strong>: Although gaining popularity, ULIDs are still less widely supported than UUIDs.</p></li><li><p><strong>No Embedded Metadata</strong>: ULIDs encode only a timestamp; they do not include other metadata, such as machine ID or data center information, like Snowflake IDs.</p></li></ol><blockquote><p>ULIDs are a great choice when you need unique, time-ordered, URL-friendly IDs that can be generated independently without central coordination (e.g., time-series data, event logs).</p></blockquote><div><hr></div><p>Thank you so much for reading.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/unique-ids-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/unique-ids-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substack-post-media.s3.amazonaws.com/public/images/b94d2d8f-1906-4f53-a7f5-f8721426ba1c_632x436.webp","enclosureMime":""},{"title":"10 Data Structures That Make Databases Fast and Scalable","url":"https://blog.algomaster.io/p/data-structures-that-make-databases-scalable","date":1732164619,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>Have you ever wondered why <strong>modern databases</strong> are so fast and efficient, even when managing <strong>terabytes of data</strong>?</p><p>The answer lies in their underlying <strong>data structures</strong> and <strong>indexing techniques</strong> that enable efficient storage, retrieval, and management of data.</p><p>In this article, we'll look at <strong>10 important data structures</strong> that make modern databases fast, reliable, and scalable.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/hQjAEpt\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png\" width=\"556\" height=\"556\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:600,&quot;width&quot;:600,&quot;resizeWidth&quot;:556,&quot;bytes&quot;:119834,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F354a2efb-63dc-4a8b-b8f7-d29172159542_600x600.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/hQjAEpt\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/hQjAEpt&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/hQjAEpt\"><span>Get Started</span></a></p><div><hr></div><h2><strong>1. Hash Indexes</strong></h2><p>A <strong>hash index</strong> is a data structure that maps keys to values using a <strong>hash function</strong>.</p><p>The hash function converts a key into an integer, which is used as an index in a <strong>hash table (buckets)</strong> to locate the corresponding value.</p><p>It is designed for <strong>fast insertion</strong> and<strong> lookup</strong>, such as: </p><ul><li><p>Insert/Find a new record with <code>id = 123</code>.</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png\" width=\"743\" height=\"262\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:262,&quot;width&quot;:743,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:32737,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2f8dffb0-d5d4-4ab9-b7c5-b1fc68aa7dc9_743x262.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>This structure provides <strong>O(1) average-time complexity</strong> for insertions, deletions, and lookups.</p><blockquote><p>Hash indexes are widely used in <strong>key-value</strong> <strong>stores</strong> (eg., DynamoDB), and <strong>caching systems</strong> (eg., Redis).</p></blockquote><h2>2. B-Trees</h2><p>A <strong>B-tree</strong> is a <strong>self-balancing tree data structure</strong> designed to store <strong>sorted data</strong> in a way that optimizes reads, writes, and queries on large datasets.</p><p>It minimizes disk I/O by storing multiple keys in a single node and automatically balances itself during insertions and deletions.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png\" width=\"788\" height=\"281\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c408716d-6795-4055-9c87-9eff17329c15_788x281.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:281,&quot;width&quot;:788,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:16821,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc408716d-6795-4055-9c87-9eff17329c15_788x281.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>Unlike binary search trees, where each node has at most two children, B-Trees allow multiple children per node. The number of children is defined by the <strong>order</strong> of the B-Tree.</p><p><strong>Internal nodes</strong> contain keys and pointers to child nodes and <strong>leaf nodes</strong> contain keys and pointers to the actual data.</p><p>Keys in each node are stored in sorted order, enabling fast binary searches.</p><blockquote><p><strong>B-Trees</strong> are widely used for indexing in relational databases (eg., MySQL).</p><p>While many NoSQL databases favor <strong>LSM Trees</strong> for write-heavy workloads, some use <strong>B-Trees</strong> for read-heavy scenarios or as part of their indexing strategy.</p></blockquote><h2><strong>3. Skip Lists</strong></h2><p>A <strong>skip list</strong> is a <strong>probabilistic data structure</strong> that extends the functionality of linked lists by adding multiple levels of \"shortcuts\" to enable fast search, insertion, and deletion operations. </p><p>It is designed to offer performance comparable to balanced binary trees or B-Trees while being simpler to implement and manage.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png\" width=\"777\" height=\"307\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:307,&quot;width&quot;:777,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:24334,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c21577-23ad-4dd8-907b-329d9821b3f7_777x307.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>A skip list consists of <strong>multiple levels</strong>, with each level being a subset of the level below.</p><p>The bottom-most layer contains all the elements in sorted order, and higher layers are sparser subsets that provide shortcuts to quickly navigate the lower layers.</p><p>Nodes are promoted to higher levels <strong>probabilistically</strong>, ensuring an even distribution without the need for rebalancing.</p><blockquote><p>Skip lists are particularly well-suited for <strong>in-memory</strong> <strong>storage</strong> and <strong>dynamic datasets</strong> where updates are frequent.</p><p><strong>Redis</strong> uses skip lists to implement it&#8217;s sorted sets (<code>ZSET</code>), enabling fast insertions, deletions, and range queries while maintaining sorted order.</p></blockquote><h2>4. Memtables</h2><p>A <strong>memtable</strong> is an <strong>in-memory data structure</strong> used in modern databases to temporarily store write operations before they are flushed to disk.</p><p>It plays a critical role in optimizing write performance and ensuring data durability, especially in databases designed for high-throughput workloads, such as <strong>Cassandra</strong>, <strong>RocksDB</strong>, and <strong>HBase</strong>.</p><p>Memtables are typically implemented as a sorted structure like a <strong>Red-Black Tree</strong> or <strong>Skip List</strong>, enabling efficient lookups and ordered writes to disk.</p><p>When data is written to the database: it is logged in the <strong>Write-Ahead Log</strong> (to persist the change) and added to the <strong>memtable</strong>.</p><p>For recent writes, the memtable is checked first. If the key is not found in the memtable, the query searches <strong>on-disk SSTables (Sorted String Table)</strong> or other storage files.</p><p>When the memtable reaches its size limit, it is flushed to disk as an immutable SSTable and a new memtable is initialized for subsequent writes.</p><h2>5. SSTables</h2><p>An <strong>SSTable (Sorted String Table)</strong> is an immutable, on-disk data structure used in modern databases like <strong>Cassandra</strong>, <strong>RocksDB</strong>, and <strong>HBase</strong> to store sorted <strong>key-value</strong> pairs.</p><p>SSTables are primarily used in <strong>Log-Structured Merge Tree (LSM Tree) </strong>databases to optimize read and write performance.</p><p>They enable efficient sequential writes, fast lookups, and range queries.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png\" width=\"787\" height=\"548\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:548,&quot;width&quot;:787,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:43140,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using </strong><a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></figcaption></figure></div><h4>Key Characteristics of SSTables:</h4><ul><li><p>Once written, an SSTable is never modified. New writes are handled by creating new SSTables.</p></li><li><p>SSTables are written as sequential blocks to disk, minimizing fragmentation and improving I/O performance.</p></li><li><p>SSTables include an in-memory index or Bloom filter to quickly determine whether a key might exist without scanning the entire table.</p></li><li><p>Older SSTables are periodically merged into larger tables, removing duplicates and reclaiming storage space.</p></li></ul><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2><strong>6. Inverted Index</strong></h2><p>An <strong>inverted index</strong> is a data structure that maps <strong>terms (words or tokens)</strong> to the <strong>documents or locations</strong> where they appear.</p><p>It is called \"inverted\" because it reverses the conventional relationship of an index: instead of mapping documents to the terms they contain, it maps terms to the documents that contain them.</p><p>This structure allows for optimal handling of <strong>full-text searches </strong>like:</p><ul><li><p>Find all document which contain the terms: &#8220;database powerful&#8220;</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png\" width=\"808\" height=\"341\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/12460beb-892a-40db-b2f3-932e183b2acd_808x341.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:341,&quot;width&quot;:808,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:50996,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><h4><strong>How Inverted Index is Created:</strong></h4><ol><li><p><strong>Tokenization</strong>: Text is split into individual tokens (words or terms).</p><ul><li><p>Example: \"Database systems are powerful\" &#8594; [\"database\", \"systems\", \"are\", \"powerful\"]</p></li></ul></li><li><p><strong>Normalization</strong>: Tokens are standardized (e.g., lowercased, stemmed, or lemmatized).</p><ul><li><p>Example: \"Databases\" &#8594; \"database\"</p></li></ul></li><li><p><strong>Index Construction and Storage</strong>: For each term, a postings list is created or updated with the document ID and metadata (e.g., term frequency, positions).</p></li></ol><blockquote><p>Inverted indexes are widely used in <strong>databases</strong>, <strong>search engines</strong>, and <strong>information retrieval systems</strong> to enable efficient keyword lookups, Boolean queries, and relevance ranking.</p></blockquote><h2>7. Bloom Filters</h2><p>A <strong>Bloom Filter</strong> is a <strong>space-efficient</strong>, <strong>probabilistic</strong> <strong>data structure</strong> that answers the question: <strong>\"Does this element exist in a set?\"</strong></p><p>It starts as a <strong>bit array</strong> of size m, initialized with all bits set to <code>0</code>. It also requires <code>k</code> independent <strong>hash functions</strong>, each of which maps an element to one of the <code>m</code> positions in the bit array.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" width=\"454\" height=\"329\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:329,&quot;width&quot;:454,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:18824,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/mL1fb0m\">Multiplayer</a></strong></figcaption></figure></div><p>To insert an element into the Bloom filter, you pass it through each of the <code>k</code> hash functions to get <code>k</code> positions in the bit array. The bits at these positions are set to 1.</p><p>To check if an element is in the set, you again pass it through the <code>k</code> hash functions to get <code>k</code> positions.</p><ul><li><p>If all the bits at these positions are set to 1, the element is <em>probably</em> in the set (though there's a chance it might be a false positive).</p></li><li><p>If any bit at these positions is 0, the element is <em>definitely</em> not in the set.</p></li></ul><p>Unlike traditional data structures, it does not store the actual elements, making it extremely memory-efficient.</p><blockquote><p>Bloom filters allow databases to quickly check if a key <em>might</em> exist in a specific data structure (e.g., an SSTable or a database partition). They avoid unnecessary disk lookups in places where the key is guaranteed to be absent.</p></blockquote><h2>8. Bitmap Indexes</h2><p>A <strong>bitmap index </strong>is a specialized indexing technique that encodes the values of a column as a series of <strong>bitmaps</strong>, where each bitmap corresponds to a unique value in the column.</p><p>Each bit in the bitmap represents whether a row in the dataset contains that value.</p><p>Consider a dataset with a column <code>Color</code>:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png\" width=\"511\" height=\"268\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:268,&quot;width&quot;:511,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:27461,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf13436a-f983-42f8-8a24-6e3816f631a6_511x268.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>In the bitmap index:</p><ul><li><p>Each row corresponds to a bit in the bitmap.</p></li><li><p>A <code>1</code> indicates that the value is present in the row, while a <code>0</code> indicates its absence.</p></li></ul><p>Bitmap indexes use <strong>bitwise operations</strong> (AND, OR, NOT, XOR) to efficiently filter data.</p><p><strong>Example Query</strong>: Find rows with <code>Color = 'Red' OR Color = 'Green'</code></p><ul><li><p>Retrieve the bitmap for <code>'Red'</code> &#8594; <code>1 0 0 1 0</code></p></li><li><p>Retrieve the bitmap for <code>'Green'</code> &#8594; <code>0 0 1 0 1</code></p></li><li><p>Perform a bitwise OR &#8594; <code>1 0 1 1 1</code></p></li></ul><blockquote><p>Bitmap indexes are widely used in <strong>data warehouses</strong>, <strong>columnar databases</strong>, and <strong>OLAP (Online Analytical Processing)</strong> systems for their ability to speed up complex queries like filtering, aggregations, and joins when dealing with large datasets containing low-cardinality columns (columns with few unique values).</p></blockquote><h2>9. R-trees</h2><p>An <strong>R-Tree </strong>(short for <strong>Rectangle Tree</strong>) is a tree-based data structure designed for indexing multidimensional spatial data, such as geographic locations, geometric shapes, or bounding boxes.</p><p>It is particularly effective for queries involving spatial relationships, such as intersections, containment, and nearest neighbors.</p><p>Each node is represented by an <strong>Minimum Bounding Rectangle (MBR)</strong> that encloses all its child nodes or objects. Leaf nodes store the actual spatial objects.</p><p>PostGIS, an extension of PostgreSQL, uses R-Trees to index spatial data for queries like: <strong>Find all locations within a rectangular region.</strong></p><pre><code>SELECT * FROM locations\nWHERE ST_Intersects(\n    geometry,\n    ST_MakeEnvelope(-74.02, 40.70, -73.93, 40.80)\n);</code></pre><h2>10. Write-Ahead Logs (WAL)</h2><p>A Write-Ahead Log is an <strong>append-only persistent log file</strong> that records all changes made to a database before they are applied to the actual database.</p><p>This ensures that even if the system crashes during a write operation, the database can recover to a consistent state by replaying or rolling back these logged changes.</p><h4>Structure of a WAL Entry:</h4><ul><li><p><strong>Transaction ID (TXID)</strong>: A unique identifier for the transaction.</p></li><li><p><strong>Operation Type</strong>: The action performed (INSERT, UPDATE, DELETE).</p></li><li><p><strong>Table Name</strong>: The table where the operation occurred.</p></li><li><p><strong>Key</strong>: The primary key or unique identifier of the record.</p></li><li><p><strong>Old Value</strong>: The previous value of the record (used in UPDATE and DELETE).</p></li><li><p><strong>New Value</strong>: The new value of the record (used in INSERT and UPDATE).</p></li><li><p><strong>Timestamp</strong>: The time the operation was logged.</p></li></ul><h4>Sample WAL Record:</h4><pre><code>TXID: 1002\nOperation: UPDATE\nTable: users\nKey: id=1\nOld Value: {\"id\": 1, \"name\": \"Alice\", \"email\": \"alice@example.com\", \"age\": 30}\nNew Value: {\"id\": 1, \"name\": \"Alice\", \"email\": \"alice.new@example.com\", \"age\": 31}\nTimestamp: 2024-11-19T10:05:00Z</code></pre><p>By logging changes before they are applied to the main database, WAL enables databases to recover from crashes and maintain ACID (Atomicity, Consistency, Isolation, Durability) properties.</p><p>Periodically, the database truncates or archives old log entries after ensuring that the changes are safely written to the main database file.</p><div><hr></div><p>Thank you so much for reading.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/data-structures-that-make-databases-scalable?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/data-structures-that-make-databases-scalable?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p><h3>References:</h3><ul><li><p><a href=\"https://www.youtube.com/watch?v=W_v05d_2RTo\">8 Key Data Structures That Power Modern Databases</a></p></li></ul>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc97cd6f1-7c9e-4853-8c48-29468605e6bd_787x548.png","enclosureMime":""},{"title":"What are Bloom Filters and Where are they Used?","url":"https://blog.algomaster.io/p/bloom-filters","date":1732428410,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>Have you ever wondered how <strong>Netflix</strong> knows which shows you've already watched? Or how <strong>Amazon</strong> avoids showing you products you've already purchased?</p><p>Using a traditional data structure like a <strong>hash table</strong> for these checks could consume significant amount of <strong>memory</strong>, especially with millions of users and items. </p><p>Instead, many systems rely on a more efficient data structure&#8212;a <strong>Bloom Filter</strong>.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png\" width=\"522\" height=\"378.27753303964755\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:329,&quot;width&quot;:454,&quot;resizeWidth&quot;:522,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>In this article, we will learn what a bloom filter is, how it works, how to implement it in code, it&#8217;s real-world applications and limitations.</p><div><hr></div><h2>&#128227; <a href=\"https://newsletter.posthog.com/\">Improve your Product Skills - PostHog Newsletter (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" width=\"1456\" height=\"291\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:291,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\" loading=\"lazy\" fetchpriority=\"high\"></picture><div></div></div></a></figure></div><p><strong><a href=\"https://newsletter.posthog.com/\">Product for Engineers</a></strong> is PostHog&#8217;s newsletter dedicated to helping engineers improve their product skills. It features curated advice on building great products, lessons (and mistakes) from building PostHog, and research into the practices of top startups.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://newsletter.posthog.com/&quot;,&quot;text&quot;:&quot;Subscriber for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://newsletter.posthog.com/\"><span>Subscriber for FREE</span></a></p><div><hr></div><h2>&#129300; What is a Bloom Filter?</h2><p>A <strong>Bloom Filter</strong> is a <strong>probabilistic data structure</strong> that allows you to quickly check whether an element might be in a set.</p><p>It&#8217;s useful in scenarios where you need <strong>fast lookups</strong> and don&#8217;t want to use a large amount of memory, but you&#8217;re okay with occasional <strong>false positives</strong>.</p><h2>&#129513; Key Components of a Bloom Filter:</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png\" width=\"544\" height=\"461.92070484581495\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:771,&quot;width&quot;:908,&quot;resizeWidth&quot;:544,&quot;bytes&quot;:57975,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1217bb68-9c1f-4d7d-a961-d1393df35c46_908x771.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ol><li><p><strong>Bit Array</strong>: The Bloom Filter consists of a bit array of a fixed size, initialized to all zeros. This array represents whether certain elements are in the set.</p></li><li><p><strong>Hash Functions</strong>: To add or check an element, a Bloom Filter uses multiple hash functions. Each hash function maps an element to an index in the bit array.</p></li></ol><h2>&#9881;&#65039; How Does a Bloom Filter Work?</h2><p>A Bloom filter works by using multiple hash functions to map each element in the set to a bit array. </p><h4><strong>1. Initialization:</strong></h4><ul><li><p>A Bloom filter starts with an empty bit array of size <code>m</code> (all bits are initially set to 0).</p></li><li><p>It also requires <code>k</code> independent hash functions, each of which maps an element to one of the <code>m</code> positions in the bit array.</p></li></ul><h4><strong>2. Inserting an Element:</strong></h4><ul><li><p>To insert an element into the Bloom filter, you pass it through each of the <code>k</code> hash functions to get <code>k</code> positions in the bit array.</p></li><li><p>The bits at these positions are set to 1.</p></li></ul><h4><strong>3. Checking for Membership:</strong></h4><ul><li><p>To check if an element is in the set, you again pass it through the <code>k</code> hash functions to get <code>k</code> positions.</p></li><li><p>If all the bits at these positions are set to 1, the element is considered to be in the set (though there's a chance it might be a false positive).</p></li><li><p>If any bit at these positions is 0, the element is definitely not in the set.</p></li></ul><h2>&#128270; Example: Using a Bloom Filter for URL Checking</h2><p>Imagine you're building a web crawler that needs to keep track of which URLs it has already visited. </p><p>Instead of storing every URL (which would require a lot of memory), you decide to use a Bloom Filter.</p><h4>Step 1: Set Up the Bloom Filter</h4><ul><li><p><strong>Initialize a Bit Array</strong>: Let&#8217;s assume our Bloom Filter uses a bit array of size <strong>10</strong>, initially all set to 0.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png\" width=\"499\" height=\"136.93488372093023\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:177,&quot;width&quot;:645,&quot;resizeWidth&quot;:499,&quot;bytes&quot;:17621,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dc4444c-c968-4a67-9129-e95ce9e945b9_645x177.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div></li><li><p><strong>Choose Hash Functions</strong>: We&#8217;ll use two hash functions in this example. These hash functions take an input (like a URL) and output an index in the bit array.</p></li></ul><h4>Step 2: Adding a URL to the Bloom Filter</h4><p>Suppose we want to add the URL <code>example.com</code> to our Bloom Filter.</p><ol><li><p><strong>Hash Function 1</strong> generates an index of <code>3</code> for <code>example.com</code>.</p></li><li><p><strong>Hash Function 2</strong> generates an index of <code>7</code> for <code>example.com</code>.</p></li></ol><p>We set the bits at indices 3 and 7 in the bit array to 1.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png\" width=\"463\" height=\"142.84806201550387\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8765730b-731c-4237-926c-930d6fb067ae_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:463,&quot;bytes&quot;:19068,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8765730b-731c-4237-926c-930d6fb067ae_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h4>Step 3: Adding Another URL</h4><p>Now, let's add another URL, <code>algomaster.io</code>.</p><ol><li><p><strong>Hash Function 1</strong> generates an index of <code>1</code> for <code>algomaster.io.</code></p></li><li><p><strong>Hash Function 2</strong> generates an index of <code>4</code> for <code>algomaster.io.</code></p></li></ol><p>We set the bits at indices 1 and 4 in the bit array to 1.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png\" width=\"465\" height=\"143.46511627906978\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:465,&quot;bytes&quot;:18840,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F655099bb-3a2d-471c-833c-46583b9d69bb_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h4>Step 4: Checking for a URL in the Bloom Filter</h4><p>Suppose we want to check if <code>example.com</code> is already in the Bloom Filter.</p><ol><li><p><strong>Hash Function 1</strong> generates index <code>3</code> for <code>example.com</code>.</p></li><li><p><strong>Hash Function 2</strong> generates index <code>7</code> for <code>example.com</code>.</p></li></ol><p>Since both bits at indices 3 and 7 are set to 1, we can say that <code>example.com</code> <strong>is probably in the set</strong> (there's a small chance of a false positive).</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png\" width=\"481\" height=\"148.4015503875969\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:481,&quot;bytes&quot;:19103,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ad6f932-6443-4b31-8ac7-a3da82a96d14_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h4>Step 5: Checking for a Non-Existent URL</h4><p>Now, let's check if <code>nonexistent.com</code> is in the Bloom Filter.</p><ol><li><p><strong>Hash Function 1</strong> generates index <code>2</code> for <code>nonexistent.com</code>.</p></li><li><p><strong>Hash Function 2</strong> generates index <code>5</code> for <code>nonexistent.com</code>.</p></li></ol><p>Since the bits at indices 2 and 5 are both 0, we can confidently say that <code>nonexistent.com</code> <strong>is not in the set</strong>.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png\" width=\"493\" height=\"152.10387596899224\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:199,&quot;width&quot;:645,&quot;resizeWidth&quot;:493,&quot;bytes&quot;:19134,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F809bb60f-c484-4fc1-998c-52c4be22b572_645x199.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div></div></div></a></figure></div><h3>&#128187; Code Implementation (Java)</h3><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png\" width=\"1456\" height=\"1342\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1342,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:284385,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04ccaf04-4289-426c-bb41-71bdf8f1132e_1556x1434.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h4>Explanation</h4><ol><li><p><strong>BitSet</strong>: Java&#8217;s <code>BitSet</code> is used for the bit array to efficiently store and manipulate bits.</p></li><li><p><strong>Hash Functions</strong>: The code uses two simple hash functions. You can add more complex ones for better distribution.</p></li><li><p><strong>add(String item)</strong>: This method takes an item, applies each hash function, and sets the corresponding bit in the bit array.</p></li><li><p><strong>mightContain(String item)</strong>: This method checks if an item might be in the set by testing if all corresponding bits are 1.</p><ul><li><p>If any bit is 0, the item is <strong>definitely not in the set</strong>.</p></li><li><p>If all bits are 1, the item is <strong>probably in the set</strong> (with a small chance of a false positive).</p></li></ul></li></ol><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>&#127758; Real-World Applications of Bloom Filters</h2><p>Bloom Filters are widely used in real-world applications where space efficiency and speed are essential, and occasional false positives are acceptable. </p><p>Here are some common scenarios where Bloom Filters are employed:</p><h3>1. <strong>Web Caching</strong></h3><p><strong>Problem</strong>: Web servers often cache frequently accessed pages or resources to improve response times. However, checking the cache for every resource could become costly and slow as the cache grows.</p><p><strong>Solution</strong>: A Bloom Filter can be used to quickly check if a URL might be in the cache. When a request arrives, the Bloom Filter is checked first. If the Bloom Filter indicates the URL is &#8220;probably in the cache,&#8221; a cache lookup is performed. </p><p>If it indicates the URL is &#8220;definitely not in the cache,&#8221; the server skips the cache lookup and fetches the resource from the primary storage, saving time and resources.</p><h3>2. Spam Filtering in Email Systems</h3><p><strong>Problem</strong>: Email systems need to filter out spam emails without constantly checking large spam databases.</p><p><strong>Solution</strong>: A Bloom Filter can store hashes of known spam email addresses. When a new email arrives, the Bloom Filter checks if the sender's address might be in the spam list.</p><p>This allows the email system to quickly determine whether an email is likely to be spam or legitimate.</p><h3>3. Databases</h3><p><strong>Problem</strong>: Databases, especially distributed ones, often need to check if a key exists before accessing or modifying data. Performing these checks for every key directly in the database can be slow.</p><p><strong>Solution</strong>: Many databases, such as <strong>Cassandra</strong>, <strong>HBase</strong>, and <strong>Redis</strong>, use Bloom Filters to avoid unnecessary disk lookups for non-existent keys. The Bloom Filter quickly checks if a key might be present. If the Bloom Filter indicates &#8220;not present,&#8221; it can skip the database lookup.</p><h3>4. Content Recommendation Systems</h3><p><strong>Problem</strong>: Recommendation systems, such as those used by streaming services, need to avoid recommending content that users have already consumed.</p><p><strong>Solution</strong>: A Bloom Filter can track the content each user has previously watched or interacted with. When generating new recommendations, the Bloom Filter quickly checks if an item might already have been consumed.</p><h3>5. Social Network Friend Recommendations</h3><p><strong>Problem</strong>: Social networks like Facebook or LinkedIn recommend friends or connections to users, but they need to avoid recommending people who are already friends.</p><p><strong>Solution</strong>: A Bloom Filter is used to store the list of each user&#8217;s existing connections. Before suggesting new friends, the Bloom Filter can be checked to ensure the user isn&#8217;t already connected with them.</p><h2>&#128721; Limitations of Bloom Filters</h2><h3>1. <strong>False Positives</strong></h3><p>Bloom Filters can produce false positives, meaning they may incorrectly indicate that an element is present in the set when it is not.</p><blockquote><p><strong>Example: </strong>Consider a scenario where a non-existent key is checked against a Bloom Filter. If all the hash functions map to bits that are already set to <code>1</code>, the filter falsely signals the presence of the key.</p></blockquote><p>Such false positives can lead to unnecessary processing or incorrect assumptions about data.</p><p><strong>For instance,</strong> in a database system, this might trigger unnecessary cache lookups or wasted attempts to fetch data that doesn&#8217;t actually exist.</p><p>The likelihood of false positives can be reduced by choosing an optimal size for the bit array and an appropriate number of hash functions, but they can never be completely eliminated.</p><h3>2. <strong>No Support for Deletions</strong></h3><p>Standard Bloom Filters do not support element deletions. Once a bit is set to 1 by adding an element, it cannot be unset because other elements may also rely on that bit.</p><p>This limitation makes Bloom Filters unsuitable for dynamic sets where elements are frequently added and removed.</p><p>Variants like the <strong>Counting Bloom Filter</strong> can allow deletions by using counters instead of bits, but this requires more memory.</p><h3>3. Limited to Set Membership Queries</h3><p>Bloom Filters are specifically designed to answer set membership queries. They do not provide information about the actual elements in the set, nor do they support complex queries or operations beyond basic membership checks.</p><p><strong>Example</strong>: If you need to know the details of an element (e.g., full information about a user ID), you would need another data structure in addition to the Bloom Filter.</p><h3><strong>4. Not Suitable for Exact Set Membership</strong></h3><p>Bloom Filters are probabilistic, meaning they cannot provide a definite &#8220;yes&#8221; answer (only a &#8220;probably yes&#8221; or &#8220;definitely no&#8221;).</p><p>For applications requiring exact membership information, Bloom Filters are not suitable. Other data structures like hash tables or balanced trees should be used instead.</p><h3>5. Vulnerable to Hash Collisions</h3><p>Hash collisions are more likely as the number of elements in the Bloom Filter grows. Multiple elements can end up setting or relying on the same bits, increasing false positives.</p><p>As hash collisions accumulate, the filter&#8217;s effectiveness decreases. With a high load factor, the filter may perform poorly and become unreliable.</p><p>The use of additional hash functions can help reduce collisions, but increasing the number of hash functions also increases the complexity and the memory requirements.</p><h2>&#9989; Conclusion</h2><p>To summarize, bloom filters are a powerful tool for space-efficient set membership testing, with a wide range of applications. While they may not be suitable for all applications due to the possibility of false positives, they shine in scenarios where space is at a premium and a small error rate is acceptable.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/bloom-filters?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/bloom-filters?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F39579c9e-bd42-40d3-a9e5-6031881768da_454x329.png","enclosureMime":""},{"title":"Concurrency vs Parallelism","url":"https://blog.algomaster.io/p/concurrency-vs-parallelism","date":1733028341,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p><strong>Concurrency</strong> and <strong>parallelism</strong> are two of the most misunderstood concepts in <strong>system design</strong>.</p><p>While they might sound similar, they refer to fundamentally different approaches to handling tasks.</p><p>Simply put, one is about <strong>managing</strong> multiple tasks simultaneously, while the other is about <strong>executing</strong> multiple tasks at the same time.</p><p>In this article, we&#8217;ll break down the differences between these two concepts, explore how they work, and illustrate their real-world applications with examples and code.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/NpM99yj\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png\" width=\"536\" height=\"536\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1200,&quot;width&quot;:1200,&quot;resizeWidth&quot;:536,&quot;bytes&quot;:307604,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd794e242-90be-4fd3-ba70-8132d59bcfcc_1200x1200.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/NpM99yj\">Multiplayer</a></strong> auto-documents your system, from the high-level logical architecture down to the individual components, APIs, dependencies, and environments. Perfect for teams who want to speed up their workflows and consolidate their technical assets.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/NpM99yj&quot;,&quot;text&quot;:&quot;Get Started&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/NpM99yj\"><span>Get Started</span></a></p><div><hr></div><h2>1. What is concurrency?</h2><blockquote><p><em>Concurrency </em>means an application is making progress on more than one task at the same time.</p></blockquote><p>In a computer, the tasks are executed using <strong>Central Processing Unit (CPU).</strong></p><p>While a single <strong>CPU</strong> can work on only one task at a time, it achieves concurrency by rapidly switching between tasks. </p><p>For example, consider playing music while writing code. The CPU alternates between these tasks so quickly that, to the user, it feels like both are happening at the same time.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png\" width=\"701\" height=\"289\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:289,&quot;width&quot;:701,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:20891,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62f1bd22-5554-4ff3-89eb-a06edb787d98_701x289.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><p>This seamless switching&#8212;enabled by modern CPU designs&#8212;creates the <strong>illusion of multitasking </strong>and<strong> </strong>gives the appearance of tasks running in parallel.</p><p>However, it&#8217;s important to note <strong>this is not parallel</strong>. <strong>This is concurrent</strong>.</p><p>Concurrency is primarily achieved using <strong>threads</strong>, which are the smallest units of execution within a process. The CPU switches between threads to handle multiple tasks concurrently, ensuring the system remains responsive.</p><p>The primary objective of concurrency is to <strong>maximize CPU utilization</strong> by minimizing idle time.</p><p><strong>For example:</strong></p><ul><li><p>When one thread or process is waiting for I/O operations, database transactions, or external program launches, the CPU can allocate resources to another thread.</p></li></ul><p>This ensures the CPU remains productive, even when individual tasks are stalled.</p><h3><strong>How Does Concurrency Works?</strong></h3><p>Concurrency in a CPU is achieved through <strong>context switching</strong>. </p><p>Here&#8217;s how it works:</p><ol><li><p><strong>Context Saving</strong>: When the CPU switches from one task to another, it saves the current task's state (e.g., program counter, registers) in memory.</p></li><li><p><strong>Context Loading</strong>: The CPU then loads the context of the next task and continues executing it.</p></li><li><p><strong>Rapid Switching</strong>: The CPU repeats this process, switching between tasks so quickly that it seems like they are running simultaneously.</p></li></ol><h4>The Cost of Context Switching</h4><p>While context switching enables concurrency, it also introduces <strong>overhead</strong>:</p><ul><li><p>Every switch requires saving and restoring task states, which consumes both time and resources.</p></li><li><p>Excessive context switching can degrade performance by increasing CPU overhead.</p></li></ul><h3>Real-World Examples of Concurrency</h3><h4>1. <strong>Web Browsers</strong></h4><p>Modern web browsers perform multiple tasks concurrently:</p><ul><li><p>Rendering web pages (HTML/CSS).</p></li><li><p>Fetching external resources like images and scripts.</p></li><li><p>Responding to user actions such as clicks and scrolling.</p></li></ul><p>Each of these tasks is managed by separate threads, ensuring the browser remains responsive while loading and displaying content.</p><h4><strong>2. Web Servers</strong></h4><p>Web servers like Apache or Nginx handle multiple client requests concurrently:</p><ul><li><p>Each request is processed independently using threads or asynchronous I/O.</p></li><li><p>For example, a server can handle multiple users loading different pages simultaneously without blocking.</p></li></ul><h4><strong>3. Chat Applications</strong></h4><p>Chat applications perform several operations concurrently:</p><ul><li><p>Processing incoming messages.</p></li><li><p>Updating the user interface with new messages.</p></li><li><p>Sending outgoing messages.</p></li></ul><p>This ensures smooth real-time communication without delays or freezes.</p><h4><strong>4. Video Games</strong></h4><p>Video games rely heavily on concurrency to deliver an immersive experience:</p><ul><li><p>Rendering graphics.</p></li><li><p>Processing user input (e.g., character movement).</p></li><li><p>Simulating physics.</p></li><li><p>Playing background audio.</p></li></ul><p>For example, while a player moves a character, the game simultaneously updates the environment and plays music, ensuring smooth gameplay.</p><h3>Code Example</h3><p>Most popular programming languages come with inbuilt support for creating and managing threads.</p><p>Here's an example of a concurrent program in Java:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png\" width=\"616\" height=\"707.8508914100486\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1418,&quot;width&quot;:1234,&quot;resizeWidth&quot;:616,&quot;bytes&quot;:240878,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff1b9a362-c13a-49d0-b35b-32e51b4ab514_1234x1418.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h4>Output (Interleaved Execution):</h4><pre><code>Task A - Step 1\nTask B - Step 1\nTask C - Step 1\nTask A - Step 2\nTask B - Step 2\nTask C - Step 2\n...\n</code></pre><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week!</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2>2. What is parallelism?</h2><blockquote><p><em>Parallelism</em> means multiple tasks are executed simultaneously.</p></blockquote><p>To achieve parallelism, an application divides its tasks into smaller, independent subtasks. These subtasks are distributed across multiple CPUs, CPU cores, GPU cores, or similar processing units, allowing them to be processed in parallel.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png\" width=\"595\" height=\"276\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:276,&quot;width&quot;:595,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:20158,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F665560cd-8e55-441b-9b5b-8071ce9e29e2_595x276.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><p>To achieve true parallelism, your application must:</p><ol><li><p>Utilize more than one thread.</p></li><li><p>Ensure each thread is assigned to a separate CPU core or processing unit.</p></li></ol><h3><strong>How does Parallelism Works?</strong></h3><p>Modern CPUs consist of multiple cores. Each core can independently execute a task. Parallelism divides a problem into smaller parts and assigns each part to a separate core for simultaneous processing.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png\" width=\"1456\" height=\"541\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:541,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:88812,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69ea729c-73f8-41d4-8391-52f5d397fcfd_1794x666.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><ul><li><p><strong>Task Division</strong>: The problem is broken into smaller independent sub-tasks.</p></li><li><p><strong>Task Assignment</strong>: Sub-tasks are distributed across multiple CPU cores.</p></li><li><p><strong>Execution</strong>: Each core processes its assigned task simultaneously.</p></li><li><p><strong>Result Aggregation</strong>: Results from all cores are combined to form the final output.</p></li></ul><h3>Real-World Examples of Parallelism</h3><h4><strong>1. Machine Learning Training</strong></h4><ul><li><p>Training deep learning models involves dividing datasets into smaller batches.</p></li><li><p>Each batch is processed simultaneously across multiple GPUs or CPU cores, significantly speeding up the training process.</p></li></ul><h4><strong>2. Video Rendering</strong></h4><ul><li><p>Video frames are rendered independently, making it possible to process multiple frames simultaneously.</p></li><li><p>For example, rendering a 3D animation becomes much faster when using multiple cores to handle different frames in parallel.</p></li></ul><h4><strong>3. Web Crawlers</strong></h4><ul><li><p>Web crawlers like Googlebot break a list of URLs into smaller chunks and process them in parallel.</p></li><li><p>This allows the crawler to fetch data from multiple websites simultaneously, reducing the time to gather information.</p></li></ul><h4><strong>4. Data Processing</strong></h4><ul><li><p>Big data frameworks like Apache Spark leverage parallelism to handle massive datasets.</p></li><li><p>Tasks such as analyzing logs from millions of users are distributed across a cluster, enabling simultaneous processing and faster insights.</p></li></ul><h4><strong>5. Scientific Simulations</strong></h4><ul><li><p>Simulations like weather modeling or molecular interactions require heavy computations.</p></li><li><p>These computations are divided among multiple cores, allowing simultaneous execution and faster results.</p></li></ul><h3>Code Example</h3><p>Here's a simple example of parallelism in Java using the <code>ForkJoinPool</code> framework to compute the sum of an array in parallel:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png\" width=\"1244\" height=\"1396\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1396,&quot;width&quot;:1244,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:284116,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcd5217bd-8503-47c9-b570-74a3feb93a34_1244x1396.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ol><li><p><strong>Task Splitting</strong>: The array is divided into smaller segments until the segment size is below the <code>THRESHOLD</code>.</p></li><li><p><strong>Parallel Execution</strong>: Subtasks are executed in parallel using separate threads from the <code>ForkJoinPool</code>.</p></li><li><p><strong>Result Combination</strong>: Results from all subtasks are combined to compute the final sum.</p></li></ol><h2>4. Concurrency and Parallelism Combinations</h2><h4><strong>4.1 Concurrent, Not Parallel</strong></h4><p>An application can be concurrent without being parallel. In this case:</p><ul><li><p>The application makes progress on multiple tasks at the same time <strong>seemingly</strong> (concurrently).</p></li><li><p>However, it achieves this by <strong>switching</strong> between tasks rapidly, rather than running them simultaneously.</p></li><li><p><strong>Example</strong>: A single-core CPU alternating between tasks, giving the illusion of multitasking.</p></li></ul><h4><strong>4.2 Parallel, Not Concurrent</strong></h4><p>An application can be parallel without being concurrent. Here:</p><ul><li><p>A single task is divided into subtasks, and these subtasks are executed simultaneously on separate cores.</p></li><li><p>There is no overlap between tasks; one task (and its subtasks) completes before the next task starts.</p></li><li><p><strong>Example</strong>: Video rendering, where a single video is divided into frames, and each frame is processed in parallel.</p></li></ul><h4><strong>4.3 Neither Concurrent Nor Parallel</strong></h4><p>Some applications are neither concurrent nor parallel. This means:</p><ul><li><p>Tasks are executed sequentially, one at a time, without any overlap or parallel execution.</p></li><li><p><strong>Example</strong>: A single-core CPU where only one task is processed, and it completes fully before the next task begins.</p></li></ul><h4><strong>4.4 Concurrent and Parallel</strong></h4><p>An application can be both <strong>concurrent and parallel</strong>, combining the strengths of both execution models.</p><p>In this approach:</p><ol><li><p>Multiple tasks make progress at the same time, and each task is also divided into subtasks that are executed in parallel.</p></li><li><p><strong>Example</strong>: A Multi-core CPU where some subtasks run concurrently on the same core, while others run in parallel on separate cores.</p></li></ol><p></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png\" width=\"584\" height=\"392.9773399014778\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:683,&quot;width&quot;:1015,&quot;resizeWidth&quot;:584,&quot;bytes&quot;:68152,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/HCUjQvL\">Multiplayer</a></strong></figcaption></figure></div><p>In the above example, a single task is broken into 4 <strong>subtasks</strong>, which are distributed across 2 CPU cores for <strong>parallel execution</strong>. These subtasks are executed by multiple threads. Some threads run on the same CPU core (concurrent execution), while others run on separate CPU cores (parallel execution).</p><p>If each subtask is executed by its own thread on a <strong>dedicated CPU</strong> (e.g., 4 threads on 4 CPUs), the task execution becomes fully <strong>parallel</strong>, with no concurrency involved.</p><p>It&#8217;s often challenging to break a task into exactly as many subtasks as there are CPUs. Instead, tasks are typically divided into a number of subtasks that align naturally with the problem's structure and number of CPU cores available.</p><h2>Summary</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png\" width=\"1456\" height=\"1079\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1079,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:412640,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F59e9520a-fa89-40e7-8b0b-c2a63926e314_2720x2016.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/concurrency-vs-parallelism?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/concurrency-vs-parallelism?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa90047d9-3639-4de2-a8b1-6d8c90b85ad6_1015x683.png","enclosureMime":""},{"title":"System Design: What is Service Discovery?","url":"https://blog.algomaster.io/p/service-discovery-in-distributed-systems","date":1733407022,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>Back when applications ran on a <strong>single server</strong>, life was simple. </p><p>Today&#8217;s modern applications are far more complex, consisting of <strong>dozens or even hundreds of services</strong>, each with multiple instances that scale up and down dynamically.</p><p>This makes it harder for services to efficiently <strong>find and communicate</strong> with each other across networks.</p><p>That&#8217;s where <strong>Service Discovery</strong> comes into play.</p><p>In this article, we&#8217;ll dive into what service discovery is, why it&#8217;s important, how it works, the different types (client and server side discovery), and best practices for implementing it effectively.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/yx8gx14\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:217429,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/yx8gx14\">Multiplayer's</a></strong> System Dashboard auto-discovers, tracks, and documents your entire system architecture&#8212;from its components to APIs, dependencies, and environments. Gain real-time, comprehensive visibility into your system, all at a glance.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/yx8gx14&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary button-wrapper\" href=\"https://dub.sh/yx8gx14\"><span>Get Started for FREE</span></a></p><div><hr></div><h2><strong>1. What is Service Discovery?</strong></h2><p><strong>Service discovery</strong> is a mechanism that allows services in a distributed system to <strong>find and communicate</strong> with each other dynamically. </p><p>It hides the complex details of where services are located, so they can interact without knowing each other's exact network spots.</p><p>Service discovery registers and maintains a record of all your services in a <strong>service registry</strong>. This service registry acts as a single source of truth that allows your services to query and communicate with each other.</p><p><strong>Example service registry record of a service:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" width=\"594\" height=\"537.4712990936556\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/58cc013a-3a06-474e-a695-82fef7d469be_662x599.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:599,&quot;width&quot;:662,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:54339,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>A service registry typically stores:</p><ul><li><p><strong>Basic Details:</strong> Service name, IP, port, and status.</p></li><li><p><strong>Metadata:</strong> Version, environment, region, tags, etc.</p></li><li><p><strong>Health Information:</strong> Health status, last health check.</p></li><li><p><strong>Load Balancing Info:</strong> Weights, priorities.</p></li><li><p><strong>Secure Communication:</strong> Protocols, certificates.</p></li></ul><p>This abstraction is important in environments where services are constantly being added, removed, or scaled.</p><h2><strong>2. Why is Service Discovery Important?</strong></h2><p>Think about a massive system like <strong>Netflix</strong>, with hundreds of microservices working together. Hardcoding the locations of these services isn&#8217;t scalable. If a service moves to a new server or scales dynamically, it could break the entire system.</p><p><strong>Service discovery</strong> solves this by dynamically and reliably enabling services to locate and communicate with one another.</p><p>Here are its key benefits:</p><ul><li><p><strong>Reduced Manual Configuration:</strong> Services can automatically discover and connect to each other, eliminating the need for manual configuration and hardcoding of network locations.</p></li><li><p><strong>Improved Scalability:</strong> As new service instances are added or removed, service discovery ensures that other services can seamlessly adapt to the changing environment.</p></li><li><p><strong>Fault Tolerance:</strong> Service discovery often include health checks, enabling systems to automatically reroute traffic away from failing service instances.</p></li><li><p><strong>Simplified Management:</strong> Having a central registry of services makes it easier to monitor, manage, and troubleshoot the entire system.</p></li></ul><h2>3. Service Registration Options</h2><p>Service registration is the process where a service announces its availability to a <strong>service registry</strong>, making it discoverable by other services.</p><p>The method of registration can vary depending on the architecture, tools, and deployment environment.</p><p>Here are the most common <strong>service registration options</strong>:</p><h4>3.1. <strong>Manual Registration</strong></h4><p>In manual registration, service details are added to the registry manually by a developer or operator. This approach is simple but not suitable for dynamic systems where services scale or move frequently.</p><h4>3.2. <strong>Self-Registration</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" width=\"565\" height=\"278\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:278,&quot;width&quot;:565,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:22928,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In self-registration, the service is responsible for registering itself with the service registry when it starts. The service includes logic to interact with the registry, such as sending API requests to register its details.</p><p><strong>How it works:</strong></p><ol><li><p>When a service or an instance starts, it retrieves its own network information (e.g., IP address, port).</p></li><li><p>It sends a registration request to the service registry (e.g., via HTTP or gRPC).</p></li><li><p>To ensure the registry has up-to-date information, the service may periodically send heartbeat signals to confirm it is active and healthy.</p></li></ol><h4>3.3. <strong>Third-Party Registration (Sidecar Pattern)</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" width=\"603\" height=\"289.9571209800919\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:314,&quot;width&quot;:653,&quot;resizeWidth&quot;:603,&quot;bytes&quot;:26561,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In third-party registration, an external agent or \"sidecar\" process handles service registration. The service itself does not directly interact with the registry. Instead, the sidecar detects the service and registers it on its behalf.</p><p><strong>How it works:</strong></p><ol><li><p>The sidecar runs alongside the service (e.g., in the same container or on the same host).</p></li><li><p>The sidecar detects when the service starts and gathers its network details.</p></li><li><p>It sends the registration request to the service registry.</p></li></ol><h4>3.4. <strong>Automatic Registration by Orchestrators</strong></h4><p>In modern orchestrated environments like <strong>Kubernetes</strong>, service registration happens automatically. The orchestration platform manages the lifecycle of services and updates the service registry as services start, stop, or scale.</p><p><strong>How it works:</strong></p><ol><li><p>The orchestrator (e.g., Kubernetes) detects when a service or container is deployed.</p></li><li><p>It assigns the service an IP address and port.</p></li><li><p>It registers the service automatically with its built-in service discovery mechanism (e.g., Kubernetes DNS).</p></li></ol><h4>3.5. <strong>Configuration Management Systems</strong></h4><p>Some systems use configuration management tools (e.g., Chef, Puppet, Ansible) to register services. These tools manage the service lifecycle and update the service registry whenever services are added or removed.</p><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2><strong>4. Types of Service Discovery</strong></h2><p>There are two primary types of service discovery: client-side discovery and server-side discovery.</p><h3><strong>4.1. Client-Side Discovery</strong></h3><p>In this model, the responsibility for discovering and connecting to a service lies entirely with the client.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" width=\"647\" height=\"446.6266280752533\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:691,&quot;resizeWidth&quot;:647,&quot;bytes&quot;:40525,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services (e.g., <code>UserService</code>, <code>PaymentService</code>) register themselves with a centralized <strong>service registry</strong>.</p><ol><li><p>They provide their network details (IP address and port) along with metadata like service health or version.</p></li></ol></li><li><p><strong>Client Queries the Registry: </strong>The client (a microservice or API gateway) sends a request to the <strong>service registry</strong> to find the instances of a target service (e.g., <code>PaymentService</code>).</p><ol><li><p>The registry responds with a list of available instances, including their IP addresses and ports.</p></li></ol></li><li><p><strong>Client Routes the Request: </strong>Based on the information retrieved, the client selects one of the service instances (often using a load balancing algorithm) and connects directly to it.</p></li></ol><p>The client maintains control over how requests are routed, such as distributing traffic evenly across instances or prioritizing the closest instance.</p><h4>Example Workflow</h4><p>Let&#8217;s consider a real-world example of a food delivery app:</p><ul><li><p>A <strong>Payment Service</strong> has three instances running on different servers.</p></li><li><p>When the <strong>Order Service</strong> needs to process a payment, it queries the <strong>service registry</strong> for the location of the <code>Payment Service</code>.</p></li><li><p>The service registry responds with a list of available instances (e.g., <code>IP1:Port1</code>, <code>IP2:Port2</code>, <code>IP3:Port3</code>).</p></li><li><p>The <strong>Order Service</strong> chooses an instance (e.g., <code>IP1:Port1</code>) and sends the payment request directly to it.</p></li></ul><h4><strong>Advantages</strong>:</h4><ul><li><p>Simple to implement and understand.</p></li><li><p>Reduces the load on a central load balancer.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Consumers need to implement discovery logic.</p></li><li><p>Changes in the registry protocol require changes in clients.</p></li></ul><blockquote><p><strong>Example:</strong> Netflix&#8217;s open-source library, <strong>Eureka</strong>, is a popular tool for client-side service discovery.</p></blockquote><h3><strong>4.2. Server-Side Discovery</strong></h3><p>In this model, the client delegates the responsibility of discovering and routing requests to a specific service instance to a <strong>centralized server or load balancer</strong>.</p><p>Unlike client-side discovery, the client does not need to query the service registry directly or perform any load balancing itself. </p><p>Instead, the client simply sends a request to a central server (load balancer or api gateway), which handles the rest.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" width=\"600\" height=\"397.6284584980237\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:503,&quot;width&quot;:759,&quot;resizeWidth&quot;:600,&quot;bytes&quot;:44548,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services register themselves with a centralized <strong>service registry</strong>, similar to client-side discovery.</p><ul><li><p>The service registry keeps track of all service instances, their IP addresses, ports, and metadata.</p></li></ul></li><li><p><strong>Client Sends Request: </strong>The client sends a request to a <strong>load balancer</strong> or <strong>API gateway</strong>, specifying the service it wants to communicate with (e.g., <code>payment-service</code>).</p><ul><li><p>The client does not query the service registry or know the specific location of the service instances.</p></li></ul></li><li><p><strong>Server Queries the Service Registry: </strong>The load balancer or gateway queries the service registry to find available instances of the requested service.</p></li><li><p><strong>Routing: </strong>The load balancer selects a suitable service instance (based on factors like load, proximity, or health) and routes the client&#8217;s request to that instance.</p></li><li><p><strong>Response: </strong>The service instance processes the request and sends the response back to the client via the load balancer or gateway.</p></li></ol><h4>Example Workflow</h4><p>Let&#8217;s take an example of an e-commerce platform with microservices for \"Order Management\" and \"Payment Processing.\"</p><ol><li><p><strong>Registration: </strong>The <code>PaymentService</code> registers two instances with the service registry:</p><ul><li><p>Instance 1: <code>IP1:8080</code></p></li><li><p>Instance 2: <code>IP2:8081</code></p></li></ul></li><li><p><strong>Client Request: </strong>The <code>OrderService</code> sends a request to the <strong>load balancer</strong> or API gateway, specifying the <code>PaymentService</code>.</p></li><li><p><strong>Discovery and Routing: </strong>The load balancer queries the service registry and retrieves the list of available <code>PaymentService</code> instances.</p><ul><li><p>It selects one instance (e.g., <code>IP1:8080</code>) and routes the request to it.</p></li></ul></li><li><p><strong>Processing and Response: </strong>The selected instance of <code>PaymentService</code> processes the request and sends the response back to the <code>OrderService</code> via the load balancer.</p></li></ol><h4><strong>Advantages</strong>:</h4><ul><li><p>Centralizes discovery logic, reducing the complexity for consumers.</p></li><li><p>Easier to manage and update discovery protocols.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Introduces an additional network hop.</p></li><li><p>The load balancer can become a single point of failure.</p></li></ul><blockquote><p><strong>Example</strong>: AWS Elastic Load Balancer (ELB) integrates with the AWS service registry for server-side discovery.</p></blockquote><h2><strong>5. Best Practices for Implementing Service Discovery</strong></h2><ol><li><p><strong>Choose the Right Model: </strong>Use client-side discovery for custom load balancing and server-side for centralized routing.</p></li><li><p><strong>Ensure High Availability: </strong>Replicate the service registry and test failover scenarios to prevent downtime. Deploy multiple instances of the service registry to avoid single points of failure.</p></li><li><p><strong>Automate Registration: </strong>Use self-registration, sidecars, or orchestration tools for dynamic environments. Ensure proper deregistration of stale services.</p></li><li><p><strong>Use Health Checks: </strong>Monitor service health and remove failing instances automatically.</p></li><li><p><strong>Follow Naming Conventions: </strong>Use clear, unique service names with versioning to avoid conflicts (e.g., <code>payment-service-v1</code>).</p></li><li><p><strong>Caching</strong>: Use caching mechanisms to reduce the load on the service registry and improve discovery performance.</p></li><li><p><strong>Scalability</strong>: Ensure that the service discovery system can scale with the growth of your services.</p></li></ol><h2>6. Conclusion</h2><p>Service discovery may not be the most glamorous aspect of distributed systems, but it is undoubtedly one of the most essential. </p><p>Think of service discovery as the address book of your microservices architecture. Without it, scaling and maintaining distributed systems would be chaotic.</p><p>It serves as the backbone that enables the seamless communication and coordination between services, allowing complex applications to function reliably and efficiently.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png","enclosureMime":""},{"title":"What is an API Gateway?","url":"https://blog.algomaster.io/p/what-is-an-api-gateway","date":1733632245,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p><strong>APIs</strong>, or <strong>Application Programming Interfaces</strong>, are a set of rules and protocols that allows two software applications or services to communicate with each other.</p><p>As applications grow in size, the number of APIs increases too. Without the right tools and infrastructure, managing these APIs can quickly become a challenge.</p><p>This is where <strong>API Gateway</strong> comes into play.</p><blockquote><p>An API Gateway acts as a <strong>central server</strong> that sits between clients (e.g., browsers, mobile apps) and backend services.</p></blockquote><p>Instead of clients interacting with multiple microservices directly, they send their requests to the API Gateway. The gateway processes these requests, enforces security, and forwards them to the appropriate microservices.</p><p>In this article, we will explore why do we need an API gateway, the key features it provides and how it works step by step.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.link/algo-dec7\">Improve your Product Skills - PostHog Newsletter (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" width=\"1456\" height=\"291\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:291,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\" loading=\"lazy\" fetchpriority=\"high\"></picture><div></div></div></a></figure></div><p><strong><a href=\"https://dub.link/algo-dec7\">Product for Engineers</a></strong> is PostHog&#8217;s newsletter dedicated to helping engineers improve their product skills. It features curated advice on building great products, lessons (and mistakes) from building PostHog, and research into the practices of top startups.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.link/algo-dec7&quot;,&quot;text&quot;:&quot;Subscribe for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.link/algo-dec7\"><span>Subscribe for FREE</span></a></p><div><hr></div><h2>1. Why Do We Need an API Gateway?</h2><p>Modern applications, especially those built using microservices architecture, have multiple backend services managing different functionalities.</p><p>For example, in an e-commerce service:</p><ul><li><p>One service handles <strong>user accounts</strong>.</p></li><li><p>Another handles <strong>payments</strong>.</p></li><li><p>Another manages <strong>product inventory</strong>.</p></li></ul><h4><strong>Without an API Gateway:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png\" width=\"493\" height=\"339.05555555555554\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:718,&quot;width&quot;:1044,&quot;resizeWidth&quot;:493,&quot;bytes&quot;:64372,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ul><li><p>Clients would need to know the location and details of all backend services.</p></li><li><p>Developers would need to manage authentication, rate limiting, and security for each service individually.</p></li></ul><h4><strong>With an API Gateway:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png\" width=\"680\" height=\"289.56043956043953\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:620,&quot;width&quot;:1456,&quot;resizeWidth&quot;:680,&quot;bytes&quot;:83000,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ul><li><p>Clients send all requests to one place &#8211; the API Gateway.</p></li><li><p>The API Gateway takes care of routing, authentication, security, and other operational tasks, simplifying both client interactions and backend management.</p></li></ul><h2>2. Core Features of an API Gateway</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png\" width=\"594\" height=\"452.0274725274725\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1108,&quot;width&quot;:1456,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:141750,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h4>1. <strong>Authentication and Authorization</strong></h4><p>API Gateway secures the backend systems by ensuring only authorized users and clients can access backend services.</p><p>It handles tasks like:</p><ul><li><p><strong>Authentication:</strong> Verifying the identity of the client using tokens (e.g., OAuth, JWT), API keys, or certificates.</p></li><li><p><strong>Authorization:</strong> Checking the client&#8217;s permissions to access specific services or resources.</p></li></ul><p>By centralizing these tasks, the API gateway eliminates the need for individual services to handle authentication, reducing redundancy and ensuring consistent access control across the system.</p><h4>2. <strong>Rate Limiting</strong></h4><p>To prevent abuse and ensure fair usage of resources, most API Gateways implement <strong>rate limiting</strong>.</p><p>This feature:</p><ul><li><p>Controls the frequency of requests a client can make within a given timeframe.</p></li><li><p>Protects backend services from being overwhelmed by excessive traffic or potential denial-of-service (DoS) attacks.</p></li></ul><blockquote><p>For example, a public API might allow a maximum of 100 requests per minute per user. If a client exceeds this limit, the API Gateway will block additional requests until the rate resets.</p></blockquote><h4>3. <strong>Load Balancing</strong></h4><p>High-traffic applications rely on <strong>load balancing</strong> to distribute incoming requests evenly across multiple instances of a service. </p><p>The API Gateway can:</p><ul><li><p>Redirect requests to healthy service instances while avoiding ones that are down or overloaded.</p></li><li><p>Use algorithms like round-robin, least connections, or weighted distribution to manage traffic intelligently.</p></li></ul><h4>4. <strong>Caching</strong></h4><p>To improve response times and reduce the strain on backend services, most API Gateways provide <strong>caching</strong>. </p><p>They temporarily store frequently requested data, such as:</p><ul><li><p>Responses to commonly accessed endpoints (e.g., product catalogs or weather data).</p></li><li><p>Static resources like images or metadata.</p></li></ul><blockquote><p>Caching helps in reducing latency and enhancing user experience while lowering the operational cost of backend services.</p></blockquote><h4>5. <strong>Request Transformation</strong></h4><p>In systems with diverse clients and backend services, <strong>request transformation</strong> is essential for compatibility.</p><p>An API Gateway can:</p><ul><li><p>Modify the structure or format of incoming requests to match the backend service requirements.</p></li><li><p>Transform responses before sending them back to the client, ensuring they meet the client&#8217;s expectations.</p></li></ul><blockquote><p>For instance, it might convert XML responses from a legacy service into JSON for modern frontend applications.</p></blockquote><h4>6. <strong>Service Discovery</strong></h4><p>Modern systems often involve microservices that scale dynamically. </p><p>The <strong>service discovery</strong> feature of an API Gateway dynamically identifies the appropriate backend service instance to handle each request.</p><p>This ensures seamless request routing even in environments where services frequently scale up or down.</p><h4>7. <strong>Circuit Breaking</strong></h4><p>Circuit breaking is a mechanism that temporarily stops sending requests to a backend service when it detects persistent failures, such as:</p><ul><li><p>Slow responses or timeouts.</p></li><li><p>Server errors (e.g., HTTP 500 status codes).</p></li><li><p>High latency or unavailability of a service.</p></li></ul><p>The API Gateway continuously monitors the health and performance of backend services and uses circuit breaking to block requests to a failing service.</p><h4>8. <strong>Logging and Monitoring </strong></h4><p>API Gateways provide robust <strong>monitoring and logging</strong> capabilities to track and analyze system behavior.</p><p>These capabilities include:</p><ul><li><p>Logging detailed information about each request, such as source, destination, and response time.</p></li><li><p>Collecting metrics like request rates, error rates, and latency.</p></li></ul><p>This data helps system administrators detect anomalies, troubleshoot issues, and optimize the system&#8217;s performance. Many API Gateways also integrate with monitoring tools like Prometheus, Grafana, or AWS CloudWatch.</p><h2><strong>3. How Does an API Gateway Work?</strong></h2><p>Imagine you're using a food delivery app to order dinner. When you tap \"Place Order\" your phone makes an API request. But instead of talking directly to various backend services, it communicates with an API Gateway first.</p><h4><strong>Step 1: Request Reception</strong></h4><p>When you tap \"Place Order,\" the app sends a request to the <strong>API Gateway</strong>, asking it to process your order. </p><p>This request includes things like:</p><ul><li><p>Your user ID</p></li><li><p>Selected restaurant and menu items</p></li><li><p>Delivery address</p></li><li><p>Payment method</p></li><li><p>Authentication tokens</p></li></ul><p>The API Gateway receives the request as the single entry point to the backend system.</p><h4><strong>Step 2: Request Validation</strong></h4><p>Before forwarding the request, the API Gateway validates it to ensure:</p><ul><li><p>The required parameters or headers are present.</p></li><li><p>The data is in the correct format (e.g., JSON).</p></li><li><p>The request conforms to the expected structure or schema.</p></li></ul><pre><code>// Example of initial request handling\napp.post('/api/v1/orders', async (req, res) =&gt; {\n    // Check if request has required headers\n    if (!req.headers['content-type'].includes('application/json')) {\n        return res.status(400).send('Invalid content type');\n    }\n    // Continue processing...\n});</code></pre><p>If any information is missing or incorrect, the gateway immediately rejects the request and notifies the app  with an appropriate error message.</p><h4><strong>Step 3: Authentication &amp; Authorization</strong></h4><p>The gateway now verifies your identity and permissions to ensures only legitimate users can place orders:</p><ul><li><p>It forwards your authentication token (e.g., OAuth or JWT) to an identity provider to confirm your identity.</p></li><li><p>It checks your permissions to ensure you&#8217;re authorized to use the app for placing an order.</p></li></ul><pre><code>const authenticateRequest = async (req) =&gt; {\n    // Extract JWT token from header\n    const token = req.headers.authorization?.split(' ')[1];\n    \n    // Verify token and get user details\n    const user = await verifyToken(token);\n    \n    // Check if user has permission to place orders\n    return user.permissions.includes('place_orders');\n};</code></pre><p>If authentication or authorization fails, the API Gateway sends a <code>401 Unauthorized</code> or <code>403 Forbidden</code> error back to the app.</p><h4><strong>Step 4: Rate Limiting</strong></h4><p>To prevent abuse, the API Gateway checks how many requests you&#8217;ve made recently. For example:</p><ul><li><p>If you&#8217;ve made 10 \"Place Order\" requests in the last minute (maybe by accident), the gateway might block additional requests temporarily and return <code>429 Too Many Requests</code> response.</p></li></ul><pre><code>const checkRateLimit = async (userId) =&gt; {\n    const key = `rate_limit:order:${userId}`;\n    const current = await redis.incr(key);\n    \n    // If first request in window, set expiry\n    if (current === 1) {\n        await redis.expire(key, 60); // 1 minute window\n    }\n    \n    return current &lt;= 10; // Allow 10 order requests per minute\n};</code></pre><p>This ensures the system remains stable and fair for all users specially during traffic spikes or malicious attacks, such as distributed denial-of-service (DDoS) attempts.</p><h4><strong>Step 5: Request Transformation (if needed)</strong></h4><p>If any of these backend services require specific data formats or additional details, the API Gateway transforms the request. </p><p>For example:</p><ul><li><p>The app sends the delivery address in plain text, but the Delivery Service expects GPS coordinates. The API Gateway converts the address into coordinates before forwarding the request.</p></li></ul><pre><code>const transformRequest = async (originalRequest) =&gt; {\n    const address = originalRequest.deliveryAddress;\n\n    // Convert address to GPS coordinates using a geocoding API\n    const coordinates = await getCoordinatesFromAddress(address);\n\n    if (!coordinates) {\n        throw new Error('Failed to fetch GPS coordinates');\n    }\n\n    // Transform the request for the Delivery Service\n    return {\n        orderId: originalRequest.orderId,\n        customerName: originalRequest.customerName,\n        deliveryLocation: {\n            latitude: coordinates.lat,\n            longitude: coordinates.lng\n        },\n        deliveryInstructions: originalRequest.instructions || \"\"\n    };\n};</code></pre><h4>Step 6: Request Routing</h4><p>The API Gateway now needs to coordinate several backend services to process your order.</p><p>Using <strong>service discovery</strong>, it identifies:</p><ul><li><p><strong>Order Service:</strong> To create a new order record.</p></li><li><p><strong>Inventory Service:</strong> To check if the restaurant has your selected items available.</p></li><li><p><strong>Payment Service:</strong> To process your payment.</p></li><li><p><strong>Delivery Service:</strong> To assign a delivery driver to your order.</p></li></ul><p>The gateway dynamically routes the request to these services using a <strong>load balancing</strong> algorithm, ensuring it connects to available and healthy service instances.</p><pre><code>const routeRequest = async (req, serviceType) =&gt; {\n    // Get service registry\n    const services = await serviceDiscovery.getServices(serviceType);\n    \n    // Select instance\n    const targetService = selectServiceInstance(services);\n    \n    // Forward request\n    return await axios.post(\n        `${targetService.url}/api/orders`,\n        req.body,\n        { headers: req.headers }\n    );\n};</code></pre><h4><strong>Step 7: Response Handling</strong></h4><p>Once the API Gateway receives the response(s) from the backend service(s), it performs the following tasks:</p><ul><li><p><strong>Transformation:</strong> Adjusts the response format or structure to match the client&#8217;s requirements.</p></li><li><p><strong>Caching (Optional):</strong> Stores the response temporarily for frequently accessed data, reducing future latency.</p></li></ul><pre><code>const handleResponse = async (serviceResponse) =&gt; {\n    // Transform response if needed\n    const transformedResponse = {\n        orderId: serviceResponse.order_reference,\n        estimatedDelivery: serviceResponse.eta,\n        status: serviceResponse.current_status\n    };\n    \n    // Cache response if applicable\n    if (serviceResponse.cacheable) {\n        await cacheResponse(\n            transformedResponse.orderId, \n            transformedResponse\n        );\n    }\n    \n    return transformedResponse;\n};</code></pre><p>Finally, the API Gateway sends the processed response back to the client in a format they can easily understand.</p><h4>Step 8: Logging &amp; Monitoring</h4><p>Throughout this process, the gateway records important metrics to track each request:</p><pre><code>const logRequest = async (req, res, timing) =&gt; {\n    await logger.log({\n        timestamp: new Date(),\n        path: req.path,\n        method: req.method,\n        responseTime: timing,\n        statusCode: res.statusCode,\n        userId: req.user?.id\n    });\n};</code></pre><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/what-is-an-api-gateway?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/what-is-an-api-gateway?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png","enclosureMime":""}]}