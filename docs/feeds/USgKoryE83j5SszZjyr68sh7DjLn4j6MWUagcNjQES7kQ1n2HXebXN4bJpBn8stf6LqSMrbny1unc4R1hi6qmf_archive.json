{"id":"USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf","title":"top scoring links : golang","displayTitle":"Reddit - Go","url":"https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6","items":[{"title":"Minimal table writer in Go","url":"https://www.reddit.com/r/golang/comments/1hj3w8j/minimal_table_writer_in_go/","date":1734761886,"author":"/u/zeitgiest31","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Motivation: We wanted a quick table writer to render some tabular data for our internal devops CLI. We didn’t want to use an external library because of some unreasonable security policies.</p> <p><a href=\"https://github.com/shubhang93/tablewr\">https://github.com/shubhang93/tablewr</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/zeitgiest31\"> /u/zeitgiest31 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hj3w8j/minimal_table_writer_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hj3w8j/minimal_table_writer_in_go/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to gain a habit of writing tests?","url":"https://www.reddit.com/r/golang/comments/1hj1jq1/how_to_gain_a_habit_of_writing_tests/","date":1734753006,"author":"/u/Choux0304","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hej guys</p> <p>I&#39;m currently studying computer sciences with a focus of software development and the topic of testing our applications we develop throughout our time here at the university gets more and more present. I of course know the many advantages of testing and that I definitely should do it! </p> <p>I love that Go has an integrated test runner and I do want to use it. However when I begin to work on my little projects (mostly to practice Go or other web service related stuff and not to release something publicly) I often say to myself that I don&#39;t have the time to write tests, that I want to integrate more features rather than writing tests, ... - I guess everyone knows that feeling.</p> <p>So how did you achieve to become so disciplined to prioritize tests over new features? (Again I do know that writing tests has only advantages.) </p> <p>I guess, I will just have to force myself until I&#39;m so into it that it will just become a part of my normal process in getting stuff done. </p> <p>I&#39;m interested if anyone has a strategy about getting into tests or general thoughts about this topic.</p> <p><strong><strong>EDIT</strong></strong> Thanks everyone for the many replies. I read a couple of things which I want to try out on a past project of mine and for the future I want to look upon testing like many people say here: Without testing a bug or implementing tests for a feature the bug isn&#39;t fixed or the code can&#39;t be said to be stable.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Choux0304\"> /u/Choux0304 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hj1jq1/how_to_gain_a_habit_of_writing_tests/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hj1jq1/how_to_gain_a_habit_of_writing_tests/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Learning Go from Java - what to avoid","url":"https://www.reddit.com/r/golang/comments/1hizadu/learning_go_from_java_what_to_avoid/","date":1734745232,"author":"/u/equilibrium0212","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>As the title states, I&#39;m in a fortunate position where my company is transitioning from Java to Golang and I have the opportunity to learn Go and gain commercial experience in it.</p> <p>I&#39;ve been using Java for most of my professional career and I am very conscious that how you work with Java is very different to how you should work with Go, essentially strive for writing idiomatic Go.</p> <p>What advice would you give someone learning Go for the first time coming from Java, common things to avoid, any good resources to learn would be great (I have the Mastering Go book I will be using)?</p> <p>Side question, I learn best from doing and getting stuck into things. I was struggle to think of projects to build that I could use as a platform to learn a new language, so I was thinking of building a HTTP server from scratch (maybe form a TCP server so I can actually learn deeper about both web-servers and Go at the same time)? Open to suggestions!</p> <p>Looking forward to learning, it&#39;s been on my list to learn for sometime and I&#39;m excited to break the Java shackles and enjoy building again!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/equilibrium0212\"> /u/equilibrium0212 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hizadu/learning_go_from_java_what_to_avoid/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hizadu/learning_go_from_java_what_to_avoid/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The new maps and slices packages in Go 1.23: tour and examples","url":"https://www.reddit.com/r/golang/comments/1hiv7lb/the_new_maps_and_slices_packages_in_go_123_tour/","date":1734732843,"author":"/u/zachm","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hiv7lb/the_new_maps_and_slices_packages_in_go_123_tour/\"> <img src=\"https://external-preview.redd.it/-kvYNJ0Zscl6hxwC2XlykB5E6wvpjfXa1V8FSTLzfyc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7634cefae025130858f26bdb2db970c77461a533\" alt=\"The new maps and slices packages in Go 1.23: tour and examples\" title=\"The new maps and slices packages in Go 1.23: tour and examples\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/zachm\"> /u/zachm </a> <br/> <span><a href=\"https://www.dolthub.com/blog/2024-12-20-collection-functions-in-go-1-23/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hiv7lb/the_new_maps_and_slices_packages_in_go_123_tour/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Roast my server implementation","url":"https://www.reddit.com/r/golang/comments/1hiu8kg/roast_my_server_implementation/","date":1734730094,"author":"/u/Mallanaga","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hiu8kg/roast_my_server_implementation/\"> <img src=\"https://external-preview.redd.it/oUNhiIFosOo27dMURKKMsffo9Jy8-Ep-W0yas62FcB0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6500a50a06a18ee6867c902e76f0041fddbc130d\" alt=\"Roast my server implementation\" title=\"Roast my server implementation\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Idioms, folder structure, log messages… wdyt?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Mallanaga\"> /u/Mallanaga </a> <br/> <span><a href=\"https://github.com/gitops-ci-cd/greeting-service/blob/main/cmd/server/main.go\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hiu8kg/roast_my_server_implementation/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Standard Library +","url":"https://www.reddit.com/r/golang/comments/1hir7yx/standard_library/","date":1734721851,"author":"/u/awong593","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Is there a set of libraries for golang that you would classify as the standard library plus?</p> <p>I am thinking in terms of Java or C++. In java there is guava and all the apache libraries that can bootstrap a new project and in C++ there is boost which performs something similar. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/awong593\"> /u/awong593 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hir7yx/standard_library/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hir7yx/standard_library/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}