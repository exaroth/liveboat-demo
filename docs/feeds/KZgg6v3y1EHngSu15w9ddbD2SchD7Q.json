{
  "id": "KZgg6v3y1EHngSu15w9ddbD2SchD7Q",
  "title": "Dev News - Last 2 days",
  "displayTitle": "Dev News - Last 2 days",
  "url": "",
  "feedLink": "",
  "items": [
    {
      "title": "System Design: What is Service Discovery?",
      "url": "https://blog.algomaster.io/p/service-discovery-in-distributed-systems",
      "date": 1733407022,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Back when applications ran on a <strong>single server</strong>, life was simple. </p><p>Today&#8217;s modern applications are far more complex, consisting of <strong>dozens or even hundreds of services</strong>, each with multiple instances that scale up and down dynamically.</p><p>This makes it harder for services to efficiently <strong>find and communicate</strong> with each other across networks.</p><p>That&#8217;s where <strong>Service Discovery</strong> comes into play.</p><p>In this article, we&#8217;ll dive into what service discovery is, why it&#8217;s important, how it works, the different types (client and server side discovery), and best practices for implementing it effectively.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/yx8gx14\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:217429,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/yx8gx14\">Multiplayer's</a></strong> System Dashboard auto-discovers, tracks, and documents your entire system architecture&#8212;from its components to APIs, dependencies, and environments. Gain real-time, comprehensive visibility into your system, all at a glance.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/yx8gx14&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary button-wrapper\" href=\"https://dub.sh/yx8gx14\"><span>Get Started for FREE</span></a></p><div><hr></div><h2><strong>1. What is Service Discovery?</strong></h2><p><strong>Service discovery</strong> is a mechanism that allows services in a distributed system to <strong>find and communicate</strong> with each other dynamically. </p><p>It hides the complex details of where services are located, so they can interact without knowing each other's exact network spots.</p><p>Service discovery registers and maintains a record of all your services in a <strong>service registry</strong>. This service registry acts as a single source of truth that allows your services to query and communicate with each other.</p><p><strong>Example service registry record of a service:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" width=\"594\" height=\"537.4712990936556\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/58cc013a-3a06-474e-a695-82fef7d469be_662x599.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:599,&quot;width&quot;:662,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:54339,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>A service registry typically stores:</p><ul><li><p><strong>Basic Details:</strong> Service name, IP, port, and status.</p></li><li><p><strong>Metadata:</strong> Version, environment, region, tags, etc.</p></li><li><p><strong>Health Information:</strong> Health status, last health check.</p></li><li><p><strong>Load Balancing Info:</strong> Weights, priorities.</p></li><li><p><strong>Secure Communication:</strong> Protocols, certificates.</p></li></ul><p>This abstraction is important in environments where services are constantly being added, removed, or scaled.</p><h2><strong>2. Why is Service Discovery Important?</strong></h2><p>Think about a massive system like <strong>Netflix</strong>, with hundreds of microservices working together. Hardcoding the locations of these services isn&#8217;t scalable. If a service moves to a new server or scales dynamically, it could break the entire system.</p><p><strong>Service discovery</strong> solves this by dynamically and reliably enabling services to locate and communicate with one another.</p><p>Here are its key benefits:</p><ul><li><p><strong>Reduced Manual Configuration:</strong> Services can automatically discover and connect to each other, eliminating the need for manual configuration and hardcoding of network locations.</p></li><li><p><strong>Improved Scalability:</strong> As new service instances are added or removed, service discovery ensures that other services can seamlessly adapt to the changing environment.</p></li><li><p><strong>Fault Tolerance:</strong> Service discovery often include health checks, enabling systems to automatically reroute traffic away from failing service instances.</p></li><li><p><strong>Simplified Management:</strong> Having a central registry of services makes it easier to monitor, manage, and troubleshoot the entire system.</p></li></ul><h2>3. Service Registration Options</h2><p>Service registration is the process where a service announces its availability to a <strong>service registry</strong>, making it discoverable by other services.</p><p>The method of registration can vary depending on the architecture, tools, and deployment environment.</p><p>Here are the most common <strong>service registration options</strong>:</p><h4>3.1. <strong>Manual Registration</strong></h4><p>In manual registration, service details are added to the registry manually by a developer or operator. This approach is simple but not suitable for dynamic systems where services scale or move frequently.</p><h4>3.2. <strong>Self-Registration</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" width=\"565\" height=\"278\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:278,&quot;width&quot;:565,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:22928,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In self-registration, the service is responsible for registering itself with the service registry when it starts. The service includes logic to interact with the registry, such as sending API requests to register its details.</p><p><strong>How it works:</strong></p><ol><li><p>When a service or an instance starts, it retrieves its own network information (e.g., IP address, port).</p></li><li><p>It sends a registration request to the service registry (e.g., via HTTP or gRPC).</p></li><li><p>To ensure the registry has up-to-date information, the service may periodically send heartbeat signals to confirm it is active and healthy.</p></li></ol><h4>3.3. <strong>Third-Party Registration (Sidecar Pattern)</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" width=\"603\" height=\"289.9571209800919\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:314,&quot;width&quot;:653,&quot;resizeWidth&quot;:603,&quot;bytes&quot;:26561,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In third-party registration, an external agent or \"sidecar\" process handles service registration. The service itself does not directly interact with the registry. Instead, the sidecar detects the service and registers it on its behalf.</p><p><strong>How it works:</strong></p><ol><li><p>The sidecar runs alongside the service (e.g., in the same container or on the same host).</p></li><li><p>The sidecar detects when the service starts and gathers its network details.</p></li><li><p>It sends the registration request to the service registry.</p></li></ol><h4>3.4. <strong>Automatic Registration by Orchestrators</strong></h4><p>In modern orchestrated environments like <strong>Kubernetes</strong>, service registration happens automatically. The orchestration platform manages the lifecycle of services and updates the service registry as services start, stop, or scale.</p><p><strong>How it works:</strong></p><ol><li><p>The orchestrator (e.g., Kubernetes) detects when a service or container is deployed.</p></li><li><p>It assigns the service an IP address and port.</p></li><li><p>It registers the service automatically with its built-in service discovery mechanism (e.g., Kubernetes DNS).</p></li></ol><h4>3.5. <strong>Configuration Management Systems</strong></h4><p>Some systems use configuration management tools (e.g., Chef, Puppet, Ansible) to register services. These tools manage the service lifecycle and update the service registry whenever services are added or removed.</p><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2><strong>4. Types of Service Discovery</strong></h2><p>There are two primary types of service discovery: client-side discovery and server-side discovery.</p><h3><strong>4.1. Client-Side Discovery</strong></h3><p>In this model, the responsibility for discovering and connecting to a service lies entirely with the client.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" width=\"647\" height=\"446.6266280752533\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:691,&quot;resizeWidth&quot;:647,&quot;bytes&quot;:40525,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services (e.g., <code>UserService</code>, <code>PaymentService</code>) register themselves with a centralized <strong>service registry</strong>.</p><ol><li><p>They provide their network details (IP address and port) along with metadata like service health or version.</p></li></ol></li><li><p><strong>Client Queries the Registry: </strong>The client (a microservice or API gateway) sends a request to the <strong>service registry</strong> to find the instances of a target service (e.g., <code>PaymentService</code>).</p><ol><li><p>The registry responds with a list of available instances, including their IP addresses and ports.</p></li></ol></li><li><p><strong>Client Routes the Request: </strong>Based on the information retrieved, the client selects one of the service instances (often using a load balancing algorithm) and connects directly to it.</p></li></ol><p>The client maintains control over how requests are routed, such as distributing traffic evenly across instances or prioritizing the closest instance.</p><h4>Example Workflow</h4><p>Let&#8217;s consider a real-world example of a food delivery app:</p><ul><li><p>A <strong>Payment Service</strong> has three instances running on different servers.</p></li><li><p>When the <strong>Order Service</strong> needs to process a payment, it queries the <strong>service registry</strong> for the location of the <code>Payment Service</code>.</p></li><li><p>The service registry responds with a list of available instances (e.g., <code>IP1:Port1</code>, <code>IP2:Port2</code>, <code>IP3:Port3</code>).</p></li><li><p>The <strong>Order Service</strong> chooses an instance (e.g., <code>IP1:Port1</code>) and sends the payment request directly to it.</p></li></ul><h4><strong>Advantages</strong>:</h4><ul><li><p>Simple to implement and understand.</p></li><li><p>Reduces the load on a central load balancer.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Consumers need to implement discovery logic.</p></li><li><p>Changes in the registry protocol require changes in clients.</p></li></ul><blockquote><p><strong>Example:</strong> Netflix&#8217;s open-source library, <strong>Eureka</strong>, is a popular tool for client-side service discovery.</p></blockquote><h3><strong>4.2. Server-Side Discovery</strong></h3><p>In this model, the client delegates the responsibility of discovering and routing requests to a specific service instance to a <strong>centralized server or load balancer</strong>.</p><p>Unlike client-side discovery, the client does not need to query the service registry directly or perform any load balancing itself. </p><p>Instead, the client simply sends a request to a central server (load balancer or api gateway), which handles the rest.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" width=\"600\" height=\"397.6284584980237\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:503,&quot;width&quot;:759,&quot;resizeWidth&quot;:600,&quot;bytes&quot;:44548,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services register themselves with a centralized <strong>service registry</strong>, similar to client-side discovery.</p><ul><li><p>The service registry keeps track of all service instances, their IP addresses, ports, and metadata.</p></li></ul></li><li><p><strong>Client Sends Request: </strong>The client sends a request to a <strong>load balancer</strong> or <strong>API gateway</strong>, specifying the service it wants to communicate with (e.g., <code>payment-service</code>).</p><ul><li><p>The client does not query the service registry or know the specific location of the service instances.</p></li></ul></li><li><p><strong>Server Queries the Service Registry: </strong>The load balancer or gateway queries the service registry to find available instances of the requested service.</p></li><li><p><strong>Routing: </strong>The load balancer selects a suitable service instance (based on factors like load, proximity, or health) and routes the client&#8217;s request to that instance.</p></li><li><p><strong>Response: </strong>The service instance processes the request and sends the response back to the client via the load balancer or gateway.</p></li></ol><h4>Example Workflow</h4><p>Let&#8217;s take an example of an e-commerce platform with microservices for \"Order Management\" and \"Payment Processing.\"</p><ol><li><p><strong>Registration: </strong>The <code>PaymentService</code> registers two instances with the service registry:</p><ul><li><p>Instance 1: <code>IP1:8080</code></p></li><li><p>Instance 2: <code>IP2:8081</code></p></li></ul></li><li><p><strong>Client Request: </strong>The <code>OrderService</code> sends a request to the <strong>load balancer</strong> or API gateway, specifying the <code>PaymentService</code>.</p></li><li><p><strong>Discovery and Routing: </strong>The load balancer queries the service registry and retrieves the list of available <code>PaymentService</code> instances.</p><ul><li><p>It selects one instance (e.g., <code>IP1:8080</code>) and routes the request to it.</p></li></ul></li><li><p><strong>Processing and Response: </strong>The selected instance of <code>PaymentService</code> processes the request and sends the response back to the <code>OrderService</code> via the load balancer.</p></li></ol><h4><strong>Advantages</strong>:</h4><ul><li><p>Centralizes discovery logic, reducing the complexity for consumers.</p></li><li><p>Easier to manage and update discovery protocols.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Introduces an additional network hop.</p></li><li><p>The load balancer can become a single point of failure.</p></li></ul><blockquote><p><strong>Example</strong>: AWS Elastic Load Balancer (ELB) integrates with the AWS service registry for server-side discovery.</p></blockquote><h2><strong>5. Best Practices for Implementing Service Discovery</strong></h2><ol><li><p><strong>Choose the Right Model: </strong>Use client-side discovery for custom load balancing and server-side for centralized routing.</p></li><li><p><strong>Ensure High Availability: </strong>Replicate the service registry and test failover scenarios to prevent downtime. Deploy multiple instances of the service registry to avoid single points of failure.</p></li><li><p><strong>Automate Registration: </strong>Use self-registration, sidecars, or orchestration tools for dynamic environments. Ensure proper deregistration of stale services.</p></li><li><p><strong>Use Health Checks: </strong>Monitor service health and remove failing instances automatically.</p></li><li><p><strong>Follow Naming Conventions: </strong>Use clear, unique service names with versioning to avoid conflicts (e.g., <code>payment-service-v1</code>).</p></li><li><p><strong>Caching</strong>: Use caching mechanisms to reduce the load on the service registry and improve discovery performance.</p></li><li><p><strong>Scalability</strong>: Ensure that the service discovery system can scale with the growth of your services.</p></li></ol><h2>6. Conclusion</h2><p>Service discovery may not be the most glamorous aspect of distributed systems, but it is undoubtedly one of the most essential. </p><p>Think of service discovery as the address book of your microservices architecture. Without it, scaling and maintaining distributed systems would be chaotic.</p><p>It serves as the backbone that enables the seamless communication and coordination between services, allowing complex applications to function reliably and efficiently.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Replace \"hub\" by \"ingest\" in GitHub URLs for a prompt-friendly extract",
      "url": "https://gitingest.com/",
      "date": 1733412289,
      "author": "cyclotruc",
      "unread": true,
      "desc": "",
      "content": "\n<p>Gitingest is a open-source micro dev-tool that I made over the last week.<p>It turns any public Github repository into a text\nextract that you can give to your favourite LLM easily.<p>Today I added this url trick to make it even easier to use!<p>How I use it myself:\n- Quickly generate a README.md boilerplate for a project\n- Ask LLMs questions about an undocumented codebase<p>It is still very much work in progress and I plan to add many more options (file size limits, exclude patterns..) and a public API<p>I hope this tool can help you\nYour feedback is very valuable to help me prioritize\nAnd contributions are welcome!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42329071\">https://news.ycombinator.com/item?id=42329071</a></p>\n<p>Points: 174</p>\n<p># Comments: 49</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Fine-Grained Authorization for Retrieval Augmented Generation",
      "url": "https://www.youtube.com/watch?v=74G7Pwnaj_U",
      "date": 1733421334,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/74G7Pwnaj_U?version=3",
      "enclosureMime": ""
    },
    {
      "title": "ChatGPT Pro",
      "url": "https://openai.com/index/introducing-chatgpt-pro/",
      "date": 1733422171,
      "author": "meetpateltech",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://openai.com/index/introducing-chatgpt-pro/\">https://openai.com/index/introducing-chatgpt-pro/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42330732\">https://news.ycombinator.com/item?id=42330732</a></p>\n<p>Points: 786</p>\n<p># Comments: 1137</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Banan-OS, an Unix-like operating system written from scratch",
      "url": "https://github.com/Bananymous/banan-os",
      "date": 1733424854,
      "author": "Bananymous",
      "unread": true,
      "desc": "",
      "content": "\n<p>This is my operating system that I've been working for the past 2 years. All of the code is written exclusively by me except from ported software. banan-os has a monolithic kernel targeting x86 (i686) and x86_64 architectures. The project consists of bootloader, kernel and userspace libraries (libc, libGUI, libFont, ...). It also uses my custom C++ standard library partly based on stdc++.<p>Currently I have basic TTY and GUI environment with some of the basic UNIX utilities like cp, ls and stat. I have basic support for USB (keyboard/mouse/storage), disks (NVMe, AHCI), custom networking stack with TCP and UDP support, and a UNIX-like filesystem with /dev /tmp /proc filesystems.<p>The whole project is written in  C++ except for my BIOS bootloader that is written in 16-bit real mode assembly. I have been testing the OS mainly on virtual machines but also frequently on real hardware.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42331270\">https://news.ycombinator.com/item?id=42331270</a></p>\n<p>Points: 319</p>\n<p># Comments: 57</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The Rust Foundation's Plan to Grow the Pool of Well-Trained Rust Developers",
      "url": "https://developers.slashdot.org/story/24/12/05/2222220/the-rust-foundations-plan-to-grow-the-pool-of-well-trained-rust-developers?utm_source=rss1.0mainlinkanon&utm_medium=feed",
      "date": 1733437500,
      "author": "EditorDavid",
      "unread": true,
      "desc": "",
      "content": "\"The Rust Foundation is dedicated to ensuring a healthy Rust ecosystem,\" according to a new announcement today, \" which depends on a growing pool of well-trained developers to thrive.\"\n\nThe latest SlashData Developer Nation survey found Rust to be the fastest-growing programming language, doubling its users over the past two years. As Rust's adoption continues to accelerate, the demand for a multifaceted ecosystem of quality training will too.\n \n\nTheir blog post highlights three examples of the Rust community \"creating new pathways for learning Rust\" and \"addressing the critical need for Rust training in academic settings...\"\n\n\nRust-Edu operates as a non-profit through Portland State University, with funding from Futurewei. Their mission is to \"spread Rust use and development through academic curricula and communities throughout the world, making Rust the language of choice for 'systems programming' in its broadest sense through shared efforts of faculty, students and the Rust community.\" They focus on three main areas: curriculum development, educational tools, and language improvements... \n\n\nteach-rs, pronounced \"teachers,\" is a modular and reusable university course designed for in-person teaching in Rust. Its mission is to introduce Rust in higher education and ensure that more students enter the job market with considerable Rust experience. The teach-rs project provides ready-to-use Rust teaching materials, including slide decks and exercises that can be adapted to various teaching contexts... As an open source permissively licensed project, teach-rs enables educators to share and improve resources, making introducing Rust instruction into their programs more accessible. Many institutions now use teach-rs in their courses, including the Slovak University of Technology, RustIEC (a collaboration between Vrije Universiteit Brussel and KU Leuven), and the University Politehnica of Bucharest. At the time of this writing, teach-rs has nearly 3000 stars on GitHub... \n\nUnder the guidance of The Rust Foundation's Global Rust Coordinator and Rust Nation UK's organizer Ernest Kissiedu, Mordecai Etukudo (Mart) has developed a guide to help educational institutions adopt Rust in their systems. This resource walks organizations through the entire implementation process, from initial assessment to community engagement.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=The+Rust+Foundation's+Plan+to+Grow+the+Pool+of+Well-Trained+Rust+Developers%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F05%2F2222220%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F05%2F2222220%2Fthe-rust-foundations-plan-to-grow-the-pool-of-well-trained-rust-developers%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/05/2222220/the-rust-foundations-plan-to-grow-the-pool-of-well-trained-rust-developers?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The correct amount of ads is zero",
      "url": "https://manuelmoreale.com/the-correct-amount-of-ads-is-zero",
      "date": 1733443347,
      "author": "surprisetalk",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://manuelmoreale.com/the-correct-amount-of-ads-is-zero\">https://manuelmoreale.com/the-correct-amount-of-ads-is-zero</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42334327\">https://news.ycombinator.com/item?id=42334327</a></p>\n<p>Points: 797</p>\n<p># Comments: 531</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The 70% problem: Hard truths about AI-assisted coding",
      "url": "https://addyo.substack.com/p/the-70-problem-hard-truths-about",
      "date": 1733461871,
      "author": "mooreds",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://addyo.substack.com/p/the-70-problem-hard-truths-about\">https://addyo.substack.com/p/the-70-problem-hard-truths-about</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42336553\">https://news.ycombinator.com/item?id=42336553</a></p>\n<p>Points: 562</p>\n<p># Comments: 401</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why is u32/i32 faster than u8?",
      "url": "https://www.reddit.com/r/rust/comments/1h7wqx6/why_is_u32i32_faster_than_u8/",
      "date": 1733473272,
      "author": "/u/ClimberSeb",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I solved day 5&#39;s advent of code problem with a rust program.</p> <p>There I mainly used <span class=\"md-spoiler-text\">Vec::sort_by, a HashSet::&lt;(i32, i32)&gt; plus some recursive depth first search</span> to solve it.</p> <p>At first I didn&#39;t bother checking how big/small the numbers is in my input so I just used an i32 to store them.</p> <p>After getting the right answer I was curious to see how much faster the code would be with the &quot;right&quot; datatype so I changed the numbers to u8. Then the code ran ~50% slower! I tried with i8, i16, u16 all with about the same performance as using u8. Changing to u32 didn&#39;t make a difference compared to i32, and using u64/i64 made it 73% slower.</p> <p>I don&#39;t know the x86_64 instructions, but I&#39;ve assumed the cost of widening the types would be free on a superscalar architecture even if it needed special instructions to do so. What else could cause the slowdown? Worse hashing performance?</p> <p>---- Edit after comments:</p> <p>The code is here: <a href=\"https://pastebin.com/y0xVWHfs\">https://pastebin.com/y0xVWHfs</a></p> <p>It uses these crates:<br/> aoc-runner = &quot;0.3.0&quot;<br/> aoc-runner-derive = &quot;0.3.0&quot;</p> <p>but one could just include the input file and add a main that calls input_generator with it, followed by calling solve_part2 with the result from input_generator.</p> <p>I&#39;ve benchmarked it with cargo-aoc bench, it compiles the code in release mode when benchmarking. It only benchmarks the solve_part2 function, not the input_generator call.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ClimberSeb\"> /u/ClimberSeb </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h7wqx6/why_is_u32i32_faster_than_u8/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7wqx6/why_is_u32i32_faster_than_u8/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Y'all seen the 6.10 bsod.. but did y'all see a BLUE BACKGROUND KERNEL PANIC?",
      "url": "https://www.reddit.com/r/linux/comments/1h7ws5n/yall_seen_the_610_bsod_but_did_yall_see_a_blue/",
      "date": 1733473432,
      "author": "/u/akanezzx",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>That&#39;s isn&#39;t reflection since my screen brightness isn&#39;t bright enough to reflect black to blue. It&#39;s weird too because there&#39;s NO INFORMATION ABOUR THIS ONLINE except the windows bsod and 6.10 bsod. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/akanezzx\"> /u/akanezzx </a> <br/> <span><a href=\"https://i.redd.it/50ujup2iu65e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ws5n/yall_seen_the_610_bsod_but_did_yall_see_a_blue/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "ChatLoopBackOff - Episode 38 (Copacetic)",
      "url": "https://www.youtube.com/watch?v=8eBaDvNQckY",
      "date": 1733474865,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Copacetic, also known as \"Copa,\" is an open-source project designed to streamline container security by addressing vulnerabilities directly within container images. The tool is primarily a command-line interface (CLI) application that allows users to patch container image vulnerabilities based on scanning results from tools like Trivy. The main advantage is that it enables patching without the need to rebuild the entire container image, offering a faster and more efficient approach to securing containers. Join CNCF Ambassador Oluebube Princess Egbuna as she explores Copa for the first time!",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/8eBaDvNQckY?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Handing errors with namespace codes",
      "url": "https://www.reddit.com/r/golang/comments/1h7x5ks/handing_errors_with_namespace_codes/",
      "date": 1733475144,
      "author": "/u/olvrng",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone. I&#39;m developing an internal framework for my company about handling errors, around the concept of using namespace error codes.</p> <p>For example, use DEPS.PG.NOT_FOUND for database error, when this error is handled by the profile/user layer, it&#39;s wrapped as PRFL.USR.NOT_FOUND.</p> <p>It may be a bit over-engineering, but now the error codes become more structured. The logs become more manageable and clearer, with the ability to tag and monitor each code, separating between expected and unexpected code. I&#39;m sharing the idea in this article. Would love to hear your thoughts, or know more about how you handle errors in your projects.</p> <p><a href=\"https://olivernguyen.io/w/namespace.error\">https://olivernguyen.io/w/namespace.error</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/olvrng\"> /u/olvrng </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h7x5ks/handing_errors_with_namespace_codes/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7x5ks/handing_errors_with_namespace_codes/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Announcing self_cell version 1.1.0",
      "url": "https://www.reddit.com/r/rust/comments/1h7xpy9/announcing_self_cell_version_110/",
      "date": 1733477715,
      "author": "/u/Voultapher",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Recently I released a new minor version of <a href=\"https://github.com/Voultapher/self_cell\">self_cell</a> that adds a <a href=\"https://github.com/Voultapher/self_cell/pull/36\">long</a> requested feature: mutable references to the owner. In the past I was reluctant to add this feature because the core of the library is exceedingly tricky to get right, and I had to yank versions off of crates.io half a dozen times over the years - something every other serious self referential crate had to do as well, getting them right, especially variance, is extremely difficult - and even had a <a href=\"https://rustsec.org/advisories/RUSTSEC-2023-0070.html\">RUSTSEC advisory</a>. So given my design goal of keeping the crate minimal and avoiding unnecessary changes to the existing <code>unsafe</code> code, I had given up on adding this feature, but earlier this year someone raised the topic again and I had an idea for how to add this functionality without having to change the existing code. In essence I unknowingly re-derived the <a href=\"https://doc.rust-lang.org/std/cell/struct.RefMut.html#method.leak\"><code>RefCell::leak</code></a> API. Users can now wrap the owner in the crate provided type <a href=\"https://docs.rs/self_cell/1.1.0/self_cell/struct.MutBorrow.html\"><code>MutBorrow</code></a> which allows a <code>(&amp;self) -&gt; &amp;mut T </code> transition, <em>but only once</em>. This way the existing APIs, documentation and code all stay the same but the wrapper type adds support for common use-cases such as <code>ZipArchive</code> etc.</p> <p>This brings self_cell closer to feature parity with <a href=\"https://github.com/someguynamedjosh/ouroboros\">ouroboros</a>. If you are happy with ouroboros there is no need to switch, it has also been reviewed extensively and has capabilities self_cell lacks. The renewed issue was raised by one of the rusqlite maintainers who wants to migrate to it because self_cell generates less code and is faster to compile, so if you&#39;re usage of ouroboros is feature compatible with self_cell and you care about compile times and or binary-size this might be avenue for improvement in your project.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Voultapher\"> /u/Voultapher </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h7xpy9/announcing_self_cell_version_110/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7xpy9/announcing_self_cell_version_110/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The 70% problem: Hard truths about AI-assisted coding",
      "url": "https://www.reddit.com/r/programming/comments/1h7xwvm/the_70_problem_hard_truths_about_aiassisted_coding/",
      "date": 1733478607,
      "author": "/u/_srbhr_",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/_srbhr_\"> /u/_srbhr_ </a> <br/> <span><a href=\"https://addyo.substack.com/p/the-70-problem-hard-truths-about\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7xwvm/the_70_problem_hard_truths_about_aiassisted_coding/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Debian opens a can of username worms",
      "url": "https://lwn.net/SubscriberLink/1000485/670ef0045e5e8a3e/",
      "date": 1733478918,
      "author": "jwilk",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://lwn.net/SubscriberLink/1000485/670ef0045e5e8a3e/\">https://lwn.net/SubscriberLink/1000485/670ef0045e5e8a3e/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42338134\">https://news.ycombinator.com/item?id=42338134</a></p>\n<p>Points: 201</p>\n<p># Comments: 228</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Rustc Trait System Refactor Initiative Update: Stabilizing `-Znext-solver=coherence` | Inside Rust Blog",
      "url": "https://www.reddit.com/r/rust/comments/1h7y9jp/rustc_trait_system_refactor_initiative_update/",
      "date": 1733480161,
      "author": "/u/slanterns",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/slanterns\"> /u/slanterns </a> <br/> <span><a href=\"https://blog.rust-lang.org/inside-rust/2024/12/04/trait-system-refactor-initiative.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7y9jp/rustc_trait_system_refactor_initiative_update/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Hacker Herald – like HN but with crowdsourced pics and subtitles",
      "url": "https://hackerherald.com/",
      "date": 1733480554,
      "author": "MarkMc",
      "unread": true,
      "desc": "",
      "content": "\n<p>Hi folks this is a project I worked on with some of my students when I was running an online JS programming course.  Although the online course is no more, I finally got around to releasing Hacker Herald with a former instructor and student - thanks Arnav and Archis!<p>To those wondering if there is a need for such a Hacker News front end, I would just point out that most newspaper websites are laid out like this - clearly some people like this kind of layout!<p>Also for some stories a picture really does help - currently there is a HN story titled, \"Portland airport grows with expansive mass timber roof canopy\".  But IMO it's better to actually see a picture of the timber roof while scrolling rather than having to click through to the article.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42338327\">https://news.ycombinator.com/item?id=42338327</a></p>\n<p>Points: 201</p>\n<p># Comments: 75</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Kubernetes-friendly wiki?",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h7yjj9/kubernetesfriendly_wiki/",
      "date": 1733481365,
      "author": "/u/Fudd79",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve been looking for a good wiki-engine that can run on k8s, with replicas. My old goto wikis (BookStack and DokuWiki) don&#39;t really seem to fit too well. (It&#39;s worth mentioning that I&#39;m a k8s-newb, so I might have misunderstood things regarding BookStack.)</p> <p>Searching the web for alternatives is rather hard since I get a lot of results that are wikis about k8s, or links to the kubernetes-article on Wikipedia etc. I have however found Wiki.js which seems to have a good kubernetes install-guide.</p> <p>Anyone know of any alternatives? (I&#39;m pretty sure MediaWiki supports it, I just don&#39;t like that wiki&#39;s look).</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fudd79\"> /u/Fudd79 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7yjj9/kubernetesfriendly_wiki/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7yjj9/kubernetesfriendly_wiki/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why Flatpak is a Blessing for Linux Beginners and Everyday Users",
      "url": "https://www.reddit.com/r/linux/comments/1h7ze64/why_flatpak_is_a_blessing_for_linux_beginners_and/",
      "date": 1733484915,
      "author": "/u/MaleficentTry1316",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I swear by Flatpak. It has made Linux so much more accessible for beginners and casual users who aren&#39;t interested in diving deep into the inner workings of Linux but just want to use their PC without relying on Windows.</p> <p>I get that Flatpak has its downsides, like consuming more storage space in general, but the benefits far outweigh these negatives. Before I started using Flatpak, and was relying on traditional package managers like apt or dnf, I would always run into issues after a while that I had to Google and troubleshoot (of course, that&#39;s part of the IT life). Dependency problems and other headaches were a constant struggle. But ever since I switched to Flatpak, I can reliably expect my PC to just work about 98% of the time.</p> <p>Learning Linux in-depth is great, especially in a VM where you don&#39;t have to worry about losing important data—it&#39;s fun to break things and figure out how to fix them. But if you&#39;re just looking to have a working PC without all the hassle of configuring things or dealing with weird issues, Flatpak is a godsend.</p> <p>Canonical does something similar with Snap, and I fully understand the dislike people have for Snap. However, I think the containerized way of installing software is exactly what non-tech-savvy users need when they want a working PC without the need of using Windows.</p> <p>I’m sure Flatpak has its own downsides if you dig deeper, but for the average user, it’s a massive positive addition to Linux.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/MaleficentTry1316\"> /u/MaleficentTry1316 </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ze64/why_flatpak_is_a_blessing_for_linux_beginners_and/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ze64/why_flatpak_is_a_blessing_for_linux_beginners_and/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Canon EOS SDK is now finally available for Linux!",
      "url": "https://www.reddit.com/r/linux/comments/1h7zxc4/canon_eos_sdk_is_now_finally_available_for_linux/",
      "date": 1733486902,
      "author": "/u/maxawake",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>It has always been Kind of hacky to get Canon eos cameras to work on linux. This finally opens the door for great driver and custom Software using the SDK. Go Canon! </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/maxawake\"> /u/maxawake </a> <br/> <span><a href=\"https://i.redd.it/icypcmgjy75e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7zxc4/canon_eos_sdk_is_now_finally_available_for_linux/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Announcing ProSA: Our New Rust Open Source Library for Handling Transactional Flow at Worldline Fintech",
      "url": "https://www.reddit.com/r/rust/comments/1h80eiq/announcing_prosa_our_new_rust_open_source_library/",
      "date": 1733488653,
      "author": "/u/reneca",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/reneca\"> /u/reneca </a> <br/> <span><a href=\"https://blog.worldline.tech/2024/11/26/prosa.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h80eiq/announcing_prosa_our_new_rust_open_source_library/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Prompt Engine – Auto pick LLMs based on your prompts",
      "url": "https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine",
      "date": 1733489148,
      "author": "yoeven",
      "unread": true,
      "desc": "",
      "content": "\n<p>Nowadays, a common AI tech stack has hundreds of different prompts running across different LLMs.<p>Three key problems:<p>- Choices, picking from 100s of LLMs the best LLM for that 1 prompt is gonna be challenging, you're probably not picking the most optimized LLM for a prompt you wrote.<p>- Scaling/Upgrading, similar to choices but you want to keep consistency of your output even when models depreciate or configurations change.<p>- Prompt management is scary, if something works, you'll never want to touch it but you should be able to without fear of everything breaking.<p>So we launched Prompt Engine which automatically runs your prompts for you on the best LLM every single time with all the tools like internet access. You can also store prompts for reusability and caching which increases performance on every run.<p>How it works?<p>tldr, we built a really small model that is trained on datasets comparing 100s of LLMs that can automatically pick a model based on your prompt.<p>Here's an article explaining the details: <a href=\"https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine\" rel=\"nofollow\">https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-m...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339302\">https://news.ycombinator.com/item?id=42339302</a></p>\n<p>Points: 84</p>\n<p># Comments: 13</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What do you think about my new Home Server?",
      "url": "https://www.reddit.com/r/linux/comments/1h814g1/what_do_you_think_about_my_new_home_server/",
      "date": 1733491009,
      "author": "/u/La_wand",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/La_wand\"> /u/La_wand </a> <br/> <span><a href=\"https://i.redd.it/e1wpcyb2r75e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h814g1/what_do_you_think_about_my_new_home_server/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Need suggestions/ideas for cutting aws data transfer cost.",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h816y6/need_suggestionsideas_for_cutting_aws_data/",
      "date": 1733491230,
      "author": "/u/h3xport",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Our next.js app is communicating with the .Net backend via publicly exposed LB/domain via ingress controller. This communication is adding to the data cost of our cloud as the communication is public. As per my knowledge, there is no way around for this as most of the things are rendered on the browser of users &amp; we can&#39;t omit a publically exposed API from the architecture. Can anyone suggest a concept or anything you have used in such scenarios, where requests from users are served via ingress &amp; internal calls from frontend microservice to backend microservice are served locally...?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/h3xport\"> /u/h3xport </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h816y6/need_suggestionsideas_for_cutting_aws_data/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h816y6/need_suggestionsideas_for_cutting_aws_data/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Paid Software is Coming to Flathub",
      "url": "https://www.reddit.com/r/linux/comments/1h81a9d/paid_software_is_coming_to_flathub/",
      "date": 1733491522,
      "author": "/u/Zery12",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Zery12\"> /u/Zery12 </a> <br/> <span><a href=\"https://i.redd.it/10e9fqy4c85e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h81a9d/paid_software_is_coming_to_flathub/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Romanian court annuls result of presidential election first round",
      "url": "https://www.bbc.com/news/articles/cn4x2epppego",
      "date": 1733493349,
      "author": "vinni2",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.bbc.com/news/articles/cn4x2epppego\">https://www.bbc.com/news/articles/cn4x2epppego</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339819\">https://news.ycombinator.com/item?id=42339819</a></p>\n<p>Points: 416</p>\n<p># Comments: 818</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: BunkerWeb – The Open-Source Web Application Firewall (WAF)",
      "url": "https://github.com/bunkerity/bunkerweb",
      "date": 1733493608,
      "author": "bnkty",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://github.com/bunkerity/bunkerweb\">https://github.com/bunkerity/bunkerweb</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339856\">https://news.ycombinator.com/item?id=42339856</a></p>\n<p>Points: 110</p>\n<p># Comments: 28</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Rivian is opening its charging network to other EVs",
      "url": "https://www.thedrive.com/news/rivian-is-opening-its-charger-network-to-other-evs",
      "date": 1733494609,
      "author": "peutetre",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.thedrive.com/news/rivian-is-opening-its-charger-network-to-other-evs\">https://www.thedrive.com/news/rivian-is-opening-its-charger-network-to-other-evs</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42340000\">https://news.ycombinator.com/item?id=42340000</a></p>\n<p>Points: 220</p>\n<p># Comments: 218</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Install postmarketOS on Android phone and use Docker as a home server",
      "url": "https://crackoverflow.com/docs/system_administration/containerization/install-docker-natively-on-android-phone-and-use-it-as-a-home-server/",
      "date": 1733494997,
      "author": "raybb",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://crackoverflow.com/docs/system_administration/containerization/install-docker-natively-on-android-phone-and-use-it-as-a-home-server/\">https://crackoverflow.com/docs/system_administration/containerization/install-docker-natively-on-android-phone-and-use-it-as-a-home-server/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42340065\">https://news.ycombinator.com/item?id=42340065</a></p>\n<p>Points: 245</p>\n<p># Comments: 95</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Mozilla Announces 'JavaScriptmas' - Daily Coding Challenges with a Chance at Prizes",
      "url": "https://tech.slashdot.org/story/24/12/04/0138255/mozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes?utm_source=rss1.0mainlinkanon&utm_medium=feed",
      "date": 1733499240,
      "author": "EditorDavid",
      "unread": true,
      "desc": "",
      "content": "Mozilla's developer blog is announcing \"JavaScriptmas\".\n\n [F]rom December 1st to December 24th, we will release a fun, daily coding challenge for you to solve on [code-learning platform] Scrimba. Each challenge comes with an introductory screencast called \"scrim\", some starter code, and then it's your turn to fill in the gaps. \n\nJavaScriptmas is about coding, learning, and the chance to win exciting prizes. Two lucky coders will be chosen as winners at the end of JavaScriptmas, and each will win a MacBook Air M3, swag from MDN and Scrimba, and a lifetime Scrimba Pro membership (worth ~$200 per year). The Scrimba membership will give you access to all courses, including the Frontend Developer Career Path based on the MDN curriculum. \nMost of the challenges will evolve around JavaScript algorithms. You will also practice subjects like DOM manipulation, UI design, CSS, accessibility, and even a bit of cyber security. The challenges are a collaborative effort from Scrimba teachers, mentors, and MDN content writers, all with the goal of turning you into a more well-rounded web developer. \nWinners will be chosen randomly from everyone who submits correct solutions. We want JavaScriptmas to be accessible for both beginners and experienced developers alike. That said, the more challenges you solve, the better your chances of winning! To maximize your chances, try to solve all 24 challenges and submit them as both regular entries and social entries. You don't have to submit your solutions on the same day they're published &mdash; the deadline for any submission is midnight UTC on Christmas Eve.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Mozilla+Announces+'JavaScriptmas'+-+Daily+Coding+Challenges+with+a+Chance+at+Prizes%3A+https%3A%2F%2Ftech.slashdot.org%2Fstory%2F24%2F12%2F04%2F0138255%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Ftech.slashdot.org%2Fstory%2F24%2F12%2F04%2F0138255%2Fmozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://tech.slashdot.org/story/24/12/04/0138255/mozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Introducing a new Enum library for Go - No Code Generation, Simple and Back-compatible with standard definition",
      "url": "https://www.reddit.com/r/golang/comments/1h84em8/introducing_a_new_enum_library_for_go_no_code/",
      "date": 1733500292,
      "author": "/u/Lumpy_Peach5111",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Recently, I came across discussions on why Go enums are challenging to work with. I started searching for existing Go enum libraries and found that many have at least one of the following issues:</p> <ul> <li>Need code generation</li> <li>Non-constant enums</li> <li>Incompatibility with <code>iota</code> enum implementation</li> <li>No serialization</li> </ul> <p>To address this, I wrote a simple enum library to make working with enums in Go easier and more straightforward. <a href=\"https://github.com/xybor-x/enum\">https://github.com/xybor-x/enum</a></p> <p>Feel free to share your feedback, suggestions, or concerns. If this library is helpful, please consider giving it a star on GitHub!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Lumpy_Peach5111\"> /u/Lumpy_Peach5111 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h84em8/introducing_a_new_enum_library_for_go_no_code/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h84em8/introducing_a_new_enum_library_for_go_no_code/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Context with Graceful Shutdown",
      "url": "https://www.reddit.com/r/golang/comments/1h85rzd/context_with_graceful_shutdown/",
      "date": 1733503804,
      "author": "/u/obenns",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I have a context that finishes when a cancellation signal is sent to the program. A package waits on this signal and then finishes:</p> <pre><code>func WithSignalCancel(baseCtx context.Context) (context.Context, context.CancelFunc) { ctx, cancel := context.WithCancel(baseCtx) sigChan := make(chan os.Signal, 1) signal.Notify(sigChan, syscall.SIGINT, syscall.SIGTERM) go func() { sig := &lt;-sigChan cancel() }() return ctx, cancel } </code></pre> <p>Now, upon this context being cancelled, I want to process anything that is still on the channel (the service that pushes to this channel also listens to this ctx, but it could still be pushing before it is able to handle it).</p> <p>So there are 2 scenarios here that I want to solve and not sure how I go about it:<br/> - If an entity is already being saved, these now fail due to it calling a db func with a cancelled ctx. However I still actually want these to complete when the shutdown occurs, <em>before then shutting down</em>. Do I just create a new context here for the database that is not wrapped in the signal cancel?<br/> - If ctx.Done() is hit, then I suppose I want to do a `range` on any remaining entries before the other service closes the channel?</p> <p>I sense I am doing something wrong here as I have not been able to find a solution! Any advice would be appreciated.</p> <pre><code>func (s *Service) Run(ctx context.Context, entities &lt;-chan *Entity) error { for { select { case data, ok := &lt;-entities: if !ok { return nil } // saves to db s.saveEntity(ctx, data) case &lt;-ctx.Done(): } } } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/obenns\"> /u/obenns </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h85rzd/context_with_graceful_shutdown/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h85rzd/context_with_graceful_shutdown/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Mistakes as a new manager",
      "url": "https://terriblesoftware.org/2024/12/04/the-6-mistakes-youre-going-to-make-as-a-new-manager/",
      "date": 1733504210,
      "author": "Sharpie4679",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://terriblesoftware.org/2024/12/04/the-6-mistakes-youre-going-to-make-as-a-new-manager/\">https://terriblesoftware.org/2024/12/04/the-6-mistakes-youre-going-to-make-as-a-new-manager/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42341506\">https://news.ycombinator.com/item?id=42341506</a></p>\n<p>Points: 159</p>\n<p># Comments: 61</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "GitHub - essentialkaos/aligo: Utility for checking and viewing Golang struct alignment info",
      "url": "https://www.reddit.com/r/golang/comments/1h86n5z/github_essentialkaosaligo_utility_for_checking/",
      "date": 1733505991,
      "author": "/u/web3samy",
      "unread": true,
      "desc": "",
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1h86n5z/github_essentialkaosaligo_utility_for_checking/\"> <img src=\"https://external-preview.redd.it/815uGj9GuKSnf_-O7dgkgCBHGewNQaSxET9NaEh_pL8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b32d536c1b2c6026c4dfc359765360ade75980d1\" alt=\"GitHub - essentialkaos/aligo: Utility for checking and viewing Golang struct alignment info\" title=\"GitHub - essentialkaos/aligo: Utility for checking and viewing Golang struct alignment info\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/web3samy\"> /u/web3samy </a> <br/> <span><a href=\"https://github.com/essentialkaos/aligo\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h86n5z/github_essentialkaosaligo_utility_for_checking/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Real-Time YOLO Object Detection in Elixir: Fast, Simple, Extensible",
      "url": "https://github.com/poeticoding/yolo_elixir",
      "date": 1733506794,
      "author": "alvises",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://github.com/poeticoding/yolo_elixir\">https://github.com/poeticoding/yolo_elixir</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342038\">https://news.ycombinator.com/item?id=42342038</a></p>\n<p>Points: 74</p>\n<p># Comments: 11</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Kernel panic on a barrier",
      "url": "https://www.reddit.com/r/linux/comments/1h8767l/kernel_panic_on_a_barrier/",
      "date": 1733507363,
      "author": "/u/c0let",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/c0let\"> /u/c0let </a> <br/> <span><a href=\"https://i.redd.it/kxs5hrqcn95e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h8767l/kernel_panic_on_a_barrier/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Tokyo is set to introduce a four-day workweek for government employees",
      "url": "https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html",
      "date": 1733507660,
      "author": "amichail",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html\">https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342203\">https://news.ycombinator.com/item?id=42342203</a></p>\n<p>Points: 505</p>\n<p># Comments: 258</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "[Media] Actuate UI: Now with Material design components, better ergonomics with Bevy, and a faster runtime with support for pause/resume",
      "url": "https://www.reddit.com/r/rust/comments/1h87jod/media_actuate_ui_now_with_material_design/",
      "date": 1733508262,
      "author": "/u/matthunz",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/matthunz\"> /u/matthunz </a> <br/> <span><a href=\"https://i.redd.it/4o7pdfp2q95e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h87jod/media_actuate_ui_now_with_material_design/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Every V4 UUID",
      "url": "https://everyuuid.com/",
      "date": 1733508706,
      "author": "LorenDB",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://everyuuid.com/\">https://everyuuid.com/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342382\">https://news.ycombinator.com/item?id=42342382</a></p>\n<p>Points: 953</p>\n<p># Comments: 293</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What happens if net.Conn.Read reads more bytes than the buffer size",
      "url": "https://www.reddit.com/r/golang/comments/1h87t2i/what_happens_if_netconnread_reads_more_bytes_than/",
      "date": 1733508914,
      "author": "/u/Interesting_Shine_38",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello, I failed to find meaningful answer(for me at least) to this question.<br/> If i have the following code: </p> <pre><code>buf := make([]byte, 1 &lt;&lt; 3) sizeInput, err := conn.Read(buf) // this is handling tcp connection </code></pre> <p>What happens when the data fed into <code>buf</code> via the network is larger than the <code>buf</code> array size? </p> <p>Also is there a way to limit the number of bytes read? I expected <code>Read</code> to take second argument, which indicates the buffer size but according to the documentation this is not the case. </p> <p>The source code of the Read method is a little bit cryptic for me and I failed to understand how this is handled. </p> <p>The code from the net package is basically this:</p> <pre><code>// Read implements the Conn Read method. func (c *conn) Read(b []byte) (int, error) { if !c.ok() { return 0, syscall.EINVAL } n, err := c.fd.Read(b) if err != nil &amp;&amp; err != io.EOF { err = &amp;OpError{Op: &quot;read&quot;, Net: c.fd.net, Source: c.fd.laddr, Addr: c.fd.raddr, Err: err} } return n, err } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Interesting_Shine_38\"> /u/Interesting_Shine_38 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h87t2i/what_happens_if_netconnread_reads_more_bytes_than/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h87t2i/what_happens_if_netconnread_reads_more_bytes_than/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Linux Preps for Kunpeng ARM Server SoC With High Bandwidth Memory",
      "url": "https://linux.slashdot.org/story/24/12/06/1812208/linux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory?utm_source=rss1.0mainlinkanon&utm_medium=feed",
      "date": 1733510040,
      "author": "EditorDavid",
      "unread": true,
      "desc": "",
      "content": "An anonymous reader shared this report from Phoronix:\n\n\nNew Linux patches from Huawei engineers are preparing new driver support for controlling High Bandwidth Memory (HBM) with the ARM-based Kunpeng high performance SoC... \n\n[I]t would appear there is a new Kunpeng SoC coming that will feature integrated High Bandwidth Memory (HBM).Unless I missed something, this Kunpeng SoC with HBM memory hasn't been formally announced yet and I haven't been able to find any other references short of pointing to prior kernel patches working on this HBM integration... It will be interesting to see what comes of Huawei Kunpeng SoCs with HBM memory and ultimately how well they perform against other AArch64 server processors as well as the Intel Xeon and AMD EPYC competition.\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=+Linux+Preps+for+Kunpeng+ARM+Server+SoC+With+High+Bandwidth+Memory%3A+https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F06%2F1812208%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F06%2F1812208%2Flinux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://linux.slashdot.org/story/24/12/06/1812208/linux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "OpenAI Reinforcement Fine-Tuning Research Program",
      "url": "https://openai.com/form/rft-research-program/",
      "date": 1733510276,
      "author": "marban",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://openai.com/form/rft-research-program/\">https://openai.com/form/rft-research-program/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342697\">https://news.ycombinator.com/item?id=42342697</a></p>\n<p>Points: 157</p>\n<p># Comments: 38</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "<dialog>: The Dialog Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog",
      "date": 1733512147,
      "author": "htunnicliff",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343089\">https://news.ycombinator.com/item?id=42343089</a></p>\n<p>Points: 231</p>\n<p># Comments: 95</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Deep dive into finding RSS feeds",
      "url": "https://lighthouseapp.io/blog/deep-dive-finding-rss-feeds",
      "date": 1733512627,
      "author": "domysee",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://lighthouseapp.io/blog/deep-dive-finding-rss-feeds\">https://lighthouseapp.io/blog/deep-dive-finding-rss-feeds</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343182\">https://news.ycombinator.com/item?id=42343182</a></p>\n<p>Points: 104</p>\n<p># Comments: 39</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Arc Prize 2024 Winners and Technical Report",
      "url": "https://arcprize.org/2024-results",
      "date": 1733512819,
      "author": "alphabetting",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://arcprize.org/2024-results\">https://arcprize.org/2024-results</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343215\">https://news.ycombinator.com/item?id=42343215</a></p>\n<p>Points: 109</p>\n<p># Comments: 40</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "My snake game got to 57 bytes by just messing around and basically refactoring most of the code",
      "url": "https://www.reddit.com/r/programming/comments/1h89eyl/my_snake_game_got_to_57_bytes_by_just_messing/",
      "date": 1733513030,
      "author": "/u/Perfect-Highlight964",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>This byte reduction was different than the others.</p> <p>Usually, I have an idea in mind of how to reduce a byte and I try to manipulate the code to make it work.</p> <p>This time I was bored so I looked at the code again just because I wanted to remove the usage of the BP register because I thought &quot;it had potential&quot;, you can see the PR where I managed to do so without increasing the byte count <a href=\"https://github.com/donno2048/snake/pull/68\">here</a>, then after quite some time I realized a way to abuse this in such a way that would use another register (DX) to store some values without adding any bytes and thought it has some potential too because the DX initialization takes 3 bytes and could maybe be reduced somehow...</p> <p>I merged the PR as it made the game a little slower even though it didn&#39;t save any bytes because I couldn&#39;t think of a way to optimize the initialization of DX, but then I realized that the initialization of DX isn&#39;t the problem, it&#39;s the solution to another problem.</p> <p>The way I initialized AX up until now was with a <code>MOV</code> which is quite a waste to just set AX to 0, but I had to use a <code>MOV</code> for the <code>LDS</code> initialization, because the first byte of the <code>MOV</code> was 0xB8, but if I initialized DX there I would solve the problem and I would be able to set AX in less than 3 bytes.</p> <p>The problem is that <code>MOV DX,</code> won&#39;t have 0xB8 at the beginning so I have to use <code>MOV AX,</code>, but no problem, I can initialize AX to the value I want in DX and do a <code>XCHG</code>, but then I&#39;m left with just one byte to set AX to 0 which is impossible (and that was the reason I didn&#39;t commit that into the original PR). </p> <p>But, then I realized, we can set <code>DX</code> to 0 with just 1 byte so that after the <code>XCHG</code> AX will already contain 0.</p> <p>I planted a <code>CWD</code> right between the <code>MOV</code> and the <code>XCHG</code> so that DX will be set to the MSB of the wanted value in DX which is positive so the MSB is 0.</p> <p>I reverted the changes made from the first PR and merged the <a href=\"https://github.com/donno2048/snake/pull/69\">new one</a>.</p> <p>BTW, this time I couldn&#39;t just use the 0x0 dummy byte as that would set DX wrongly, so I had to use <code>LDS DI, [BX+SI+0x0]</code> which apparently can&#39;t be parsed correctly by nasm even with <code>-O0</code> because it always drops the 0x0, so I had to hardcode it.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Perfect-Highlight964\"> /u/Perfect-Highlight964 </a> <br/> <span><a href=\"https://github.com/donno2048/snake\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h89eyl/my_snake_game_got_to_57_bytes_by_just_messing/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What is the most cost effective place to use Kubernetes?",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h89gnl/what_is_the_most_cost_effective_place_to_use/",
      "date": 1733513151,
      "author": "/u/fenugurod",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve been using k8s for a few years as a developer on my day job. I&#39;m now working on a personal project that is becoming serious, and have paying customers. I&#39;m looking for suggestions regards to where should I host this solution that I&#39;m working on for myself. Kubernetes was my first thought because this is what I&#39;ve been used for some time on m day job, but that&#39;s it, I&#39;ve been using it, I don&#39;t need to manage anything, nor I have deep pockets to spend on expensive offerings.</p> <p>I&#39;m wondering what is the best place I can setup a K8s cluster cost effective wise. I&#39;m open to other deployment options as well. Right now It&#39;s just a single backend, monolith, and a Postgres instance. My access pattern is not spiky, and I don&#39;t need to auto scale the service like, ever, given it&#39;s built in Go and the access is still very low.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/fenugurod\"> /u/fenugurod </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h89gnl/what_is_the_most_cost_effective_place_to_use/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h89gnl/what_is_the_most_cost_effective_place_to_use/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "DSPy – Programming–not prompting–LMs",
      "url": "https://dspy.ai/",
      "date": 1733515189,
      "author": "ulrischa",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://dspy.ai/\">https://dspy.ai/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343692\">https://news.ycombinator.com/item?id=42343692</a></p>\n<p>Points: 118</p>\n<p># Comments: 22</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Does Your Code Pass the Turkey Test? (2008)",
      "url": "http://www.moserware.com/2008/02/does-your-code-pass-turkey-test.html",
      "date": 1733516335,
      "author": "hosteur",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"http://www.moserware.com/2008/02/does-your-code-pass-turkey-test.html\">http://www.moserware.com/2008/02/does-your-code-pass-turkey-test.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343920\">https://news.ycombinator.com/item?id=42343920</a></p>\n<p>Points: 92</p>\n<p># Comments: 69</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Lies I was told about collab editing, Part 1: Algorithms for offline editing",
      "url": "https://www.moment.dev/blog/lies-i-was-told-pt-1",
      "date": 1733516527,
      "author": "antics",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.moment.dev/blog/lies-i-was-told-pt-1\">https://www.moment.dev/blog/lies-i-was-told-pt-1</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343953\">https://news.ycombinator.com/item?id=42343953</a></p>\n<p>Points: 176</p>\n<p># Comments: 54</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "My second year without a job",
      "url": "https://shilin.ca/my-second-year-without-job/",
      "date": 1733516765,
      "author": "true_pk",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://shilin.ca/my-second-year-without-job/\">https://shilin.ca/my-second-year-without-job/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42344002\">https://news.ycombinator.com/item?id=42344002</a></p>\n<p>Points: 215</p>\n<p># Comments: 281</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Does Your Code Pass the Turkey Test?",
      "url": "https://www.reddit.com/r/programming/comments/1h8ccad/does_your_code_pass_the_turkey_test/",
      "date": 1733520750,
      "author": "/u/ketralnis",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"http://www.moserware.com/2008/02/does-your-code-pass-turkey-test.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8ccad/does_your_code_pass_the_turkey_test/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Typeconf: Manage Your Configs Like Code",
      "url": "https://www.reddit.com/r/programming/comments/1h8cjms/typeconf_manage_your_configs_like_code/",
      "date": 1733521286,
      "author": "/u/heraldev",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/heraldev\"> /u/heraldev </a> <br/> <span><a href=\"https://github.com/typeconf/typeconf\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8cjms/typeconf_manage_your_configs_like_code/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Best way to learn about Kubernetes and auto scalability with AWS",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h8d6ou/best_way_to_learn_about_kubernetes_and_auto/",
      "date": 1733522977,
      "author": "/u/JVPEs",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello guys! I&#39;m currently working on a new personal project which I&#39;m very excited for! Obviously I need to set it up online using Kubernetes with AWS, or other resources.</p> <p>For some of you that might&#39;ve cross the same path, what was the best way to learn these tools?</p> <p>Thank you so much for help!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/JVPEs\"> /u/JVPEs </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8d6ou/best_way_to_learn_about_kubernetes_and_auto/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8d6ou/best_way_to_learn_about_kubernetes_and_auto/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why can deriving Copy pessimize performance by 60%?",
      "url": "https://www.reddit.com/r/rust/comments/1h8dj64/why_can_deriving_copy_pessimize_performance_by_60/",
      "date": 1733523917,
      "author": "/u/jogru0",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Until now, my understanding was that <em>Copy</em> is just a marker trait for the compiler to allow use after move. Therefore, it influences what code is accepted as correct, but should not influence code generation. In particular, I thought it&#39;s always a good idea to derive <em>Copy</em> when possible.</p> <p>So imagine my surprise when I experimented with the following type:</p> <pre><code>#[derive(Clone)] enum IntOrBool { Int(i64), Bool(bool), } </code></pre> <p>On my machine (AMD Ryzen 5 3600), cloning a value of this type takes ~2.5ns. However, when I additionally derive <em>Copy,</em> that time goes up to ~4ns. That&#39;s 60% slower!</p> <p>Does anyone know what&#39;s going on here? The only explanation I can possibly think of is that the compiler does some ostensible optimizations only allowed due to <em>Copy</em> semantics, which unfortunately end up being pessimizations after all? (Indeed, when I disable optimizations, the effect goes away.) But that sounds rather odd and hand-wavy, so I would really love to understand that in detail.</p> <p>PS Some anticipatory clarifications:</p> <ul> <li><em>If the type implements Copy, why call .clone() instead of just copying?</em> I think both should be compiled to exactly the same thing, so it shouldn&#39;t matter. But just to make sure, I also measured it, and yep, I get the same slowed down performance when copying directly.</li> <li><em>Maybe these differences in measurement are a weird side effect of the artificial microbenchmark setup?</em> Certainly possible. Also, I&#39;m definitely not a pro with these types of benchmarks, so maybe I did something stupid and these values are not really measuring what I think they do. However, the reason I started looking into this and found this minimal example is that I came across this effect in a real-world setting: An language interpreter I wrote slowed down by about 10% <strong>end-to-end</strong> when I added <em>Copy</em> to a type where I initially forgot it. So there is definitely a real effect here.</li> </ul> <p>EDIT: Here is my benchmarking code (uses <code>criterion</code>):</p> <pre><code>use criterion::{criterion_group, criterion_main, Criterion}; use std::hint::black_box; fn criterion_benchmark(c: &amp;mut Criterion) { let copyable = Copyable::Bool(false); let not_copyable = NotCopyable::Bool(false); let mut group = c.benchmark_group(&quot;copy slowdown&quot;); group.bench_function(&quot;copy&quot;, |b| b.iter(|| black_box(&amp;copyable).clone())); group.bench_function(&quot;no copy&quot;, |b| b.iter(|| black_box(&amp;not_copyable).clone())); } criterion_group!(benches, criterion_benchmark); criterion_main!(benches); #[derive(Clone, Copy)] pub enum Copyable { Int(i64), Bool(bool), } #[derive(Clone)] pub enum NotCopyable { Int(i64), Bool(bool), } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jogru0\"> /u/jogru0 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h8dj64/why_can_deriving_copy_pessimize_performance_by_60/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h8dj64/why_can_deriving_copy_pessimize_performance_by_60/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Kubernetes Operator for Tunnels: frp Operator 🚀",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h8do7q/kubernetes_operator_for_tunnels_frp_operator/",
      "date": 1733524311,
      "author": "/u/niekberenschot",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone! If you’re struggling with exposing services (external load balancer) securely in Kubernetes but don’t have a static IP or can’t change firewall configurations, the frp Kubernetes Operator might be the solution. This operator automates the deployment of frp (Fast Reverse Proxy) clients and tunnels, removing the need for complex ingress setups and firewall changes.</p> <p>With support for protocols like TCP, UDP, HTTP, and HTTPS, it’s ideal for use cases such as home labs, self-hosted apps, or secure remote access. It also provides flexible, cost-effective exit servers and offers built-in encryption and compression for optimized performance.</p> <p>GitHub: <a href=\"https://github.com/Aureum-Cloud/frp-Operator\">https://github.com/Aureum-Cloud/frp-Operator</a> Helm: <a href=\"https://frp-operator.aureum.cloud\">https://frp-operator.aureum.cloud</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/niekberenschot\"> /u/niekberenschot </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8do7q/kubernetes_operator_for_tunnels_frp_operator/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8do7q/kubernetes_operator_for_tunnels_frp_operator/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "High-Performance Image Compression Project (Part 5 - Async Batch Processing)",
      "url": "https://www.reddit.com/r/golang/comments/1h8e6p7/highperformance_image_compression_project_part_5/",
      "date": 1733525755,
      "author": "/u/Investorator3000",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone!!</p> <p>This is my 5th post in this Subreddit on my journey to build a high-performance scalable image compression service (or the whole project now). </p> <p>After launching <a href=\"https://gofilecompress.com/\">gofilecompress.com</a>, where you can compress single PNG files (up to 5MB), I am starting to work on a much bigger project related to it: a <strong>batch image compression service</strong> that handles <strong>massive ZIP files (1–10GB+)</strong> asynchronously. The idea is that users or organizations upload their files, and the service processes them in the background. After a few minutes or hours (depending on size), they’ll get an email notification with a link to download the compressed results.</p> <p>This time, I’m aiming to build something <strong>high-performant and scalable</strong>, designed for multiple users and large-scale tasks. Here’s what I’ve got so far:</p> <h1>Architecture Overview</h1> <p>(you can view the architecture flow chart for better understanding of it visually <a href=\"https://drive.google.com/file/d/1U51iAi9XUPZFd7yxvq3CFnXHrWIG8zOx/view?usp=share_link\">Architecture Flow Chart</a>)</p> <p>The system is built on a <strong>microservices-based, event-driven architecture</strong>, where everything is containerized and deployed using <strong>AWS ECS</strong> for easy scaling. Here’s the key flow:</p> <ol> <li><strong>Microservices:</strong> Each major task (uploading, compression, notifications) is handled by a separate service to keep things modular and manageable.</li> <li><strong>Event-Driven Workflow:</strong> Jobs are queued and processed asynchronously using <strong>AWS SQS</strong>, which helps handle multiple user requests efficiently.</li> <li><strong>Components:</strong> File storage is managed with <strong>S3</strong>, job metadata is tracked in <strong>RDS</strong>, and the API is exposed via <strong>API Gateway</strong>.</li> </ol> <p>Also, if someone remembers my previous posts, you can notice that <strong>I have switched to AWS from GCP</strong>. The reason for that is aside from building an actual scalable product, but I also want to learn tools and skills that will allow me to consider many job opportunities as a young student who wants to become a great backend engineer. </p> <h1>How It Works</h1> <ol> <li><strong>Create a Compression Request/Job by User:</strong> <ul> <li>Users start by calling the <strong>API Gateway (the single point to reach my VPC)</strong> to create a compression job.</li> <li>The <strong>Upload Service</strong> stores the job in <strong>RDS</strong> (Amazon&#39;s SQL Service) with a status of &quot;INITIATED&quot; and returns <strong>pre-signed S3 URLs</strong> for uploading the ZIP file.</li> </ul></li> <li><strong>Upload the File:</strong> <ul> <li>Users upload their ZIP files in chunks (up to 5MB each) from Frontend directly to <strong>S3</strong> using the pre-signed URLs.</li> <li>Once the upload is done, <strong>S3</strong> triggers a notification, and the <strong>Upload Service</strong> updates the job status to &quot;UPLOADED&quot; in <strong>RDS</strong>. The job is then pushed to <strong>SQS</strong> for processing.</li> </ul></li> <li><strong>Compression Time:</strong> <ul> <li>The <strong>Compression Service</strong> picks up jobs from <strong>SQS</strong>, streams the ZIP file from <strong>S3</strong>, and processes each image in memory.</li> <li>Compressed images are added to a new ZIP file, which is then uploaded back to <strong>S3</strong>.</li> <li>The service updates the progress and marks the job as &quot;COMPLETED&quot; in <strong>RDS</strong>.</li> </ul></li> <li><strong>Notification and Download:</strong> <ul> <li>Once the job is done, the <strong>Notification Service</strong> sends an email to the user with a download link (a pre-signed URL for the compressed ZIP file stored in <strong>S3</strong>).</li> </ul></li> </ol> <h1>Why I Designed It This Way</h1> <p>I wanted to keep things modular, scalable, and easy to deploy, which is why I went with <strong>microservices and containers</strong> on <strong>AWS ECS</strong>. Using <strong>SQS</strong> for task queuing keeps everything asynchronous and smooth, even when there are multiple user requests. Storing files directly in <strong>S3</strong> ensures I don’t run into storage issues, and tracking progress in <strong>RDS</strong> makes it easier to debug and monitor.</p> <p>So, that&#39;s it! :) I would love to hear your thoughts on this project and any recommendations or best practices you think I should consider or add.</p> <p>To be honest, I also have a question: as I start managing this big project, do you have any suggestions for staying organized and ensuring everything is well-structured? I&#39;m using <strong>Notion</strong> right now to track tasks, but I&#39;m also considering tools like <strong>JIRA</strong> for a more detailed project management workflow. </p> <p>Thanks for checking this out! I’m super open to feedback as I fine-tune this!!!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Investorator3000\"> /u/Investorator3000 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h8e6p7/highperformance_image_compression_project_part_5/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h8e6p7/highperformance_image_compression_project_part_5/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Historically, 4NF explanations are needlessly confusing",
      "url": "https://www.reddit.com/r/programming/comments/1h8epvp/historically_4nf_explanations_are_needlessly/",
      "date": 1733527229,
      "author": "/u/ketralnis",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://minimalmodeling.substack.com/p/historically-4nf-explanations-are\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8epvp/historically_4nf_explanations_are_needlessly/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Buffered IO in Unix before V7 introduced stdio",
      "url": "https://www.reddit.com/r/programming/comments/1h8eqij/buffered_io_in_unix_before_v7_introduced_stdio/",
      "date": 1733527281,
      "author": "/u/ketralnis",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://utcc.utoronto.ca/~cks/space/blog/unix/BufferedIOBeforeStdio\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8eqij/buffered_io_in_unix_before_v7_introduced_stdio/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Bringing Amazon EKS Hybrid Nodes to life with Palette",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h8f4vy/bringing_amazon_eks_hybrid_nodes_to_life_with/",
      "date": 1733528454,
      "author": "/u/wineandcode",
      "unread": true,
      "desc": "",
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1h8f4vy/bringing_amazon_eks_hybrid_nodes_to_life_with/\"> <img src=\"https://external-preview.redd.it/noPP9JgOrNFAtpV7GaV9l9H8vU_ua-REiiI9976CEU0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=cc8a3fb7ec763c208065e25e22c86c2792e3b5b5\" alt=\"Bringing Amazon EKS Hybrid Nodes to life with Palette\" title=\"Bringing Amazon EKS Hybrid Nodes to life with Palette\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wineandcode\"> /u/wineandcode </a> <br/> <span><a href=\"https://itnext.io/bringing-amazon-eks-hybrid-nodes-to-life-with-palette-584734449503?source=friends_link&amp;sk=79b5957b0263c9f3cfdf799720c9f1a3\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8f4vy/bringing_amazon_eks_hybrid_nodes_to_life_with/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Scikit-learn utilities made with Rust.",
      "url": "https://www.youtube.com/watch?v=O6beIxzSZ5U",
      "date": 1733531894,
      "author": "probabl",
      "unread": true,
      "desc": "",
      "content": "Python can be slow, and Rust can make things go vroom! Or at least, that seems to be a general sentiment. In this livestream we will explore when and if it can make sense to add Rust to a toolchain. In particular we will explore speedups that might make sense for custom scikit-learn utilities. \n\nWebsite: https://probabl.ai/\nDiscord: https://discord.probabl.ai/\nLinkedIn: https://www.linkedin.com/company/probabl\nTwitter: https://x.com/probabl_ai\n\nWe also host a podcast called Sample Space, which you can find on your favourite podcast player. All the links can be found here:\nhttps://rss.com/podcasts/sample-space/\n\nIf you're keen to see more videos like this, you can follow us over at  @probabl_ai.",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/O6beIxzSZ5U?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Biggest shell programs",
      "url": "https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World",
      "date": 1733533151,
      "author": "todsacerdoti",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World\">https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42346274\">https://news.ycombinator.com/item?id=42346274</a></p>\n<p>Points: 89</p>\n<p># Comments: 35</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Structured Outputs with Ollama",
      "url": "https://ollama.com/blog/structured-outputs",
      "date": 1733533952,
      "author": "Patrick_Devine",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://ollama.com/blog/structured-outputs\">https://ollama.com/blog/structured-outputs</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42346344\">https://news.ycombinator.com/item?id=42346344</a></p>\n<p>Points: 158</p>\n<p># Comments: 34</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "RollerCoaster Tycoon was the last of its kind [video]",
      "url": "https://www.youtube.com/watch?v=0JouTsMQsEA",
      "date": 1733535139,
      "author": "zdw",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.youtube.com/watch?v=0JouTsMQsEA\">https://www.youtube.com/watch?v=0JouTsMQsEA</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42346463\">https://news.ycombinator.com/item?id=42346463</a></p>\n<p>Points: 162</p>\n<p># Comments: 45</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    }
  ]
}