{"id":"KZgg6v3y1EHngSu15w9ddbD2SchD7Q","title":"Dev News - Last 2 days","displayTitle":"Dev News - Last 2 days","url":"","feedLink":"","items":[{"title":"Show HN: Prompt Engine – Auto pick LLMs based on your prompts","url":"https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine","date":1733489148,"author":"yoeven","unread":true,"desc":"","content":"\n<p>Nowadays, a common AI tech stack has hundreds of different prompts running across different LLMs.<p>Three key problems:<p>- Choices, picking from 100s of LLMs the best LLM for that 1 prompt is gonna be challenging, you're probably not picking the most optimized LLM for a prompt you wrote.<p>- Scaling/Upgrading, similar to choices but you want to keep consistency of your output even when models depreciate or configurations change.<p>- Prompt management is scary, if something works, you'll never want to touch it but you should be able to without fear of everything breaking.<p>So we launched Prompt Engine which automatically runs your prompts for you on the best LLM every single time with all the tools like internet access. You can also store prompts for reusability and caching which increases performance on every run.<p>How it works?<p>tldr, we built a really small model that is trained on datasets comparing 100s of LLMs that can automatically pick a model based on your prompt.<p>Here's an article explaining the details: <a href=\"https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine\" rel=\"nofollow\">https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-m...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339302\">https://news.ycombinator.com/item?id=42339302</a></p>\n<p>Points: 91</p>\n<p># Comments: 16</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Romanian court annuls result of presidential election first round","url":"https://www.bbc.com/news/articles/cn4x2epppego","date":1733493349,"author":"vinni2","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.bbc.com/news/articles/cn4x2epppego\">https://www.bbc.com/news/articles/cn4x2epppego</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339819\">https://news.ycombinator.com/item?id=42339819</a></p>\n<p>Points: 513</p>\n<p># Comments: 1056</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: BunkerWeb – The Open-Source Web Application Firewall (WAF)","url":"https://github.com/bunkerity/bunkerweb","date":1733493608,"author":"bnkty","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/bunkerity/bunkerweb\">https://github.com/bunkerity/bunkerweb</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339856\">https://news.ycombinator.com/item?id=42339856</a></p>\n<p>Points: 117</p>\n<p># Comments: 29</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Mozilla Announces 'JavaScriptmas' - Daily Coding Challenges with a Chance at Prizes","url":"https://tech.slashdot.org/story/24/12/04/0138255/mozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733499240,"author":"EditorDavid","unread":true,"desc":"","content":"Mozilla's developer blog is announcing \"JavaScriptmas\".\n\n [F]rom December 1st to December 24th, we will release a fun, daily coding challenge for you to solve on [code-learning platform] Scrimba. Each challenge comes with an introductory screencast called \"scrim\", some starter code, and then it's your turn to fill in the gaps. \n\nJavaScriptmas is about coding, learning, and the chance to win exciting prizes. Two lucky coders will be chosen as winners at the end of JavaScriptmas, and each will win a MacBook Air M3, swag from MDN and Scrimba, and a lifetime Scrimba Pro membership (worth ~$200 per year). The Scrimba membership will give you access to all courses, including the Frontend Developer Career Path based on the MDN curriculum. \nMost of the challenges will evolve around JavaScript algorithms. You will also practice subjects like DOM manipulation, UI design, CSS, accessibility, and even a bit of cyber security. The challenges are a collaborative effort from Scrimba teachers, mentors, and MDN content writers, all with the goal of turning you into a more well-rounded web developer. \nWinners will be chosen randomly from everyone who submits correct solutions. We want JavaScriptmas to be accessible for both beginners and experienced developers alike. That said, the more challenges you solve, the better your chances of winning! To maximize your chances, try to solve all 24 challenges and submit them as both regular entries and social entries. You don't have to submit your solutions on the same day they're published &mdash; the deadline for any submission is midnight UTC on Christmas Eve.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Mozilla+Announces+'JavaScriptmas'+-+Daily+Coding+Challenges+with+a+Chance+at+Prizes%3A+https%3A%2F%2Ftech.slashdot.org%2Fstory%2F24%2F12%2F04%2F0138255%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Ftech.slashdot.org%2Fstory%2F24%2F12%2F04%2F0138255%2Fmozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://tech.slashdot.org/story/24/12/04/0138255/mozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Real-Time YOLO Object Detection in Elixir: Fast, Simple, Extensible","url":"https://github.com/poeticoding/yolo_elixir","date":1733506794,"author":"alvises","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/poeticoding/yolo_elixir\">https://github.com/poeticoding/yolo_elixir</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342038\">https://news.ycombinator.com/item?id=42342038</a></p>\n<p>Points: 88</p>\n<p># Comments: 11</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Tokyo is set to introduce a four-day workweek for government employees","url":"https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html","date":1733507660,"author":"amichail","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html\">https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342203\">https://news.ycombinator.com/item?id=42342203</a></p>\n<p>Points: 636</p>\n<p># Comments: 327</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The largest open-source dataset of car designs, including their aerodynamics","url":"https://news.mit.edu/2024/design-future-car-with-8000-design-options-1205","date":1733508455,"author":"toss1","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://news.mit.edu/2024/design-future-car-with-8000-design-options-1205\">https://news.mit.edu/2024/design-future-car-with-8000-design-options-1205</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342346\">https://news.ycombinator.com/item?id=42342346</a></p>\n<p>Points: 257</p>\n<p># Comments: 88</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Every V4 UUID","url":"https://everyuuid.com/","date":1733508706,"author":"LorenDB","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://everyuuid.com/\">https://everyuuid.com/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342382\">https://news.ycombinator.com/item?id=42342382</a></p>\n<p>Points: 1334</p>\n<p># Comments: 351</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Linux Preps for Kunpeng ARM Server SoC With High Bandwidth Memory","url":"https://linux.slashdot.org/story/24/12/06/1812208/linux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733510040,"author":"EditorDavid","unread":true,"desc":"","content":"An anonymous reader shared this report from Phoronix:\n\n\nNew Linux patches from Huawei engineers are preparing new driver support for controlling High Bandwidth Memory (HBM) with the ARM-based Kunpeng high performance SoC... \n\n[I]t would appear there is a new Kunpeng SoC coming that will feature integrated High Bandwidth Memory (HBM).Unless I missed something, this Kunpeng SoC with HBM memory hasn't been formally announced yet and I haven't been able to find any other references short of pointing to prior kernel patches working on this HBM integration... It will be interesting to see what comes of Huawei Kunpeng SoCs with HBM memory and ultimately how well they perform against other AArch64 server processors as well as the Intel Xeon and AMD EPYC competition.\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=+Linux+Preps+for+Kunpeng+ARM+Server+SoC+With+High+Bandwidth+Memory%3A+https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F06%2F1812208%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F06%2F1812208%2Flinux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://linux.slashdot.org/story/24/12/06/1812208/linux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"OpenAI Reinforcement Fine-Tuning Research Program","url":"https://openai.com/form/rft-research-program/","date":1733510276,"author":"marban","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://openai.com/form/rft-research-program/\">https://openai.com/form/rft-research-program/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342697\">https://news.ycombinator.com/item?id=42342697</a></p>\n<p>Points: 218</p>\n<p># Comments: 53</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Lies I was told about collab editing, Part 1: Algorithms for offline editing","url":"https://www.moment.dev/blog/lies-i-was-told-pt-1","date":1733516527,"author":"antics","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.moment.dev/blog/lies-i-was-told-pt-1\">https://www.moment.dev/blog/lies-i-was-told-pt-1</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42343953\">https://news.ycombinator.com/item?id=42343953</a></p>\n<p>Points: 311</p>\n<p># Comments: 105</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"My second year without a job","url":"https://shilin.ca/my-second-year-without-job/","date":1733516765,"author":"true_pk","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://shilin.ca/my-second-year-without-job/\">https://shilin.ca/my-second-year-without-job/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42344002\">https://news.ycombinator.com/item?id=42344002</a></p>\n<p>Points: 568</p>\n<p># Comments: 805</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Scikit-learn utilities made with Rust.","url":"https://www.youtube.com/watch?v=O6beIxzSZ5U","date":1733531894,"author":"probabl","unread":true,"desc":"","content":"Python can be slow, and Rust can make things go vroom! Or at least, that seems to be a general sentiment. In this livestream we will explore when and if it can make sense to add Rust to a toolchain. In particular we will explore speedups that might make sense for custom scikit-learn utilities. \n\nWebsite: https://probabl.ai/\nDiscord: https://discord.probabl.ai/\nLinkedIn: https://www.linkedin.com/company/probabl\nTwitter: https://x.com/probabl_ai\n\nWe also host a podcast called Sample Space, which you can find on your favourite podcast player. All the links can be found here:\nhttps://rss.com/podcasts/sample-space/\n\nIf you're keen to see more videos like this, you can follow us over at  @probabl_ai.","flags":null,"enclosureUrl":"https://www.youtube.com/v/O6beIxzSZ5U?version=3","enclosureMime":""},{"title":"Biggest shell programs","url":"https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World","date":1733533151,"author":"todsacerdoti","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World\">https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42346274\">https://news.ycombinator.com/item?id=42346274</a></p>\n<p>Points: 225</p>\n<p># Comments: 111</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Can life emerge around a white dwarf?","url":"https://www.centauri-dreams.org/2024/12/06/can-life-emerge-around-a-white-dwarf/","date":1733558527,"author":"JPLeRouzic","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.centauri-dreams.org/2024/12/06/can-life-emerge-around-a-white-dwarf/\">https://www.centauri-dreams.org/2024/12/06/can-life-emerge-around-a-white-dwarf/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42348085\">https://news.ycombinator.com/item?id=42348085</a></p>\n<p>Points: 131</p>\n<p># Comments: 86</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Countless.dev – A website to compare every AI model: LLMs, TTSs, STTs","url":"https://countless.dev/","date":1733564579,"author":"ahmetd","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://countless.dev/\">https://countless.dev/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42348513\">https://news.ycombinator.com/item?id=42348513</a></p>\n<p>Points: 296</p>\n<p># Comments: 69</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Mpc-Qt (Media Player Classic Qute Theater) just released it's major v24.12 update","url":"https://www.reddit.com/r/linux/comments/1h8qawz/mpcqt_media_player_classic_qute_theater_just/","date":1733569805,"author":"/u/ahjolinna","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ahjolinna\"> /u/ahjolinna </a> <br/> <span><a href=\"https://github.com/mpc-qt/mpc-qt/releases/tag/v24.12\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h8qawz/mpcqt_media_player_classic_qute_theater_just/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"ArgoCD alternative for many deployments","url":"https://www.reddit.com/r/kubernetes/comments/1h8sqya/argocd_alternative_for_many_deployments/","date":1733578954,"author":"/u/Ultimate_Mugwump","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Tech Stack: GKE clusters with around 3k deployments all packaged as helm charts, managed by a single argocd instance </p> <p>I work with several large clusters, night now all managed by a single ArgoCD instance - we are working on splitting it up to deploy an argocd instance on each cluster, but the lions share of our deployments are all in the same cluster, which slows argo a lot, and often causes weird behavior e.g. it will completely an application it was supposed to add, usually gets fixed by just kicking the argocd applicationset controller. </p> <p>we’ve taken some other measures to improve performance, e.g. querying our helm charts repo in GCP to pull in changes instead of pulling them from github, since the artifacts registry generally responds much more quickly and more efficiently than github, but the problem ultimately comes down to the fact that we have almost 3k deployments that it is managing, and the documented limit for argo is 500.</p> <p>Does anyone know of another tool that could handle 1000s of deployments better than Argo? i’ve heard Kustomize is a better solution than helm for very large environments like this but i’m not sure how, why, or even if it’s true at all honestly </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ultimate_Mugwump\"> /u/Ultimate_Mugwump </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8sqya/argocd_alternative_for_many_deployments/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8sqya/argocd_alternative_for_many_deployments/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Weak Pointers in Go 1.24","url":"https://www.reddit.com/r/golang/comments/1h8svee/weak_pointers_in_go_124/","date":1733579364,"author":"/u/callcifer","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1h8svee/weak_pointers_in_go_124/\"> <img src=\"https://external-preview.redd.it/SDX5zXKJRN1gxOESbz8_oI7ccQ0_NT6U2V6SCY3E780.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=47fe7188474d79d238a167044ac1063e9e41b8a3\" alt=\"Weak Pointers in Go 1.24\" title=\"Weak Pointers in Go 1.24\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/callcifer\"> /u/callcifer </a> <br/> <span><a href=\"https://victoriametrics.com/blog/go-weak-pointer/index.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h8svee/weak_pointers_in_go_124/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"GPU powered low MD5 hash finder","url":"https://www.reddit.com/r/programming/comments/1h8swoj/gpu_powered_low_md5_hash_finder/","date":1733579480,"author":"/u/NumbersAreNotPro","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NumbersAreNotPro\"> /u/NumbersAreNotPro </a> <br/> <span><a href=\"https://github.com/EnesO226/MD5GPU/blob/main/kernel.cu\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8swoj/gpu_powered_low_md5_hash_finder/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Is JSON hard in go","url":"https://www.reddit.com/r/golang/comments/1h8tpwi/is_json_hard_in_go/","date":1733582049,"author":"/u/Fantastic-Length5962","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I might just be an idiot but getting even simple nested JSON to work in go has been a nightmare.</p> <p>Would someone be able to point me to some guide or documentation, I haven&#39;t been able to find any thats clear. I want to know how I need to write nested structs and then how I need to structure a hard coded JSON variable. I&#39;ve tried every permutation I can think of and always get weird errors, any help would be appreciated.</p> <p>Also as a side note, is it easier in go to just use maps instead of structs for JSON?</p> <p>Example of what I&#39;m trying to do <a href=\"https://go.dev/play/p/8rw5m5rqAFX\">https://go.dev/play/p/8rw5m5rqAFX</a> (obviously it doesnt work because I dont know what I&#39;m doing)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fantastic-Length5962\"> /u/Fantastic-Length5962 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h8tpwi/is_json_hard_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h8tpwi/is_json_hard_in_go/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How Transaction Isolation Provides Data Integrity in Databases","url":"https://www.reddit.com/r/programming/comments/1h8u1dt/how_transaction_isolation_provides_data_integrity/","date":1733583035,"author":"/u/scalablethread","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/scalablethread\"> /u/scalablethread </a> <br/> <span><a href=\"https://newsletter.scalablethread.com/p/how-transaction-isolation-provides\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8u1dt/how_transaction_isolation_provides_data_integrity/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"stropt - statistics and optimization for C structs, written in go","url":"https://www.reddit.com/r/golang/comments/1h8u3ep/stropt_statistics_and_optimization_for_c_structs/","date":1733583204,"author":"/u/Abathargh","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi everyone!</p> <p>I&#39;m an embedded sw dev and I&#39;ve been writing a small tool in go that collects statistics and suggests layout optimizations for C aggregate types/structs: <code>stropt</code>.</p> <p><a href=\"https://github.com/Abathargh/stropt\">on github @Abathargh/stropt</a></p> <p>This is something that came up a lot of times in my personal sw dev journey and I wanted to have a tool that allowed me to quickly get this information without having to use a compiler with a custom file each time.</p> <p>I love using go for this kind of stuff (CLI tools, data processing), and the fact that we have great projects like the ultra-nice modernc.org/cc compiler frontend, and the wonderful lipgloss library from charm is a huge plus!</p> <p>An example usage for <code>stropt</code> would this: let&#39;s say you have a C struct:</p> <p>```c struct inner { char flags; int dlen; };</p> <p>struct test { const char * str; short stats; struct inner meta; short inlen; int len; }; ```</p> <p>and you keep this in a file named <code>opt.c</code>; then you can call stropt on this file like this:</p> <p><code>bash stropt -optimize -verbose -file tests/opt.c &quot;struct test&quot; </code></p> <p>And get the information (and optimization suggestions) in a nicely formatted fashion:</p> <p><a href=\"https://raw.githubusercontent.com/Abathargh/stropt/refs/heads/master/opt.png\">https://raw.githubusercontent.com/Abathargh/stropt/refs/heads/master/opt.png</a></p> <p>Hope you like it!</p> <p>Edit: forgot the link to the repo!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Abathargh\"> /u/Abathargh </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h8u3ep/stropt_statistics_and_optimization_for_c_structs/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h8u3ep/stropt_statistics_and_optimization_for_c_structs/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Help Optimizing Memory Usage in Go Decompression Implementation","url":"https://www.reddit.com/r/golang/comments/1h8udtb/help_optimizing_memory_usage_in_go_decompression/","date":1733584037,"author":"/u/rasparac","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I&#39;m working on a Go project that involves a listener for Google Cloud Storage (GCS). The listener periodically checks a bucket, lists the files, and processes them one by one. As part of the processing, files are decompressed if they are in formats like <code>gzip</code>, <code>bzip2</code>, or <code>zip</code>.While profiling my implementation, I noticed significant memory usage, particularly during the <code>gzip.Reader.Reset</code> and <code>bufio.NewReaderSize</code> stages. Here are some details:</p> <ol> <li>I&#39;m using <code>gzip.Reader</code> with a <code>sync.Pool</code> to reduce allocations. However, <code>gzip.Reader.Reset</code> alone is consuming over 1GB of memory in my benchmarks.</li> <li><code>bufio.NewReaderSize</code> also appears to allocate a lot of memory (over 11GB in some profiles), which seems excessive for a 64KB buffer.</li> <li>I&#39;m currently using <code>io.ReadAll</code> to read decompressed data, which I suspect is contributing to the memory overhead since it reads everything into memory.</li> </ol> <ul> <li>How can I optimize memory usage for decompressing <code>gzip</code> files in Go while maintaining good performance?</li> <li>Are there alternatives to <code>gzip.Reader</code> that might help reduce memory overhead?</li> <li>Could my use of <code>bufio.NewReaderSize</code> or the way I&#39;m pooling readers be causing this unexpected memory usage?</li> </ul> <p>Any advice or insights would be greatly appreciated!<br/> Thanks in advance for your help!</p> <p>Implementation:</p> <p>This is the command i used for running benchmark:</p> <pre><code>go test -bench=. -benchmem -cpuprofile cpu_single.prof -memprofile mem_single.prof -benchtime=3s </code></pre> <p>Results:</p> <pre><code>File: decompress.test Type: alloc_space Time: Dec 7, 2024 at 3:58pm (CET) Entering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options) (pprof) top 10 Showing nodes accounting for 12.54GB, 99.48% of 12.61GB total Dropped 34 nodes (cum &lt;= 0.06GB) Showing top 10 nodes out of 13 flat flat% sum% cum cum% 10.87GB 86.23% 86.23% 10.87GB 86.23% bufio.NewReaderSize (inline) 1.33GB 10.55% 96.78% 1.33GB 10.55% io.ReadAll 0.13GB 1.06% 97.84% 0.13GB 1.06% bytes.NewReader 0.11GB 0.9% 98.75% 0.11GB 0.9% compress/flate.(*dictDecoder).init (inline) 0.06GB 0.46% 99.21% 12.41GB 98.47% github.com/nstrlabs/GoogleCloudStorageListener/v0_0_1/internal/decompress.Decompress 0.02GB 0.14% 99.35% 0.13GB 1.04% compress/flate.NewReader 0.02GB 0.13% 99.48% 11.02GB 87.42% github.com/xxx/GoogleCloudStorageListener/v0_0_1/internal/decompress.Reader 0 0% 99.48% 10.87GB 86.23% bufio.NewReader (inline) 0 0% 99.48% 11GB 87.27% compress/gzip.(*Reader).Reset 0 0% 99.48% 0.13GB 1.04% compress/gzip.(*Reader).readHeader </code></pre> <p>When i run list on</p> <pre><code>github.com/xxxx/GoogleCloudStorageListener/v0_0_1/internal/decompress.Reader </code></pre> <p>i get this</p> <pre><code>17MB 11.02GB (flat, cum) 87.42% of Total . . 105:func Reader(ext string, r io.ReadCloser) (io.ReadCloser, error) { . . 106: switch ext { . . 107: case &quot;.gz&quot;: . 2.50MB 108: gzReader := gzipReaderPool.Get().(*gzip.Reader) . . 109: . 11GB 110: if err := gzReader.Reset(r); err != nil { . . 111: gzReader.Close() . . 112: gzipReaderPool.Put(gzReader) . . 113: return nil, fmt.Errorf(&quot;failed to reset gzip reader: %w&quot;, err) . . 114: } . . 115: 17MB 17MB 116: return &amp;gzipWrap{ . . 117: gzip: gzReader, . . 118: }, nil . . 119: case &quot;.bz2&quot;: . . 120: return io.NopCloser(bzip2.NewReader(r)), nil . . 121: default: </code></pre> <p>reader io.ReadCloser parameter in the Decompress function is from google cloud storage object reader</p> <pre><code>func (gs *gcpStorage) ObjectReader( ctx context.Context, name string, ) (io.ReadCloser, error) { return gs.bucket.Object(name).NewReader(ctx) } </code></pre> <p>Implementation:</p> <pre><code>func Decompress( reader io.ReadCloser, fileExtension, contentType string, ) ([][]byte, error) { // Handle ZIP files if IsZip(fileExtension, contentType) { return handleZip(reader) } // Handle other supported compressions compressReader, err := Reader(fileExtension, reader) if err != nil { return nil, fmt.Errorf(&quot;failed to create decompression reader: %w&quot;, err) } defer compressReader.Close() data, err := io.ReadAll(compressReader) if err != nil { return nil, fmt.Errorf(&quot;failed to read compressed data: %w&quot;, err) } return [][]byte{data}, nil } func Reader(ext string, r io.ReadCloser) (io.ReadCloser, error) { switch ext { case &quot;.gz&quot;: gzReader := gzipReaderPool.Get().(*gzip.Reader) reader := bufio.NewReader(r) if err := gzReader.Reset(reader); err != nil { gzipReaderPool.Put(gzReader) return nil, fmt.Errorf(&quot;failed to reset gzip reader: %w&quot;, err) } return &amp;gzipWrap{ gzip: gzReader, }, nil case &quot;.bz2&quot;: return io.NopCloser(bzip2.NewReader(r)), nil default: return nil, fmt.Errorf(&quot;unsupported compression type: %s&quot;, ext) } } </code></pre> <p>Here is my benchmark test:</p> <pre><code>var data [][]byte func BenchmarkDecompress(b *testing.B) { // Generate gzip data once b.ReportAllocs() // Track memory allocations gzipData, err := generateGzipData([]byte(&quot;content&quot;)) if err != nil { b.Fatalf(&quot;failed to generate gzip data: %v&quot;, err) } var d [][]byte for i := 0; i &lt; b.N; i++ { b.StopTimer() reader := io.NopCloser(bytes.NewReader(gzipData)) // Create new reader each time b.StartTimer() d, err = Decompress(reader, &quot;.gz&quot;, &quot;application/gzip&quot;) if err != nil { b.Fatalf(&quot;failed to decompress: %v&quot;, err) } reader.Close() } data = d } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rasparac\"> /u/rasparac </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h8udtb/help_optimizing_memory_usage_in_go_decompression/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h8udtb/help_optimizing_memory_usage_in_go_decompression/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: App to discover job listings directly from company websites","url":"https://www.unlistedjobs.com/","date":1733585014,"author":"Jabbs","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.unlistedjobs.com/\">https://www.unlistedjobs.com/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42350351\">https://news.ycombinator.com/item?id=42350351</a></p>\n<p>Points: 64</p>\n<p># Comments: 51</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Boundary Check vs Try Catch - Performance Comparison","url":"https://www.reddit.com/r/programming/comments/1h8utf5/boundary_check_vs_try_catch_performance_comparison/","date":1733585298,"author":"/u/theapache64","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/theapache64\"> /u/theapache64 </a> <br/> <span><a href=\"https://theapache64.github.io/posts/boundary-check-vs-try-catch/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8utf5/boundary_check_vs_try_catch_performance_comparison/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Historically, 4NF explanations are needlessly confusing","url":"https://minimalmodeling.substack.com/p/historically-4nf-explanations-are","date":1733585802,"author":"thunderbong","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://minimalmodeling.substack.com/p/historically-4nf-explanations-are\">https://minimalmodeling.substack.com/p/historically-4nf-explanations-are</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42350425\">https://news.ycombinator.com/item?id=42350425</a></p>\n<p>Points: 86</p>\n<p># Comments: 30</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"We fixed our documentation with the Diátaxis framework","url":"https://www.reddit.com/r/programming/comments/1h8vfjd/we_fixed_our_documentation_with_the_di%C3%A1taxis/","date":1733587032,"author":"/u/accoinstereo","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/accoinstereo\"> /u/accoinstereo </a> <br/> <span><a href=\"https://blog.sequinstream.com/we-fixed-our-documentation-with-the-diataxis-framework/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h8vfjd/we_fixed_our_documentation_with_the_diátaxis/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Kubernetes The Hard Way Made Easy: A Vagrantfile for macOS ARM Users.","url":"https://www.reddit.com/r/kubernetes/comments/1h8vkhe/kubernetes_the_hard_way_made_easy_a_vagrantfile/","date":1733587395,"author":"/u/azalio","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1h8vkhe/kubernetes_the_hard_way_made_easy_a_vagrantfile/\"> <img src=\"https://external-preview.redd.it/9US5nHmwd7SW76d7MsOZSj_QrDPpzC3jPMXx-vUzq0o.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=40e867eca9eaedf0464d1180c63b0df3a4d690b2\" alt=\"Kubernetes The Hard Way Made Easy: A Vagrantfile for macOS ARM Users.\" title=\"Kubernetes The Hard Way Made Easy: A Vagrantfile for macOS ARM Users.\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Greetings, Kubernetes community!</p> <p><a href=\"https://preview.redd.it/bs0sesr69g5e1.jpg?width=1400&amp;format=pjpg&amp;auto=webp&amp;s=361a510885102f92cd58356baabbba4f392c2af0\">https://preview.redd.it/bs0sesr69g5e1.jpg?width=1400&amp;format=pjpg&amp;auto=webp&amp;s=361a510885102f92cd58356baabbba4f392c2af0</a></p> <p>Recently, I published an article on Medium where I share a Vagrantfile that simplifies the setup process of Kubernetes The Hard Way for macOS users with ARM architecture.</p> <p><a href=\"https://medium.com/@azalio_16174/kubernetes-the-hard-way-vagrant-edition-for-mac-arm-9137aa9c3fcb\">Read the article here.</a></p> <p>This Vagrantfile provides:</p> <p>- Optimized environment setup: Easily launch virtual machines for Kubernetes The Hard Way on macOS ARM.</p> <p>- Simplified configuration: Pre-configured settings reduce manual setup complexity.</p> <p>- Compatibility: Ensures smooth operation on Apple Silicon, solving common setup issues.</p> <p>- Quick start: Get your environment up and running quickly, allowing you to focus on Kubernetes learning.</p> <p>My motivation for creating this:</p> <p>Setting up a Kubernetes environment can be a complex process, especially on ARM-based Mac systems. My aim was to create a Vagrantfile that would automate and simplify the setup process, making it easier for developers and enthusiasts to learn Kubernetes.</p> <p>I&#39;d love to hear your thoughts and feedback on this setup, as well as any questions you may have. Let&#39;s work together to make learning Kubernetes more efficient!</p> <p>Have a great day! 🚀</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/azalio\"> /u/azalio </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8vkhe/kubernetes_the_hard_way_made_easy_a_vagrantfile/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h8vkhe/kubernetes_the_hard_way_made_easy_a_vagrantfile/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Sam Altman's new $200 ChatGPT has a big Elon problem...","url":"https://www.youtube.com/watch?v=Sf4WqHBCYSY","date":1733589931,"author":"Fireship","unread":true,"desc":"","content":"Try Brilliant free for 30 days https://brilliant.org/fireship You’ll also get 20% off an annual premium subscription.\n\nOpenAI just released a new $200/m ChatGPT plan for power users. Let's take a look at the o1 pro model and analyze it in the context with Sam Altman's ongoing feud with Elon Musk.  \n\n#ai #elonmusk #thecodereport \n\n💬 Chat with Me on Discord\n\nhttps://discord.gg/fireship\n\n🔗 Resources\n\nChatGPT Pro https://openai.com/index/introducing-chatgpt-pro/\nOpenAI o1 First Look https://youtu.be/6xlPJiNpCVw\nElon Musk's Grok AI https://youtu.be/CgruI1RjH_c\n\n🔥 Get More Content - Upgrade to PRO\n\nUpgrade at https://fireship.io/pro\nUse code YT25 for 25% off PRO access \n\n🎨 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n🔖 Topics Covered\n\n- Sam Altman vs Elon Musk Explained\n- Is ChatGPT pro worth it?\n- How will OpenAI make money?\n- Elon Musk lawsuit against OpenAI\n- How does OpenAI o1 pro work?","flags":null,"enclosureUrl":"https://www.youtube.com/v/Sf4WqHBCYSY?version=3","enclosureMime":""},{"title":"How to refine traits by refining typedef properly in rust?","url":"https://www.reddit.com/r/rust/comments/1h8wkao/how_to_refine_traits_by_refining_typedef_properly/","date":1733590143,"author":"/u/RishabhRD","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I recently faced a problem while refining traits in rust. Let me explain my situation to you:</p> <p>Lets start with a some basic traits:</p> <pre><code>pub trait SemiRegular: Eq {} pub trait Regular: SemiRegular + Clone {} </code></pre> <p>Here clearly Regular is SemiRegular with some additional capabilities.</p> <p>Now, let&#39;s say I want to use this trait to somehow define Collection:</p> <pre><code>trait Collection { type Iterator: SemiRegular; } trait RegularCollection: Collection where Self::Iterator: Regular, {} </code></pre> <p>Here we see RegularCollection just refines Collection with refining the constraints on Iterator typedef.</p> <p>Now, if I write any function on RegularCollection like this:</p> <pre><code>fn f&lt;C&gt;(arr: &amp;C) where C: RegularCollection, {} </code></pre> <p>compiler complains that, I need to explicitly mention C::Iterator: Regular. However, that should be implicit right? I mean that is the definition of RegularCollection itself. And this is leading to very verbose code like this:</p> <pre><code>fn f&lt;C&gt;(arr: &amp;C) where C: RegularCollection, C::Iterator: Regular, { } </code></pre> <p>(Well, this doesn&#39;t seem verbose here... consider you need to write C::Iterator: Regular all the times you use RegularCollection, how it would feel).</p> <p>Is there anyway, I can actually write it properly without mentioning C::iterator: Regular all the time? Or is my way to define RegularCollection itself is flawed? I don&#39;t know how to achieve it in idiomatic rust way because I am very very new to rust.</p> <p>Thank You </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/RishabhRD\"> /u/RishabhRD </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h8wkao/how_to_refine_traits_by_refining_typedef_properly/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h8wkao/how_to_refine_traits_by_refining_typedef_properly/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Just: Just a Command Runner","url":"https://just.systems/","date":1733591492,"author":"thunderbong","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://just.systems/\">https://just.systems/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42351101\">https://news.ycombinator.com/item?id=42351101</a></p>\n<p>Points: 478</p>\n<p># Comments: 278</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Amazon Offers $100M in Cloud-Computing Credits for Education Projects Like 'AI Teaching Assistant'","url":"https://news.slashdot.org/story/24/12/07/1736233/amazon-offers-100m-in-cloud-computing-credits-for-education-projects-like-ai-teaching-assistant?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733593140,"author":"EditorDavid","unread":true,"desc":"","content":"This week AWS pledged up to $100 million in cloud-computing credits for educational organizations over the next five years, to help them build \"technology-based learning experiences\" on AWS, including:\n AI assistants coding curriculums\n- connectivity tools student learning platforms mobile apps chatbots\n\nOne example shared by Amazon: The nonprofit Code.org will use AWS's cloud credits to scale their AI teaching assistant that \"has already helped teachers reduce the time they spend assessing students' coding projects by up to 50%.\" (Amazon's blog post notes that \"Improved efficiency means teachers have more time to work on personalized lesson plans and coach students\" &mdash; and that Code.org's assistant uses an AWS service for building AI tools...) \n\n$100 million sounds pretty generous. But long-time Slashdot reader theodp notes the application for the cloud credits limits education organization to $100,000 in credits (though \"your organization may be able to apply for a credits expansion\" if needed). Do these figures suggest Amazon expects less than 1,000 organizations to apply for free cloud-computing over the next five years? ($100,000,000/$100,000 = 1,000) \n\ntheodp also spotted a GitHub comment from a Code.org software engineer comparing accuracy for its teaching assistant after a switch from GPT-4 Turbo to Claude. Both before and after the switch, the teaching assistant averaged an accuracy rate of 77%, the comment notes. \n\nI guess that 77% accuracy rate is what Amazon is calling \"improved efficiency\" that \"means teachers have more time to work on personalized lesson plans and coach students.\" (Maybe you're never to young to learn that AI makes mistakes?)<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Amazon+Offers+%24100M+in+Cloud-Computing+Credits+for+Education+Projects+Like+'AI+Teaching+Assistant'%3A+https%3A%2F%2Fnews.slashdot.org%2Fstory%2F24%2F12%2F07%2F1736233%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fnews.slashdot.org%2Fstory%2F24%2F12%2F07%2F1736233%2Famazon-offers-100m-in-cloud-computing-credits-for-education-projects-like-ai-teaching-assistant%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://news.slashdot.org/story/24/12/07/1736233/amazon-offers-100m-in-cloud-computing-credits-for-education-projects-like-ai-teaching-assistant?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Seeking GitHub Repositories for End-to-End Monitoring & Observability in Golang + Kubernetes + MongoDB + MySQL Stack","url":"https://www.reddit.com/r/golang/comments/1h8zrrg/seeking_github_repositories_for_endtoend/","date":1733598748,"author":"/u/mnmadhukar02","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I&#39;m building an application where all cron jobs and long-running processors are developed in <strong>Golang</strong> and deployed in a <strong>Kubernetes</strong> environment. The application also leverages <strong>MongoDB</strong> and <strong>MySQL</strong> for database needs.</p> <p>I’m looking to implement <strong>end-to-end monitoring and observability</strong> to ensure high performance, reliability, and scalability. The requirements include:</p> <h1>Monitoring and Observability Needs</h1> <ol> <li><strong>Metrics Monitoring</strong> <ul> <li>Tools like Prometheus, kube-state-metrics, and Grafana.</li> <li>Support for custom metrics from Golang applications and databases.</li> </ul></li> <li><strong>Centralized Logging</strong> <ul> <li>ELK Stack (or alternatives like Fluentd, Loki).</li> <li>Kubernetes and application logs in structured formats for analysis.</li> </ul></li> <li><strong>Distributed Tracing</strong> <ul> <li>Tools like Jaeger or OpenTelemetry for request tracing across services.</li> </ul></li> <li><strong>Alerting</strong> <ul> <li>Rule-based alerts with tools like Alertmanager or integrations with Opsgenie/PagerDuty.</li> </ul></li> <li><strong>Database Monitoring</strong> <ul> <li>Query analytics, replication metrics, and performance insights for MongoDB/MySQL.</li> </ul></li> <li><strong>Error and Security Monitoring</strong> <ul> <li>Tools like Sentry for error tracking and Falco/Trivy for Kubernetes security.</li> </ul></li> <li><strong>Visualization</strong> <ul> <li>Dashboards integrating metrics, logs, and traces in one place using Grafana.</li> </ul></li> <li><strong>Chaos Engineering, Backup, and Recovery</strong> <ul> <li>Tools like LitmusChaos/Chaos Mesh for resilience testing.</li> <li>Velero for Kubernetes backups.</li> </ul></li> </ol> <p><strong>My Ask:</strong><br/> Are there any <strong>open-source GitHub repositories</strong> or starter projects that integrate most (or all) of these tools together? Something that’s ready to deploy or provides a solid foundation would be ideal.</p> <p>If you’ve worked on similar setups or know of repos that match these needs, please share!</p> <p>Thanks in advance for your help!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mnmadhukar02\"> /u/mnmadhukar02 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h8zrrg/seeking_github_repositories_for_endtoend/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h8zrrg/seeking_github_repositories_for_endtoend/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Linux container from scratch","url":"https://www.reddit.com/r/kubernetes/comments/1h90ct0/linux_container_from_scratch/","date":1733600343,"author":"/u/disenchanted_bytes","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Wrote a detailed post where I create a linux container step-by-step using just terminal commands. The post illustrates kernel features for container isolation and how to practically use them.</p> <p><a href=\"https://open.substack.com/pub/michalpitr/p/linux-container-from-scratch?r=gt6tv&amp;utm_campaign=post&amp;utm_medium=web\">https://open.substack.com/pub/michalpitr/p/linux-container-from-scratch?r=gt6tv&amp;utm_campaign=post&amp;utm_medium=web</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/disenchanted_bytes\"> /u/disenchanted_bytes </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h90ct0/linux_container_from_scratch/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h90ct0/linux_container_from_scratch/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How do you guys inject services into handler without cloning?","url":"https://www.reddit.com/r/rust/comments/1h91n86/how_do_you_guys_inject_services_into_handler/","date":1733603844,"author":"/u/mk111100","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>New to rust trying to figure how to inject a ref to a svc into handler without upsetting the compiler? Do you guys clone it?</p> <p>Is there a project I can take inspiration from?</p> <p>Using Axum</p> <p>Edit:<br/> <a href=\"https://www.reddit.com/r/rust/comments/gbdwdx/best_way_to_pass_shared_dataservice_to_warp/\">Another post with same issue for ref</a></p> <p>Edit 2</p> <p><a href=\"https://github.com/lahen82179/burner-repo/blob/main/src/controller/mod.rs\">https://github.com/lahen82179/burner-repo/blob/main/src/controller/mod.rs</a><br/> <a href=\"https://github.com/lahen82179/burner-repo/blob/main/src/services/decoding_service.rs\">https://github.com/lahen82179/burner-repo/blob/main/src/services/decoding_service.rs</a><br/> <a href=\"https://github.com/lahen82179/burner-repo/blob/main/src/controller/handler.rs\">https://github.com/lahen82179/burner-repo/blob/main/src/controller/handler.rs</a></p> <p>Here uploaded my code here for ref</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mk111100\"> /u/mk111100 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h91n86/how_do_you_guys_inject_services_into_handler/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h91n86/how_do_you_guys_inject_services_into_handler/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Linux 4.19, the Last Supported Kernel of the Linux 4.x Series, Finally Reaches EOL","url":"https://linux.slashdot.org/story/24/12/07/2047211/linux-419-the-last-supported-kernel-of-the-linux-4x-series-finally-reaches-eol?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733604600,"author":"EditorDavid","unread":true,"desc":"","content":"Slashdot reader prisoninmate shared this report from 9to5Linux:\nLinux kernel 4.19, the last of the Linux 4.x kernel series, has now reached the end of its supported life as announced earlier on the Linux kernel mailing list by kernel developer Greg Kroah-Hartman. The Linux 4.19 kernel branch was released more than six years ago, on October 22nd, 2018, and it received no less than 325 maintenance updates, the last one being Linux 4.19.325. The biggest highlights of Linux kernel 4.19 were initial Wi-Fi 6 support, the EROFS file system, and a union mount filesystem implementation. Kroah-Hartman said on the mailing list. \"This one is finished, it is end-of-life as of right now... It had a good life...\"\n\n\nAs a \"fun\" proof that this one is finished (and that any company saying they care about it really should have their statements validated with facts), I looked at the \"unfixed\" CVEs from this kernel release. Currently it is a list 983 CVEs long, too long to list here.... Note, this does NOT count the hardware CVEs which kernel.org does not track, and many are sill unfixed in this kernel branch. \n\nYes, CVE counts don't mean much these days, but hey, it's a signal of something, right? I take it to mean that no one is caring enough to backport the needed fixes to this branch, which means that you shouldn't be using it anymore. \n\nAnyway, please move off to a more modern kernel if you were using this one for some reason. Like 6.12.y, the next LTS kernel we will be supporting for multiple years.\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Linux+4.19%2C+the+Last+Supported+Kernel+of+the+Linux+4.x+Series%2C+Finally+Reaches+EOL%3A+https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F07%2F2047211%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F07%2F2047211%2Flinux-419-the-last-supported-kernel-of-the-linux-4x-series-finally-reaches-eol%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://linux.slashdot.org/story/24/12/07/2047211/linux-419-the-last-supported-kernel-of-the-linux-4x-series-finally-reaches-eol?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Notre Dame Cathedral reopens","url":"https://apnews.com/article/notre-dame-paris-latest-e50813cf016f08607c20ab115bc4b153","date":1733609115,"author":"chmaynard","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://apnews.com/article/notre-dame-paris-latest-e50813cf016f08607c20ab115bc4b153\">https://apnews.com/article/notre-dame-paris-latest-e50813cf016f08607c20ab115bc4b153</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42353215\">https://news.ycombinator.com/item?id=42353215</a></p>\n<p>Points: 166</p>\n<p># Comments: 110</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I built an HTML5 RTL-SDR application","url":"https://radio.ea1iti.es/","date":1733610989,"author":"jtarrio","unread":true,"desc":"","content":"\n<p>There are lots of RTL-SDR applications, but you have to install them. I used the HTML5 USB API that exists in Chrome (did you know about it?) to build one that you can run straight from your browser, on your computer or your Android phone.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42353390\">https://news.ycombinator.com/item?id=42353390</a></p>\n<p>Points: 75</p>\n<p># Comments: 25</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Testing: Harness Vs. Unit","url":"https://www.reddit.com/r/programming/comments/1h94pzk/testing_harness_vs_unit/","date":1733612614,"author":"/u/mooreds","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mooreds\"> /u/mooreds </a> <br/> <span><a href=\"https://littlegreenviper.com/testing-harness-vs-unit/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h94pzk/testing_harness_vs_unit/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"\"BGP at home\": getting a DIA circuit installed at home","url":"https://aaka.sh/posts/20230129-bgp-at-home.html","date":1733615111,"author":"tripdout","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://aaka.sh/posts/20230129-bgp-at-home.html\">https://aaka.sh/posts/20230129-bgp-at-home.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42353778\">https://news.ycombinator.com/item?id=42353778</a></p>\n<p>Points: 118</p>\n<p># Comments: 13</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"RFC 3681: Default field values","url":"https://www.reddit.com/r/rust/comments/1h95zfo/rfc_3681_default_field_values/","date":1733616341,"author":"/u/wowisthatreal","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wowisthatreal\"> /u/wowisthatreal </a> <br/> <span><a href=\"https://github.com/rust-lang/rust/issues/132162\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h95zfo/rfc_3681_default_field_values/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Reverse engineering the Sega Channel game image file format","url":"https://www.infochunk.com/schannel/index.html","date":1733616607,"author":"ndiddy","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.infochunk.com/schannel/index.html\">https://www.infochunk.com/schannel/index.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42353907\">https://news.ycombinator.com/item?id=42353907</a></p>\n<p>Points: 146</p>\n<p># Comments: 27</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Browsing negative content online makes mental health struggles worse: Study","url":"https://news.mit.edu/2024/study-browsing-negative-content-online-makes-mental-health-struggles-worse-1205","date":1733616981,"author":"topato","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://news.mit.edu/2024/study-browsing-negative-content-online-makes-mental-health-struggles-worse-1205\">https://news.mit.edu/2024/study-browsing-negative-content-online-makes-mental-health-struggles-worse-1205</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42353944\">https://news.ycombinator.com/item?id=42353944</a></p>\n<p>Points: 168</p>\n<p># Comments: 108</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Snap me out of the Rust honeymoon","url":"https://www.reddit.com/r/rust/comments/1h98lmw/snap_me_out_of_the_rust_honeymoon/","date":1733624486,"author":"/u/homeslicerae","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I just started learning Rust and I&#39;m using it to develop the backend server for a side project. I began by reading The Book and doing some Rustlings exercises but mostly jumped straight in with the Axum / Tokio with their websocket example template.</p> <p>I&#39;m right in the honeymoon.</p> <p>I come from a frontend-focused React and TypeScript background at my day job. Compared to that:</p> <p>I can immediately view the source code of the packages and see the comments left by the author using my LSP. And I can even tweak it with debug statements like any old Javascript node module.</p> <p>The type system is fully sound and has first-class support for discriminated unions with the enums and match statements. With Typescript, you can never get over the fact that it&#39;s just a thin, opt-in wrapper on Javascript. And all of the dangers associated with that.</p> <p>Serde, etc. Wow, the power granted by using macros is insane</p> <p>And best yet, the borrow checker and lifetime system. Its purpose is to ensure your code is memory-safe and cleaned up without needing a garbage collector, sure. But it seems that by forcing you to deeply consider the scope of your data, it also guides you to write more sensible designs from a pure maintainability and readability standpoint as well.</p> <p>And tests are built into the language! I don&#39;t have to fuss around with third-party libraries, all with their weird quirks. Dealing with maintaining a completely different transpilation layer for Jest just to write my unit tests... is not fun.</p> <p>Is this language not the holy grail for software engineers who want it all? Fast, correct, and maintainable?</p> <p>Snap me out of my honeymoon. What dangers lurk beneath the surface? </p> <p>Will the strictness of the compiler haunt me in the future when what should be a simple fix to a badly assumed data type of a struct leads me to a 1 month refactor tirade before my codebase even compiles again?</p> <p>Will compiler times creep up longer and longer until I&#39;m eventually spending most of the day staring at my computer praying I got it right?</p> <p>Is managing memory overrated after all, and I&#39;ll find myself cursing at the compiler when I know that my code is sound, but it just won&#39;t get the memo?</p> <p>What is it that led engineer YouTubers like Prime Reacts, who programmed Rust professionally for over 3 years, to decide that GoLang is good enough after all?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/homeslicerae\"> /u/homeslicerae </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h98lmw/snap_me_out_of_the_rust_honeymoon/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h98lmw/snap_me_out_of_the_rust_honeymoon/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"I created acoustic echo cancellation library","url":"https://www.reddit.com/r/rust/comments/1h98pyc/i_created_acoustic_echo_cancellation_library/","date":1733624887,"author":"/u/WeatherZealousideal5","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi everyone!</p> <p>Lately, I&#39;ve been working on an echo cancellation solution for my local assistant project with Ollama. If you&#39;ve tried ChatGPT&#39;s advanced voice mode, you may have noticed that they recently added the ability to seamlessly interrupt the assistant while it talks. This functionality intrigued me, and I wanted to understand how it works so well in ChatGPT.</p> <p>It turns out, the key is echo cancellation. When you have TTS (text-to-speech) samples playing through the speakers, or even just the speaker&#39;s samples, it&#39;s possible to filter out the echo (though the algorithm behind it isn&#39;t simple).</p> <p>I found a C library called Speex, which handles echo cancellation. I then created Rust bindings for it and packaged it into two crates: <code>aec-rs-sys</code> and <code>aec-rs</code>. The next step was to make this useful in other languages, which was a great opportunity to practice writing C APIs in Rust. So, I wrote a wrapper crate with extern functions, using CBindgen to create the necessary C headers.</p> <p>I even added GitHub Actions CI to publish it as a C archive library. Then, I went a step further and created a Python package that embeds the precompiled Rust-C library and exposes high-level functions, making it fast and easy to use!</p> <p>The result is a set of Rust and Python libs that are both efficient and easy to integrate into projects. Plus, I learned how to create a reliable and organized C API in Rust that can be used in any language (let me know if it’s really organized : ).</p> <p>Still, I&#39;m wondering: Do we need a stable ABI at this point? It wasn’t too bad to create the extern wrapper, but I’d love to hear your thoughts.</p> <p>Check it out on GitHub: <a href=\"https://github.com/thewh1teagle/aec-rs\">aec-rs</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WeatherZealousideal5\"> /u/WeatherZealousideal5 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h98pyc/i_created_acoustic_echo_cancellation_library/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h98pyc/i_created_acoustic_echo_cancellation_library/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Brian Krebs Investigates Internet's Most Vicious Hackers–From a Secret Location","url":"https://www.wsj.com/tech/cybersecurity/hacking-brian-krebs-snowflake-waifu-49b87fce","date":1733625398,"author":"bookofjoe","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.wsj.com/tech/cybersecurity/hacking-brian-krebs-snowflake-waifu-49b87fce\">https://www.wsj.com/tech/cybersecurity/hacking-brian-krebs-snowflake-waifu-49b87fce</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42354602\">https://news.ycombinator.com/item?id=42354602</a></p>\n<p>Points: 166</p>\n<p># Comments: 18</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"HA Storage Options for a Small Baremetal Cluster?","url":"https://www.reddit.com/r/kubernetes/comments/1h995zz/ha_storage_options_for_a_small_baremetal_cluster/","date":1733626376,"author":"/u/Lyraeixis","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey there! I&#39;ve recently stood up a small Kubernetes cluster at home made out of three repurposed workstations that my workplace threw out. I do have a small NAS, and that&#39;s fine for most of my apps, but I run a local instance of Vaultwarden to manage passwords and I&#39;d like that to be as HA as possible for obvious reasons. The issue I have with just linking its volumes to the NAS like everything else is that if the NAS goes down, the volumes go down, which means Vaultwarden goes down -- single point of failure. I&#39;d like to be able to lose the NAS, or any individual node, while still keeping Vaultwarden up. The good news is that it reads way more than it writes, traffic overall is pretty light, and it doesn&#39;t store a lot of information -- less than 1GB.</p> <p>The two big options I&#39;ve seen are Longhorn and Rook. Longhorn looks great on paper, but I hear a lot of people talk about unreliability and issues with replicas going out of sync. Rook also looks pretty good, but the Ceph docs talk about specs my reimaged workstations don&#39;t have like 32GB of RAM for a small cluster. So what do you guys think is best for this kind of a use case with these limitations? Is distributed storage too much for such a small setup in the first place?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Lyraeixis\"> /u/Lyraeixis </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h995zz/ha_storage_options_for_a_small_baremetal_cluster/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h995zz/ha_storage_options_for_a_small_baremetal_cluster/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Nyxt: The Hacker's Browser","url":"https://nyxt.atlas.engineer/","date":1733626494,"author":"OuterVale","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://nyxt.atlas.engineer/\">https://nyxt.atlas.engineer/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42354691\">https://news.ycombinator.com/item?id=42354691</a></p>\n<p>Points: 234</p>\n<p># Comments: 95</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What is an API Gateway?","url":"https://blog.algomaster.io/p/what-is-an-api-gateway","date":1733632245,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p><strong>APIs</strong>, or <strong>Application Programming Interfaces</strong>, are a set of rules and protocols that allows two software applications or services to communicate with each other.</p><p>As applications grow in size, the number of APIs increases too. Without the right tools and infrastructure, managing these APIs can quickly become a challenge.</p><p>This is where <strong>API Gateway</strong> comes into play.</p><blockquote><p>An API Gateway acts as a <strong>central server</strong> that sits between clients (e.g., browsers, mobile apps) and backend services.</p></blockquote><p>Instead of clients interacting with multiple microservices directly, they send their requests to the API Gateway. The gateway processes these requests, enforces security, and forwards them to the appropriate microservices.</p><p>In this article, we will explore why do we need an API gateway, the key features it provides and how it works step by step.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.link/algo-dec7\">Improve your Product Skills - PostHog Newsletter (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png\" width=\"1456\" height=\"291\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:291,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5d129404-a78c-4422-b045-1b6852bdded9_2200x440.png 1456w\" sizes=\"100vw\" loading=\"lazy\" fetchpriority=\"high\"></picture><div></div></div></a></figure></div><p><strong><a href=\"https://dub.link/algo-dec7\">Product for Engineers</a></strong> is PostHog&#8217;s newsletter dedicated to helping engineers improve their product skills. It features curated advice on building great products, lessons (and mistakes) from building PostHog, and research into the practices of top startups.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.link/algo-dec7&quot;,&quot;text&quot;:&quot;Subscribe for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.link/algo-dec7\"><span>Subscribe for FREE</span></a></p><div><hr></div><h2>1. Why Do We Need an API Gateway?</h2><p>Modern applications, especially those built using microservices architecture, have multiple backend services managing different functionalities.</p><p>For example, in an e-commerce service:</p><ul><li><p>One service handles <strong>user accounts</strong>.</p></li><li><p>Another handles <strong>payments</strong>.</p></li><li><p>Another manages <strong>product inventory</strong>.</p></li></ul><h4><strong>Without an API Gateway:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png\" width=\"493\" height=\"339.05555555555554\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:718,&quot;width&quot;:1044,&quot;resizeWidth&quot;:493,&quot;bytes&quot;:64372,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc6da835a-257c-4247-a4b9-d7297c289fce_1044x718.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ul><li><p>Clients would need to know the location and details of all backend services.</p></li><li><p>Developers would need to manage authentication, rate limiting, and security for each service individually.</p></li></ul><h4><strong>With an API Gateway:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png\" width=\"680\" height=\"289.56043956043953\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:620,&quot;width&quot;:1456,&quot;resizeWidth&quot;:680,&quot;bytes&quot;:83000,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e41325f-2b6b-4f2a-8ca6-d622413ad64c_1692x720.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ul><li><p>Clients send all requests to one place &#8211; the API Gateway.</p></li><li><p>The API Gateway takes care of routing, authentication, security, and other operational tasks, simplifying both client interactions and backend management.</p></li></ul><h2>2. Core Features of an API Gateway</h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png\" width=\"594\" height=\"452.0274725274725\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1108,&quot;width&quot;:1456,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:141750,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h4>1. <strong>Authentication and Authorization</strong></h4><p>API Gateway secures the backend systems by ensuring only authorized users and clients can access backend services.</p><p>It handles tasks like:</p><ul><li><p><strong>Authentication:</strong> Verifying the identity of the client using tokens (e.g., OAuth, JWT), API keys, or certificates.</p></li><li><p><strong>Authorization:</strong> Checking the client&#8217;s permissions to access specific services or resources.</p></li></ul><p>By centralizing these tasks, the API gateway eliminates the need for individual services to handle authentication, reducing redundancy and ensuring consistent access control across the system.</p><h4>2. <strong>Rate Limiting</strong></h4><p>To prevent abuse and ensure fair usage of resources, most API Gateways implement <strong>rate limiting</strong>.</p><p>This feature:</p><ul><li><p>Controls the frequency of requests a client can make within a given timeframe.</p></li><li><p>Protects backend services from being overwhelmed by excessive traffic or potential denial-of-service (DoS) attacks.</p></li></ul><blockquote><p>For example, a public API might allow a maximum of 100 requests per minute per user. If a client exceeds this limit, the API Gateway will block additional requests until the rate resets.</p></blockquote><h4>3. <strong>Load Balancing</strong></h4><p>High-traffic applications rely on <strong>load balancing</strong> to distribute incoming requests evenly across multiple instances of a service. </p><p>The API Gateway can:</p><ul><li><p>Redirect requests to healthy service instances while avoiding ones that are down or overloaded.</p></li><li><p>Use algorithms like round-robin, least connections, or weighted distribution to manage traffic intelligently.</p></li></ul><h4>4. <strong>Caching</strong></h4><p>To improve response times and reduce the strain on backend services, most API Gateways provide <strong>caching</strong>. </p><p>They temporarily store frequently requested data, such as:</p><ul><li><p>Responses to commonly accessed endpoints (e.g., product catalogs or weather data).</p></li><li><p>Static resources like images or metadata.</p></li></ul><blockquote><p>Caching helps in reducing latency and enhancing user experience while lowering the operational cost of backend services.</p></blockquote><h4>5. <strong>Request Transformation</strong></h4><p>In systems with diverse clients and backend services, <strong>request transformation</strong> is essential for compatibility.</p><p>An API Gateway can:</p><ul><li><p>Modify the structure or format of incoming requests to match the backend service requirements.</p></li><li><p>Transform responses before sending them back to the client, ensuring they meet the client&#8217;s expectations.</p></li></ul><blockquote><p>For instance, it might convert XML responses from a legacy service into JSON for modern frontend applications.</p></blockquote><h4>6. <strong>Service Discovery</strong></h4><p>Modern systems often involve microservices that scale dynamically. </p><p>The <strong>service discovery</strong> feature of an API Gateway dynamically identifies the appropriate backend service instance to handle each request.</p><p>This ensures seamless request routing even in environments where services frequently scale up or down.</p><h4>7. <strong>Circuit Breaking</strong></h4><p>Circuit breaking is a mechanism that temporarily stops sending requests to a backend service when it detects persistent failures, such as:</p><ul><li><p>Slow responses or timeouts.</p></li><li><p>Server errors (e.g., HTTP 500 status codes).</p></li><li><p>High latency or unavailability of a service.</p></li></ul><p>The API Gateway continuously monitors the health and performance of backend services and uses circuit breaking to block requests to a failing service.</p><h4>8. <strong>Logging and Monitoring </strong></h4><p>API Gateways provide robust <strong>monitoring and logging</strong> capabilities to track and analyze system behavior.</p><p>These capabilities include:</p><ul><li><p>Logging detailed information about each request, such as source, destination, and response time.</p></li><li><p>Collecting metrics like request rates, error rates, and latency.</p></li></ul><p>This data helps system administrators detect anomalies, troubleshoot issues, and optimize the system&#8217;s performance. Many API Gateways also integrate with monitoring tools like Prometheus, Grafana, or AWS CloudWatch.</p><h2><strong>3. How Does an API Gateway Work?</strong></h2><p>Imagine you're using a food delivery app to order dinner. When you tap \"Place Order\" your phone makes an API request. But instead of talking directly to various backend services, it communicates with an API Gateway first.</p><h4><strong>Step 1: Request Reception</strong></h4><p>When you tap \"Place Order,\" the app sends a request to the <strong>API Gateway</strong>, asking it to process your order. </p><p>This request includes things like:</p><ul><li><p>Your user ID</p></li><li><p>Selected restaurant and menu items</p></li><li><p>Delivery address</p></li><li><p>Payment method</p></li><li><p>Authentication tokens</p></li></ul><p>The API Gateway receives the request as the single entry point to the backend system.</p><h4><strong>Step 2: Request Validation</strong></h4><p>Before forwarding the request, the API Gateway validates it to ensure:</p><ul><li><p>The required parameters or headers are present.</p></li><li><p>The data is in the correct format (e.g., JSON).</p></li><li><p>The request conforms to the expected structure or schema.</p></li></ul><pre><code>// Example of initial request handling\napp.post('/api/v1/orders', async (req, res) =&gt; {\n    // Check if request has required headers\n    if (!req.headers['content-type'].includes('application/json')) {\n        return res.status(400).send('Invalid content type');\n    }\n    // Continue processing...\n});</code></pre><p>If any information is missing or incorrect, the gateway immediately rejects the request and notifies the app  with an appropriate error message.</p><h4><strong>Step 3: Authentication &amp; Authorization</strong></h4><p>The gateway now verifies your identity and permissions to ensures only legitimate users can place orders:</p><ul><li><p>It forwards your authentication token (e.g., OAuth or JWT) to an identity provider to confirm your identity.</p></li><li><p>It checks your permissions to ensure you&#8217;re authorized to use the app for placing an order.</p></li></ul><pre><code>const authenticateRequest = async (req) =&gt; {\n    // Extract JWT token from header\n    const token = req.headers.authorization?.split(' ')[1];\n    \n    // Verify token and get user details\n    const user = await verifyToken(token);\n    \n    // Check if user has permission to place orders\n    return user.permissions.includes('place_orders');\n};</code></pre><p>If authentication or authorization fails, the API Gateway sends a <code>401 Unauthorized</code> or <code>403 Forbidden</code> error back to the app.</p><h4><strong>Step 4: Rate Limiting</strong></h4><p>To prevent abuse, the API Gateway checks how many requests you&#8217;ve made recently. For example:</p><ul><li><p>If you&#8217;ve made 10 \"Place Order\" requests in the last minute (maybe by accident), the gateway might block additional requests temporarily and return <code>429 Too Many Requests</code> response.</p></li></ul><pre><code>const checkRateLimit = async (userId) =&gt; {\n    const key = `rate_limit:order:${userId}`;\n    const current = await redis.incr(key);\n    \n    // If first request in window, set expiry\n    if (current === 1) {\n        await redis.expire(key, 60); // 1 minute window\n    }\n    \n    return current &lt;= 10; // Allow 10 order requests per minute\n};</code></pre><p>This ensures the system remains stable and fair for all users specially during traffic spikes or malicious attacks, such as distributed denial-of-service (DDoS) attempts.</p><h4><strong>Step 5: Request Transformation (if needed)</strong></h4><p>If any of these backend services require specific data formats or additional details, the API Gateway transforms the request. </p><p>For example:</p><ul><li><p>The app sends the delivery address in plain text, but the Delivery Service expects GPS coordinates. The API Gateway converts the address into coordinates before forwarding the request.</p></li></ul><pre><code>const transformRequest = async (originalRequest) =&gt; {\n    const address = originalRequest.deliveryAddress;\n\n    // Convert address to GPS coordinates using a geocoding API\n    const coordinates = await getCoordinatesFromAddress(address);\n\n    if (!coordinates) {\n        throw new Error('Failed to fetch GPS coordinates');\n    }\n\n    // Transform the request for the Delivery Service\n    return {\n        orderId: originalRequest.orderId,\n        customerName: originalRequest.customerName,\n        deliveryLocation: {\n            latitude: coordinates.lat,\n            longitude: coordinates.lng\n        },\n        deliveryInstructions: originalRequest.instructions || \"\"\n    };\n};</code></pre><h4>Step 6: Request Routing</h4><p>The API Gateway now needs to coordinate several backend services to process your order.</p><p>Using <strong>service discovery</strong>, it identifies:</p><ul><li><p><strong>Order Service:</strong> To create a new order record.</p></li><li><p><strong>Inventory Service:</strong> To check if the restaurant has your selected items available.</p></li><li><p><strong>Payment Service:</strong> To process your payment.</p></li><li><p><strong>Delivery Service:</strong> To assign a delivery driver to your order.</p></li></ul><p>The gateway dynamically routes the request to these services using a <strong>load balancing</strong> algorithm, ensuring it connects to available and healthy service instances.</p><pre><code>const routeRequest = async (req, serviceType) =&gt; {\n    // Get service registry\n    const services = await serviceDiscovery.getServices(serviceType);\n    \n    // Select instance\n    const targetService = selectServiceInstance(services);\n    \n    // Forward request\n    return await axios.post(\n        `${targetService.url}/api/orders`,\n        req.body,\n        { headers: req.headers }\n    );\n};</code></pre><h4><strong>Step 7: Response Handling</strong></h4><p>Once the API Gateway receives the response(s) from the backend service(s), it performs the following tasks:</p><ul><li><p><strong>Transformation:</strong> Adjusts the response format or structure to match the client&#8217;s requirements.</p></li><li><p><strong>Caching (Optional):</strong> Stores the response temporarily for frequently accessed data, reducing future latency.</p></li></ul><pre><code>const handleResponse = async (serviceResponse) =&gt; {\n    // Transform response if needed\n    const transformedResponse = {\n        orderId: serviceResponse.order_reference,\n        estimatedDelivery: serviceResponse.eta,\n        status: serviceResponse.current_status\n    };\n    \n    // Cache response if applicable\n    if (serviceResponse.cacheable) {\n        await cacheResponse(\n            transformedResponse.orderId, \n            transformedResponse\n        );\n    }\n    \n    return transformedResponse;\n};</code></pre><p>Finally, the API Gateway sends the processed response back to the client in a format they can easily understand.</p><h4>Step 8: Logging &amp; Monitoring</h4><p>Throughout this process, the gateway records important metrics to track each request:</p><pre><code>const logRequest = async (req, res, timing) =&gt; {\n    await logger.log({\n        timestamp: new Date(),\n        path: req.path,\n        method: req.method,\n        responseTime: timing,\n        statusCode: res.statusCode,\n        userId: req.user?.id\n    });\n};</code></pre><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/what-is-an-api-gateway?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/what-is-an-api-gateway?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb0c8192-4b1b-4834-b068-20d8cfb65050_1856x1412.png","enclosureMime":""},{"title":"Rust ❤️ LLVM by Nikita Popov","url":"https://www.reddit.com/r/rust/comments/1h9bdbr/rust_llvm_by_nikita_popov/","date":1733634012,"author":"/u/sabitm","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sabitm\"> /u/sabitm </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=Kqz-umsAnk8\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h9bdbr/rust_llvm_by_nikita_popov/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"ChatGPT CLI wrapper, one of my first basic programs but having fun learning","url":"https://www.reddit.com/r/linux/comments/1h9c96m/chatgpt_cli_wrapper_one_of_my_first_basic/","date":1733637306,"author":"/u/sponges123","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sponges123\"> /u/sponges123 </a> <br/> <span><a href=\"https://i.redd.it/kgzthoaqdk5e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h9c96m/chatgpt_cli_wrapper_one_of_my_first_basic/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"K8s Security Engineer","url":"https://www.reddit.com/r/kubernetes/comments/1h9cne0/k8s_security_engineer/","date":1733638859,"author":"/u/ErenYeager_A0T","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Can anyone share their experience interviewing for a Kubernetes Security Engineer role? What areas should I focus on while preparing, and what are the typical daily tasks in this role? Any guidance would be appreciated!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ErenYeager_A0T\"> /u/ErenYeager_A0T </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h9cne0/k8s_security_engineer/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h9cne0/k8s_security_engineer/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What lessons have you learned managing rapidly growing Kubernetes clusters? Please share your experience. It's invaluable for many of us. Thank you","url":"https://www.reddit.com/r/kubernetes/comments/1h9cspa/what_lessons_have_you_learned_managing_rapidly/","date":1733639471,"author":"/u/moneyppt","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/moneyppt\"> /u/moneyppt </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h9cspa/what_lessons_have_you_learned_managing_rapidly/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h9cspa/what_lessons_have_you_learned_managing_rapidly/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Best Bootable driver maker is this one-","url":"https://www.reddit.com/r/linux/comments/1h9drnr/best_bootable_driver_maker_is_this_one/","date":1733643569,"author":"/u/Veer-Verma","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Straight available to you in any Linux distributions which is disks🔥 Why to download any of them if you already have one with you, best till the date.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Veer-Verma\"> /u/Veer-Verma </a> <br/> <span><a href=\"https://i.redd.it/uyaf9p6ewk5e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h9drnr/best_bootable_driver_maker_is_this_one/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"GitHub - ad-on-is/stowman: stowman.sh lets you easily manage your dotfiles using git and GNU stow.","url":"https://www.reddit.com/r/linux/comments/1h9dvhq/github_adonisstowman_stowmansh_lets_you_easily/","date":1733644042,"author":"/u/ad-on-is","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ad-on-is\"> /u/ad-on-is </a> <br/> <span><a href=\"https://github.com/ad-on-is/stowman\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h9dvhq/github_adonisstowman_stowmansh_lets_you_easily/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Writing as as software engineer","url":"https://www.reddit.com/r/programming/comments/1h9e7ux/writing_as_as_software_engineer/","date":1733645568,"author":"/u/FoxInTheRedBox","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/FoxInTheRedBox\"> /u/FoxInTheRedBox </a> <br/> <span><a href=\"https://newsletter.francofernando.com/p/writing-as-as-software-engineer\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h9e7ux/writing_as_as_software_engineer/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"is there a scenario in Go that it doesn't matter to use buffered or unbuffered channel?","url":"https://www.reddit.com/r/golang/comments/1h9emaq/is_there_a_scenario_in_go_that_it_doesnt_matter/","date":1733647343,"author":"/u/UnusualAgency2744","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I am new to go concurrency, and I am trying to make sense of buffered/unbuffered channel. Assume the following hypothetical scenario:</p> <p>Main starts a bunch of goroutines, and these goroutines all scrape data continuously from an API, and the data is stored in a scoped slice in each go routine (no sending to channel at this point). After a context timed out, these go routine loop through the slice and send each data to the channel.</p> <p>The main go routine then reads the data from the channel and do some operation e.g write to csv.</p> <p>Does it matter then, to use a buffered or unbuffered channel to achieve the correctness of the program? How about if we consider performance?</p> <p>Thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/UnusualAgency2744\"> /u/UnusualAgency2744 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h9emaq/is_there_a_scenario_in_go_that_it_doesnt_matter/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h9emaq/is_there_a_scenario_in_go_that_it_doesnt_matter/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}