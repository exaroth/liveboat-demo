{
  "id": "KZgg6v3y1EHngSu15w9ddbD2SchD7Q",
  "title": "Dev News - Last 2 days",
  "displayTitle": "Dev News - Last 2 days",
  "url": "",
  "feedLink": "",
  "items": [
    {
      "title": "Notes On: Disaggregated OLTP Systems",
      "url": "https://transactional.blog/notes-on/disaggregated-oltp.html",
      "date": 1733356800,
      "author": "",
      "unread": true,
      "desc": "",
      "content": "Aurora, Socrates, PolarDB, and Taurus.",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Diátaxis – A systematic approach to technical documentation authoring",
      "url": "https://diataxis.fr/",
      "date": 1733373336,
      "author": "OuterVale",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://diataxis.fr/\">https://diataxis.fr/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42325011\">https://news.ycombinator.com/item?id=42325011</a></p>\n<p>Points: 493</p>\n<p># Comments: 110</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Accelerating Kubernetes networking with Chelsio T6",
      "url": "https://www.youtube.com/watch?v=Hl-e47Y4br4",
      "date": 1733378409,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/Hl-e47Y4br4?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Introducing Akka 3",
      "url": "https://www.youtube.com/watch?v=SVB90dQp86g",
      "date": 1733378416,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/SVB90dQp86g?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Introduction to Falco Talon",
      "url": "https://www.youtube.com/watch?v=g6oD3jDi8fs",
      "date": 1733378420,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/g6oD3jDi8fs?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Cloud Native Live: Introducing Kyverno Authz Server",
      "url": "https://www.youtube.com/watch?v=ykPN7ycUmkg",
      "date": 1733379125,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon North America in Salt Lake City from November 12 - 15, 2024. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/ykPN7ycUmkg?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Dapr - build distributed applications faster",
      "url": "https://www.youtube.com/watch?v=algEdPTXtWI",
      "date": 1733382000,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/algEdPTXtWI?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Imbalanced-learn: regrets and onwards - with Guillaume Lemaitre, core-maintainer",
      "url": "https://www.youtube.com/watch?v=npSkuNcm-Og",
      "date": 1733385640,
      "author": "probabl",
      "unread": true,
      "desc": "",
      "content": "Imbalanced learn is one of the most popular scikit-learn projects out there. It has support for resampling techniques which historically have always been used for imbalanced classification use-cases. However, now that we are a few years down the line, it may be time to start rethinking the library. As it turns out, other techniques may be preferable. We talk to the maintainer, Guillaume Lemaitre, to discuss the lessons that have been learned over the last decade.\n\nThe imbalanced learn docs can be found here:\nhttps://imbalanced-learn.org/stable/\n\nScikit-learn has a great guide on calibrating a classifier, which can be found here:\nhttps://scikit-learn.org/dev/auto_examples/model_selection/plot_cost_sensitive_learning.html#addressing-the-problem-with-a-business-metric\n\n00:00 Introduction\n01:14 How imbalanced-learn started\n15:32 Resampling API\n21:32 Scikit-learn\n25:41 Lessons learned\n34:50 Fix in sklearn\n43:28 More reflections\n51:17 Wrapup\n\nWe have a Discord these days, feel free to discuss the podcast with us there! https://discord.probabl.ai\n\nThis podcast is part of the open efforts over at probabl. To learn more you can check out website or reach out to us on social media.\n\nWebsite: https://probabl.ai/\nBluesky: https://bsky.app/profile/probabl.bsky.social\nLinkedIn: https://www.linkedin.com/company/probabl\nTwitter: https://x.com/probabl_ai",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/npSkuNcm-Og?version=3",
      "enclosureMime": ""
    },
    {
      "title": "System Design: What is Service Discovery?",
      "url": "https://blog.algomaster.io/p/service-discovery-in-distributed-systems",
      "date": 1733407022,
      "author": "Ashish Pratap Singh",
      "unread": true,
      "desc": "",
      "content": "<p>Back when applications ran on a <strong>single server</strong>, life was simple. </p><p>Today&#8217;s modern applications are far more complex, consisting of <strong>dozens or even hundreds of services</strong>, each with multiple instances that scale up and down dynamically.</p><p>This makes it harder for services to efficiently <strong>find and communicate</strong> with each other across networks.</p><p>That&#8217;s where <strong>Service Discovery</strong> comes into play.</p><p>In this article, we&#8217;ll dive into what service discovery is, why it&#8217;s important, how it works, the different types (client and server side discovery), and best practices for implementing it effectively.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/yx8gx14\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:217429,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d713769-18ff-4316-b09d-1cf7d2b3a9bd_1725x1080.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/yx8gx14\">Multiplayer's</a></strong> System Dashboard auto-discovers, tracks, and documents your entire system architecture&#8212;from its components to APIs, dependencies, and environments. Gain real-time, comprehensive visibility into your system, all at a glance.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/yx8gx14&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary button-wrapper\" href=\"https://dub.sh/yx8gx14\"><span>Get Started for FREE</span></a></p><div><hr></div><h2><strong>1. What is Service Discovery?</strong></h2><p><strong>Service discovery</strong> is a mechanism that allows services in a distributed system to <strong>find and communicate</strong> with each other dynamically. </p><p>It hides the complex details of where services are located, so they can interact without knowing each other's exact network spots.</p><p>Service discovery registers and maintains a record of all your services in a <strong>service registry</strong>. This service registry acts as a single source of truth that allows your services to query and communicate with each other.</p><p><strong>Example service registry record of a service:</strong></p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png\" width=\"594\" height=\"537.4712990936556\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/58cc013a-3a06-474e-a695-82fef7d469be_662x599.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:599,&quot;width&quot;:662,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:54339,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F58cc013a-3a06-474e-a695-82fef7d469be_662x599.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a></figure></div><p>A service registry typically stores:</p><ul><li><p><strong>Basic Details:</strong> Service name, IP, port, and status.</p></li><li><p><strong>Metadata:</strong> Version, environment, region, tags, etc.</p></li><li><p><strong>Health Information:</strong> Health status, last health check.</p></li><li><p><strong>Load Balancing Info:</strong> Weights, priorities.</p></li><li><p><strong>Secure Communication:</strong> Protocols, certificates.</p></li></ul><p>This abstraction is important in environments where services are constantly being added, removed, or scaled.</p><h2><strong>2. Why is Service Discovery Important?</strong></h2><p>Think about a massive system like <strong>Netflix</strong>, with hundreds of microservices working together. Hardcoding the locations of these services isn&#8217;t scalable. If a service moves to a new server or scales dynamically, it could break the entire system.</p><p><strong>Service discovery</strong> solves this by dynamically and reliably enabling services to locate and communicate with one another.</p><p>Here are its key benefits:</p><ul><li><p><strong>Reduced Manual Configuration:</strong> Services can automatically discover and connect to each other, eliminating the need for manual configuration and hardcoding of network locations.</p></li><li><p><strong>Improved Scalability:</strong> As new service instances are added or removed, service discovery ensures that other services can seamlessly adapt to the changing environment.</p></li><li><p><strong>Fault Tolerance:</strong> Service discovery often include health checks, enabling systems to automatically reroute traffic away from failing service instances.</p></li><li><p><strong>Simplified Management:</strong> Having a central registry of services makes it easier to monitor, manage, and troubleshoot the entire system.</p></li></ul><h2>3. Service Registration Options</h2><p>Service registration is the process where a service announces its availability to a <strong>service registry</strong>, making it discoverable by other services.</p><p>The method of registration can vary depending on the architecture, tools, and deployment environment.</p><p>Here are the most common <strong>service registration options</strong>:</p><h4>3.1. <strong>Manual Registration</strong></h4><p>In manual registration, service details are added to the registry manually by a developer or operator. This approach is simple but not suitable for dynamic systems where services scale or move frequently.</p><h4>3.2. <strong>Self-Registration</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png\" width=\"565\" height=\"278\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:278,&quot;width&quot;:565,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:22928,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F011bde92-c1ea-4b72-a7fa-6c54e59ef723_565x278.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In self-registration, the service is responsible for registering itself with the service registry when it starts. The service includes logic to interact with the registry, such as sending API requests to register its details.</p><p><strong>How it works:</strong></p><ol><li><p>When a service or an instance starts, it retrieves its own network information (e.g., IP address, port).</p></li><li><p>It sends a registration request to the service registry (e.g., via HTTP or gRPC).</p></li><li><p>To ensure the registry has up-to-date information, the service may periodically send heartbeat signals to confirm it is active and healthy.</p></li></ol><h4>3.3. <strong>Third-Party Registration (Sidecar Pattern)</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png\" width=\"603\" height=\"289.9571209800919\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:314,&quot;width&quot;:653,&quot;resizeWidth&quot;:603,&quot;bytes&quot;:26561,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8f9d74d-cc68-4ff5-b8db-32447bfb7d69_653x314.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><p>In third-party registration, an external agent or \"sidecar\" process handles service registration. The service itself does not directly interact with the registry. Instead, the sidecar detects the service and registers it on its behalf.</p><p><strong>How it works:</strong></p><ol><li><p>The sidecar runs alongside the service (e.g., in the same container or on the same host).</p></li><li><p>The sidecar detects when the service starts and gathers its network details.</p></li><li><p>It sends the registration request to the service registry.</p></li></ol><h4>3.4. <strong>Automatic Registration by Orchestrators</strong></h4><p>In modern orchestrated environments like <strong>Kubernetes</strong>, service registration happens automatically. The orchestration platform manages the lifecycle of services and updates the service registry as services start, stop, or scale.</p><p><strong>How it works:</strong></p><ol><li><p>The orchestrator (e.g., Kubernetes) detects when a service or container is deployed.</p></li><li><p>It assigns the service an IP address and port.</p></li><li><p>It registers the service automatically with its built-in service discovery mechanism (e.g., Kubernetes DNS).</p></li></ol><h4>3.5. <strong>Configuration Management Systems</strong></h4><p>Some systems use configuration management tools (e.g., Chef, Puppet, Ansible) to register services. These tools manage the service lifecycle and update the service registry whenever services are added or removed.</p><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><h2><strong>4. Types of Service Discovery</strong></h2><p>There are two primary types of service discovery: client-side discovery and server-side discovery.</p><h3><strong>4.1. Client-Side Discovery</strong></h3><p>In this model, the responsibility for discovering and connecting to a service lies entirely with the client.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png\" width=\"647\" height=\"446.6266280752533\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:691,&quot;resizeWidth&quot;:647,&quot;bytes&quot;:40525,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F42c900cd-69db-4fd6-8367-52afc64cec2f_691x477.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services (e.g., <code>UserService</code>, <code>PaymentService</code>) register themselves with a centralized <strong>service registry</strong>.</p><ol><li><p>They provide their network details (IP address and port) along with metadata like service health or version.</p></li></ol></li><li><p><strong>Client Queries the Registry: </strong>The client (a microservice or API gateway) sends a request to the <strong>service registry</strong> to find the instances of a target service (e.g., <code>PaymentService</code>).</p><ol><li><p>The registry responds with a list of available instances, including their IP addresses and ports.</p></li></ol></li><li><p><strong>Client Routes the Request: </strong>Based on the information retrieved, the client selects one of the service instances (often using a load balancing algorithm) and connects directly to it.</p></li></ol><p>The client maintains control over how requests are routed, such as distributing traffic evenly across instances or prioritizing the closest instance.</p><h4>Example Workflow</h4><p>Let&#8217;s consider a real-world example of a food delivery app:</p><ul><li><p>A <strong>Payment Service</strong> has three instances running on different servers.</p></li><li><p>When the <strong>Order Service</strong> needs to process a payment, it queries the <strong>service registry</strong> for the location of the <code>Payment Service</code>.</p></li><li><p>The service registry responds with a list of available instances (e.g., <code>IP1:Port1</code>, <code>IP2:Port2</code>, <code>IP3:Port3</code>).</p></li><li><p>The <strong>Order Service</strong> chooses an instance (e.g., <code>IP1:Port1</code>) and sends the payment request directly to it.</p></li></ul><h4><strong>Advantages</strong>:</h4><ul><li><p>Simple to implement and understand.</p></li><li><p>Reduces the load on a central load balancer.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Consumers need to implement discovery logic.</p></li><li><p>Changes in the registry protocol require changes in clients.</p></li></ul><blockquote><p><strong>Example:</strong> Netflix&#8217;s open-source library, <strong>Eureka</strong>, is a popular tool for client-side service discovery.</p></blockquote><h3><strong>4.2. Server-Side Discovery</strong></h3><p>In this model, the client delegates the responsibility of discovering and routing requests to a specific service instance to a <strong>centralized server or load balancer</strong>.</p><p>Unlike client-side discovery, the client does not need to query the service registry directly or perform any load balancing itself. </p><p>Instead, the client simply sends a request to a central server (load balancer or api gateway), which handles the rest.</p><h4><strong>How it works:</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png\" width=\"600\" height=\"397.6284584980237\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:503,&quot;width&quot;:759,&quot;resizeWidth&quot;:600,&quot;bytes&quot;:44548,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/IN9jYSm\">Multiplayer</a></strong></figcaption></figure></div><ol><li><p><strong>Service Registration: </strong>Services register themselves with a centralized <strong>service registry</strong>, similar to client-side discovery.</p><ul><li><p>The service registry keeps track of all service instances, their IP addresses, ports, and metadata.</p></li></ul></li><li><p><strong>Client Sends Request: </strong>The client sends a request to a <strong>load balancer</strong> or <strong>API gateway</strong>, specifying the service it wants to communicate with (e.g., <code>payment-service</code>).</p><ul><li><p>The client does not query the service registry or know the specific location of the service instances.</p></li></ul></li><li><p><strong>Server Queries the Service Registry: </strong>The load balancer or gateway queries the service registry to find available instances of the requested service.</p></li><li><p><strong>Routing: </strong>The load balancer selects a suitable service instance (based on factors like load, proximity, or health) and routes the client&#8217;s request to that instance.</p></li><li><p><strong>Response: </strong>The service instance processes the request and sends the response back to the client via the load balancer or gateway.</p></li></ol><h4>Example Workflow</h4><p>Let&#8217;s take an example of an e-commerce platform with microservices for \"Order Management\" and \"Payment Processing.\"</p><ol><li><p><strong>Registration: </strong>The <code>PaymentService</code> registers two instances with the service registry:</p><ul><li><p>Instance 1: <code>IP1:8080</code></p></li><li><p>Instance 2: <code>IP2:8081</code></p></li></ul></li><li><p><strong>Client Request: </strong>The <code>OrderService</code> sends a request to the <strong>load balancer</strong> or API gateway, specifying the <code>PaymentService</code>.</p></li><li><p><strong>Discovery and Routing: </strong>The load balancer queries the service registry and retrieves the list of available <code>PaymentService</code> instances.</p><ul><li><p>It selects one instance (e.g., <code>IP1:8080</code>) and routes the request to it.</p></li></ul></li><li><p><strong>Processing and Response: </strong>The selected instance of <code>PaymentService</code> processes the request and sends the response back to the <code>OrderService</code> via the load balancer.</p></li></ol><h4><strong>Advantages</strong>:</h4><ul><li><p>Centralizes discovery logic, reducing the complexity for consumers.</p></li><li><p>Easier to manage and update discovery protocols.</p></li></ul><h4><strong>Disadvantages</strong>:</h4><ul><li><p>Introduces an additional network hop.</p></li><li><p>The load balancer can become a single point of failure.</p></li></ul><blockquote><p><strong>Example</strong>: AWS Elastic Load Balancer (ELB) integrates with the AWS service registry for server-side discovery.</p></blockquote><h2><strong>5. Best Practices for Implementing Service Discovery</strong></h2><ol><li><p><strong>Choose the Right Model: </strong>Use client-side discovery for custom load balancing and server-side for centralized routing.</p></li><li><p><strong>Ensure High Availability: </strong>Replicate the service registry and test failover scenarios to prevent downtime. Deploy multiple instances of the service registry to avoid single points of failure.</p></li><li><p><strong>Automate Registration: </strong>Use self-registration, sidecars, or orchestration tools for dynamic environments. Ensure proper deregistration of stale services.</p></li><li><p><strong>Use Health Checks: </strong>Monitor service health and remove failing instances automatically.</p></li><li><p><strong>Follow Naming Conventions: </strong>Use clear, unique service names with versioning to avoid conflicts (e.g., <code>payment-service-v1</code>).</p></li><li><p><strong>Caching</strong>: Use caching mechanisms to reduce the load on the service registry and improve discovery performance.</p></li><li><p><strong>Scalability</strong>: Ensure that the service discovery system can scale with the growth of your services.</p></li></ol><h2>6. Conclusion</h2><p>Service discovery may not be the most glamorous aspect of distributed systems, but it is undoubtedly one of the most essential. </p><p>Think of service discovery as the address book of your microservices architecture. Without it, scaling and maintaining distributed systems would be chaotic.</p><p>It serves as the backbone that enables the seamless communication and coordination between services, allowing complex applications to function reliably and efficiently.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/service-discovery-in-distributed-systems?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>",
      "flags": null,
      "enclosureUrl": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a488430-72c0-45da-b076-0c278f7b1b0d_759x503.png",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Replace \"hub\" by \"ingest\" in GitHub URLs for a prompt-friendly extract",
      "url": "https://gitingest.com/",
      "date": 1733412289,
      "author": "cyclotruc",
      "unread": true,
      "desc": "",
      "content": "\n<p>Gitingest is a open-source micro dev-tool that I made over the last week.<p>It turns any public Github repository into a text\nextract that you can give to your favourite LLM easily.<p>Today I added this url trick to make it even easier to use!<p>How I use it myself:\n- Quickly generate a README.md boilerplate for a project\n- Ask LLMs questions about an undocumented codebase<p>It is still very much work in progress and I plan to add many more options (file size limits, exclude patterns..) and a public API<p>I hope this tool can help you\nYour feedback is very valuable to help me prioritize\nAnd contributions are welcome!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42329071\">https://news.ycombinator.com/item?id=42329071</a></p>\n<p>Points: 172</p>\n<p># Comments: 47</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Fine-Grained Authorization for Retrieval Augmented Generation",
      "url": "https://www.youtube.com/watch?v=74G7Pwnaj_U",
      "date": 1733421334,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/74G7Pwnaj_U?version=3",
      "enclosureMime": ""
    },
    {
      "title": "Agentic Dev Tools Directory for the Community [Free Listing & Access]",
      "url": "https://www.reddit.com/r/programming/comments/1h7fk3w/agentic_dev_tools_directory_for_the_community/",
      "date": 1733422103,
      "author": "/u/kingai404",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kingai404\"> /u/kingai404 </a> <br/> <span><a href=\"https://directory.composio.dev/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7fk3w/agentic_dev_tools_directory_for_the_community/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "ChatGPT Pro",
      "url": "https://openai.com/index/introducing-chatgpt-pro/",
      "date": 1733422171,
      "author": "meetpateltech",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://openai.com/index/introducing-chatgpt-pro/\">https://openai.com/index/introducing-chatgpt-pro/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42330732\">https://news.ycombinator.com/item?id=42330732</a></p>\n<p>Points: 775</p>\n<p># Comments: 1111</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Boa JavaScript engine v0.20 released",
      "url": "https://www.reddit.com/r/rust/comments/1h7gdgu/boa_javascript_engine_v020_released/",
      "date": 1733424122,
      "author": "/u/Jayflux1",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>We have released Boa v0.20: </p> <p><a href=\"https://boajs.dev/blog/2024/12/05/boa-release-020\">https://boajs.dev/blog/2024/12/05/boa-release-020</a></p> <p>In this release, we have made continuing progress on Temporal and other TC39 upcoming specifications, performance optimizations and requested runtime features.</p> <p>Our <a href=\"https://boajs.dev/benchmarks\">benchmarks </a>are showing we&#39;re moving in the right direction and conformance to the specification is also increasing. Check out the full release post or the <a href=\"https://github.com/boa-dev/boa/blob/v0.20/CHANGELOG.md\">changelog</a> for more information!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Jayflux1\"> /u/Jayflux1 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h7gdgu/boa_javascript_engine_v020_released/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7gdgu/boa_javascript_engine_v020_released/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "I created nouveau-smi: A nvidia-smi equivalent for Nouveau using Go",
      "url": "https://www.reddit.com/r/linux/comments/1h7gndg/i_created_nouveausmi_a_nvidiasmi_equivalent_for/",
      "date": 1733424799,
      "author": "/u/Fascinating_Destiny",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fascinating_Destiny\"> /u/Fascinating_Destiny </a> <br/> <span><a href=\"https://i.redd.it/bjgr6urqt25e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7gndg/i_created_nouveausmi_a_nvidiasmi_equivalent_for/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Banan-OS, an Unix-like operating system written from scratch",
      "url": "https://github.com/Bananymous/banan-os",
      "date": 1733424854,
      "author": "Bananymous",
      "unread": true,
      "desc": "",
      "content": "\n<p>This is my operating system that I've been working for the past 2 years. All of the code is written exclusively by me except from ported software. banan-os has a monolithic kernel targeting x86 (i686) and x86_64 architectures. The project consists of bootloader, kernel and userspace libraries (libc, libGUI, libFont, ...). It also uses my custom C++ standard library partly based on stdc++.<p>Currently I have basic TTY and GUI environment with some of the basic UNIX utilities like cp, ls and stat. I have basic support for USB (keyboard/mouse/storage), disks (NVMe, AHCI), custom networking stack with TCP and UDP support, and a UNIX-like filesystem with /dev /tmp /proc filesystems.<p>The whole project is written in  C++ except for my BIOS bootloader that is written in 16-bit real mode assembly. I have been testing the OS mainly on virtual machines but also frequently on real hardware.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42331270\">https://news.ycombinator.com/item?id=42331270</a></p>\n<p>Points: 308</p>\n<p># Comments: 55</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Example app with SAML support, built with Go + net/http + SSOReady",
      "url": "https://www.reddit.com/r/golang/comments/1h7hi6g/example_app_with_saml_support_built_with_go/",
      "date": 1733426929,
      "author": "/u/Asleep_Beyond1371",
      "unread": true,
      "desc": "",
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1h7hi6g/example_app_with_saml_support_built_with_go/\"> <img src=\"https://external-preview.redd.it/HK4riNmOY7SfP4w_qxXUGvcAMwJ_gx8NVPCSJ9ZSiHA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1d7179be5d1286b75919ec2db720f59a298e4d26\" alt=\"Example app with SAML support, built with Go + net/http + SSOReady\" title=\"Example app with SAML support, built with Go + net/http + SSOReady\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Asleep_Beyond1371\"> /u/Asleep_Beyond1371 </a> <br/> <span><a href=\"https://github.com/ssoready/ssoready-example-app-golang-saml\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7hi6g/example_app_with_saml_support_built_with_go/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Thousands of (fake?) downloads on crates.io",
      "url": "https://www.reddit.com/r/rust/comments/1h7hqfi/thousands_of_fake_downloads_on_cratesio/",
      "date": 1733427500,
      "author": "/u/wowisthatreal",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve published a few crates on <a href=\"http://crates.io\">crates.io</a> that I don&#39;t really think anyone but me really would have any interest in, and I&#39;ve searched far and wide for anything that uses a part of my crate. Yet when looking at my download statistics, I have around 4000 lifetime downloads that spike at each version.</p> <p>Is there some sort of LLM content scraper/backup/research project that just periodically downloads crates? Do people try out new crates from the &quot;new releases&quot; page? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wowisthatreal\"> /u/wowisthatreal </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h7hqfi/thousands_of_fake_downloads_on_cratesio/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7hqfi/thousands_of_fake_downloads_on_cratesio/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Bjarne Stroustrup: Why you should avoid Linked Lists",
      "url": "https://www.reddit.com/r/programming/comments/1h7ikrt/bjarne_stroustrup_why_you_should_avoid_linked/",
      "date": 1733429614,
      "author": "/u/Probable_Foreigner",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Probable_Foreigner\"> /u/Probable_Foreigner </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=YQs6IC-vgmo\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7ikrt/bjarne_stroustrup_why_you_should_avoid_linked/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "This Week in Rust #576",
      "url": "https://www.reddit.com/r/rust/comments/1h7jacb/this_week_in_rust_576/",
      "date": 1733431384,
      "author": "/u/cdmistman",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/cdmistman\"> /u/cdmistman </a> <br/> <span><a href=\"https://this-week-in-rust.org/blog/2024/12/04/this-week-in-rust-576\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7jacb/this_week_in_rust_576/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why Clean Architecture and Over-Engineered Layering Don’t Belong in GoLang",
      "url": "https://www.reddit.com/r/golang/comments/1h7jajk/why_clean_architecture_and_overengineered/",
      "date": 1733431399,
      "author": "/u/Superb-Key-6581",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Stop forcing Clean Architecture and similar patterns into GoLang projects. GoLang is not Java. There’s no application size or complexity that justifies having more than three layers. Architectures like Clean, Hexagonal, or anything with 4+ layers make GoLang projects unnecessarily convoluted.</p> <p>It’s frustrating to work on a codebase where you’re constantly jumping between excessive layers—unnecessary DI, weird abstractions, and use case layers that do nothing except call services with a few added logs. It’s like watching a monstrosity throw exceptions up and down without purpose.</p> <p>In GoLang, you only need up to three layers for a proper DDD division (app, domain, infra). Anything more is pure overengineering. I get why this is common in Java—explicit interfaces and painful refactoring make layering and DI appealing—but GoLang doesn’t have those constraints. Its implicit interfaces make such patterns redundant.</p> <p>These overly complex architectures are turning the GoLang ecosystem into something it was never meant to be. Please let’s keep GoLang simple, efficient, and aligned with its core philosophy. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Superb-Key-6581\"> /u/Superb-Key-6581 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h7jajk/why_clean_architecture_and_overengineered/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7jajk/why_clean_architecture_and_overengineered/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Apparent supply chain attack Ultralytics PyPI",
      "url": "https://www.reddit.com/r/programming/comments/1h7jev7/apparent_supply_chain_attack_ultralytics_pypi/",
      "date": 1733431699,
      "author": "/u/spareminuteforworms",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/spareminuteforworms\"> /u/spareminuteforworms </a> <br/> <span><a href=\"https://github.com/ultralytics/ultralytics/issues/18027\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7jev7/apparent_supply_chain_attack_ultralytics_pypi/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How do I achieve maximum density for bursty websites?",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h7jkrf/how_do_i_achieve_maximum_density_for_bursty/",
      "date": 1733432115,
      "author": "/u/assangeleakinglol",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m having trouble understanding how to use HPA and Cluster Autoscaling (Using AKS on azure) in an efficient manner. Say I have 100 websites running on AKS but they have very low usage (like 1-4% of a CPU core) 99% of the time. So in theory I could fit everything on 4 cores. So I set the requests to be 0.04 of a core. Everything is good because the load is low and the actual node still is at like 80% idle. Now the load increases and everything is good because I have no cpu limit and it will use consume the idle resources. Now the load increases even more and suddenly there is trouble because the node can&#39;t keep up and the cluster autoscaler isn&#39;t scaling because the cpu-requests from the pods is low. Therefor I define a HPA and set it to scale at 80% CPU utilization. This turned out awful because now it scales when load reaches 80% of 0.04 of a core. The memory usage balloons and tons and tons of replicas and nodes are made.</p> <p>Is there a good solution to this?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/assangeleakinglol\"> /u/assangeleakinglol </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7jkrf/how_do_i_achieve_maximum_density_for_bursty/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7jkrf/how_do_i_achieve_maximum_density_for_bursty/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "kapi - a simplified k8s api and controller lib",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h7jwae/kapi_a_simplified_k8s_api_and_controller_lib/",
      "date": 1733432912,
      "author": "/u/comrade-quinn",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi folks,</p> <p>What the title says really...</p> <p>I&#39;ve recently put this together after extracting it from various forms of an embedded lib I&#39;ve used on personal projects over the last few months, with a view to using it to help me on a paid project I&#39;m involved with.</p> <p>I&#39;m looking for feedback and opinions mainly, but I also think a lot of people may find it useful, particularly if you find kubebuilder&#39;s approach frustrating (as I do)</p> <p>The full details and an example are in the <a href=\"https://github.com/comradequinn/kapi/blob/main/README.md\">README</a> and the lib itself is <a href=\"https://github.com/comradequinn/kapi\">here</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/comrade-quinn\"> /u/comrade-quinn </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7jwae/kapi_a_simplified_k8s_api_and_controller_lib/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7jwae/kapi_a_simplified_k8s_api_and_controller_lib/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Go API project",
      "url": "https://www.reddit.com/r/golang/comments/1h7k9kn/go_api_project/",
      "date": 1733433812,
      "author": "/u/RaspberryOk8319",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello everyone, </p> <p>A couple of months ago I started building an api to handle some basic stuff for my backend like fetching services and vendors. I was watching Anthony gg at the time and in particular his api 5-part playlist videos where he builds an api from scratch with minimal dependencies.<br/> It kinda happened very fast but as of right now my api.go file is handling about 35 endpoints varying from add vendors to add products and I am planning on adding endpoints for ordering as well.<br/> I had experience with go in the past but I have never made anything similar to this. So is there any suggestions or recommendations you can give me for breaking down this api.go file into several other packages and kinda organize things more efficiently ?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/RaspberryOk8319\"> /u/RaspberryOk8319 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h7k9kn/go_api_project/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7k9kn/go_api_project/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The Rust Foundation's Plan to Grow the Pool of Well-Trained Rust Developers",
      "url": "https://developers.slashdot.org/story/24/12/05/2222220/the-rust-foundations-plan-to-grow-the-pool-of-well-trained-rust-developers?utm_source=rss1.0mainlinkanon&utm_medium=feed",
      "date": 1733437500,
      "author": "EditorDavid",
      "unread": true,
      "desc": "",
      "content": "\"The Rust Foundation is dedicated to ensuring a healthy Rust ecosystem,\" according to a new announcement today, \" which depends on a growing pool of well-trained developers to thrive.\"\n\nThe latest SlashData Developer Nation survey found Rust to be the fastest-growing programming language, doubling its users over the past two years. As Rust's adoption continues to accelerate, the demand for a multifaceted ecosystem of quality training will too.\n \n\nTheir blog post highlights three examples of the Rust community \"creating new pathways for learning Rust\" and \"addressing the critical need for Rust training in academic settings...\"\n\n\nRust-Edu operates as a non-profit through Portland State University, with funding from Futurewei. Their mission is to \"spread Rust use and development through academic curricula and communities throughout the world, making Rust the language of choice for 'systems programming' in its broadest sense through shared efforts of faculty, students and the Rust community.\" They focus on three main areas: curriculum development, educational tools, and language improvements... \n\n\nteach-rs, pronounced \"teachers,\" is a modular and reusable university course designed for in-person teaching in Rust. Its mission is to introduce Rust in higher education and ensure that more students enter the job market with considerable Rust experience. The teach-rs project provides ready-to-use Rust teaching materials, including slide decks and exercises that can be adapted to various teaching contexts... As an open source permissively licensed project, teach-rs enables educators to share and improve resources, making introducing Rust instruction into their programs more accessible. Many institutions now use teach-rs in their courses, including the Slovak University of Technology, RustIEC (a collaboration between Vrije Universiteit Brussel and KU Leuven), and the University Politehnica of Bucharest. At the time of this writing, teach-rs has nearly 3000 stars on GitHub... \n\nUnder the guidance of The Rust Foundation's Global Rust Coordinator and Rust Nation UK's organizer Ernest Kissiedu, Mordecai Etukudo (Mart) has developed a guide to help educational institutions adopt Rust in their systems. This resource walks organizations through the entire implementation process, from initial assessment to community engagement.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=The+Rust+Foundation's+Plan+to+Grow+the+Pool+of+Well-Trained+Rust+Developers%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F05%2F2222220%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F05%2F2222220%2Fthe-rust-foundations-plan-to-grow-the-pool-of-well-trained-rust-developers%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/05/2222220/the-rust-foundations-plan-to-grow-the-pool-of-well-trained-rust-developers?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why Open Source UI Design Sucks",
      "url": "https://www.reddit.com/r/programming/comments/1h7muqe/why_open_source_ui_design_sucks/",
      "date": 1733440551,
      "author": "/u/bizzehdee",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bizzehdee\"> /u/bizzehdee </a> <br/> <span><a href=\"https://www.darrenhorrocks.co.uk/why-open-source-ui-design-sucks/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7muqe/why_open_source_ui_design_sucks/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Portland airport grows with expansive mass timber roof canopy",
      "url": "https://design-milk.com/portland-airport-grows-with-expansive-mass-timber-roof-canopy/",
      "date": 1733443313,
      "author": "surprisetalk",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://design-milk.com/portland-airport-grows-with-expansive-mass-timber-roof-canopy/\">https://design-milk.com/portland-airport-grows-with-expansive-mass-timber-roof-canopy/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42334323\">https://news.ycombinator.com/item?id=42334323</a></p>\n<p>Points: 375</p>\n<p># Comments: 233</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The correct amount of ads is zero",
      "url": "https://manuelmoreale.com/the-correct-amount-of-ads-is-zero",
      "date": 1733443347,
      "author": "surprisetalk",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://manuelmoreale.com/the-correct-amount-of-ads-is-zero\">https://manuelmoreale.com/the-correct-amount-of-ads-is-zero</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42334327\">https://news.ycombinator.com/item?id=42334327</a></p>\n<p>Points: 760</p>\n<p># Comments: 500</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Intel’s board, and an example of when boards and short-termism fail",
      "url": "https://www.fabricatedknowledge.com/p/the-death-of-intel-when-boards-fail",
      "date": 1733445863,
      "author": "LarsDu88",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.fabricatedknowledge.com/p/the-death-of-intel-when-boards-fail\">https://www.fabricatedknowledge.com/p/the-death-of-intel-when-boards-fail</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42334697\">https://news.ycombinator.com/item?id=42334697</a></p>\n<p>Points: 319</p>\n<p># Comments: 232</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What's Missing From Golang Generics?",
      "url": "https://www.reddit.com/r/golang/comments/1h7sccx/whats_missing_from_golang_generics/",
      "date": 1733456671,
      "author": "/u/nick_at_dolt",
      "unread": true,
      "desc": "",
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1h7sccx/whats_missing_from_golang_generics/\"> <img src=\"https://external-preview.redd.it/_59Nwz4qwk2TxmiNHif5Zxt8nt1zuXEYXd9npdKB1XY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6c2948fbfe9b275def2fd8b5ad0b0e91327345ba\" alt=\"What's Missing From Golang Generics?\" title=\"What's Missing From Golang Generics?\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/nick_at_dolt\"> /u/nick_at_dolt </a> <br/> <span><a href=\"https://www.dolthub.com/blog/2024-12-05-whats-missing-from-golang-generics/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7sccx/whats_missing_from_golang_generics/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Trailbase: Fast, single-file, open-source app server built using Rust and SQLite",
      "url": "https://github.com/trailbaseio/trailbase",
      "date": 1733457619,
      "author": "thunderbong",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://github.com/trailbaseio/trailbase\">https://github.com/trailbaseio/trailbase</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42336207\">https://news.ycombinator.com/item?id=42336207</a></p>\n<p>Points: 271</p>\n<p># Comments: 89</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "A Map of Software Engineering Pay in US",
      "url": "https://www.reddit.com/r/programming/comments/1h7tt35/a_map_of_software_engineering_pay_in_us/",
      "date": 1733461586,
      "author": "/u/fagnerbrack",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/fagnerbrack\"> /u/fagnerbrack </a> <br/> <span><a href=\"https://www.levels.fyi/heatmap\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7tt35/a_map_of_software_engineering_pay_in_us/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "The 70% problem: Hard truths about AI-assisted coding",
      "url": "https://addyo.substack.com/p/the-70-problem-hard-truths-about",
      "date": 1733461871,
      "author": "mooreds",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://addyo.substack.com/p/the-70-problem-hard-truths-about\">https://addyo.substack.com/p/the-70-problem-hard-truths-about</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42336553\">https://news.ycombinator.com/item?id=42336553</a></p>\n<p>Points: 494</p>\n<p># Comments: 374</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Linux 6.12 confirmed as LTS kernel",
      "url": "https://www.reddit.com/r/linux/comments/1h7ucho/linux_612_confirmed_as_lts_kernel/",
      "date": 1733463482,
      "author": "/u/gabriel_3",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gabriel_3\"> /u/gabriel_3 </a> <br/> <span><a href=\"https://www.kernel.org/category/releases.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ucho/linux_612_confirmed_as_lts_kernel/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Final Year Project Idea",
      "url": "https://www.reddit.com/r/golang/comments/1h7vwpg/final_year_project_idea/",
      "date": 1733469547,
      "author": "/u/noobgopher",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello everyone,</p> <p>I’m currently in the final year of my B.Tech in Computer Science and Engineering. I’m looking for project ideas that integrate Machine Learning, Golang, and Web Development. Specifically, I’m interested in full-stack machine learning projects.</p> <p>I would appreciate your suggestions!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/noobgopher\"> /u/noobgopher </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h7vwpg/final_year_project_idea/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7vwpg/final_year_project_idea/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Loco v0.13 released: background jobs w/SQLite, jobs admin UI, new rhai-based starter generator",
      "url": "https://www.reddit.com/r/rust/comments/1h7w3ai/loco_v013_released_background_jobs_wsqlite_jobs/",
      "date": 1733470348,
      "author": "/u/jondot1",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p><a href=\"http://Loco.rs\">Loco.rs</a> <strong>v0.13.x has been released</strong> with over 40 new additions and fixes (our biggest version yet).</p> <p>Our focus for this milestone was:</p> <p>* <a href=\"https://github.com/loco-rs/loco/tree/master/loco-new\">The new starter generator</a>. With a bit of smart engineering, much more powerful and flexible. A Loco starter is now described with a <code>rhai</code> script, which prepares the ground for anyone to create their own Loco starters, see our default one here: <a href=\"https://github.com/loco-rs/loco/blob/master/loco-new/setup.rhai\">https://github.com/loco-rs/loco/blob/master/loco-new/setup.rhai</a></p> <p>* First class <a href=\"https://loco.rs/docs/processing/workers/\">background jobs</a> experience. We now support <code>sqlite</code> as well as: <code>postgres</code>, <code>redis</code> (<code>valkey</code>), <code>async</code> (threads), <code>foreground</code>.</p> <p>* <a href=\"https://github.com/loco-rs/admin-jobs\">Background jobs admin</a>, standalone project with UI and all, <a href=\"https://github.com/loco-rs/admin-jobs\">https://github.com/loco-rs/admin-jobs</a>, built on Loco, to manage your background jobs with ease.</p> <p>If you haven&#39;t yet given Loco a try, start here: <a href=\"https://loco.rs/docs/getting-started/tour/\">https://loco.rs/docs/getting-started/tour/</a> . It takes 5 minutes to get a full CRUD app running with authentication and everything.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jondot1\"> /u/jondot1 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h7w3ai/loco_v013_released_background_jobs_wsqlite_jobs/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7w3ai/loco_v013_released_background_jobs_wsqlite_jobs/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Performance comparison of various golang web frameworks with stdlib",
      "url": "https://www.reddit.com/r/golang/comments/1h7wbai/performance_comparison_of_various_golang_web/",
      "date": 1733471322,
      "author": "/u/cant-find-user-name",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>So, one thing I have noticed happen very frequently is that people pick up fiber or fasthttp to be their http framework of choice because fiber is so much more performant* than stdlib. Even though fiber docs itself say not to choose fiber unless you have really really good reasons (because most middlewares aren&#39;t compatibile with it, it doesn&#39;t implement the full http spec etc), people still pick it. In vast, vast, vast majority of usecases, the web framework&#39;s performance doesn&#39;t matter except in whiteroom benchmarks. You add one db call, one network request, hell one json parsing operation of a decent payload size, and the web framework&#39;s impact becomes infinetisimally small.</p> <p>But anyway, I came across this video recently: <a href=\"https://youtu.be/iPnMPnelWOE?si=QUpd3N5KD9LQ2foM\">https://youtu.be/iPnMPnelWOE?si=QUpd3N5KD9LQ2foM</a> and wanted to share it here. In the benchmarks that invovle json parsing and interacting with postgres, stdlib performs the best (and the difference is in the order of microseconds, it doesn&#39;t matter), and even in barebones test, stdlib performs better until 15k RPS. 15k RPS is very very high, I guarantee you that if one of your webservers has to meet 15k rps, there&#39;s many other things you have to worry about before the framework choice.</p> <p>If you want to choose something other than stdlib for the sake of ergonomics, that is 100% valid and I am not against it. But don&#39;t make that choice in the name of performance unless you have a very specific kind of traffic.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/cant-find-user-name\"> /u/cant-find-user-name </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1h7wbai/performance_comparison_of_various_golang_web/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1h7wbai/performance_comparison_of_various_golang_web/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why is u32/i32 faster than u8?",
      "url": "https://www.reddit.com/r/rust/comments/1h7wqx6/why_is_u32i32_faster_than_u8/",
      "date": 1733473272,
      "author": "/u/ClimberSeb",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I solved day 5&#39;s advent of code problem with a rust program.</p> <p>There I mainly used <span class=\"md-spoiler-text\">Vec::sort_by, a HashSet::&lt;(i32, i32)&gt; plus some recursive depth first search</span> to solve it.</p> <p>At first I didn&#39;t bother checking how big/small the numbers is in my input so I just used an i32 to store them.</p> <p>After getting the right answer I was curious to see how much faster the code would be with the &quot;right&quot; datatype so I changed the numbers to u8. Then the code ran ~50% slower! I tried with i8, i16, u16 all with about the same performance as using u8. Changing to u32 didn&#39;t make a difference compared to i32, and using u64/i64 made it 73% slower.</p> <p>I don&#39;t know the x86_64 instructions, but I&#39;ve assumed the cost of widening the types would be free on a superscalar architecture even if it needed special instructions to do so. What else could cause the slowdown? Worse hashing performance?</p> <p>---- Edit after comments:</p> <p>The code is here: <a href=\"https://pastebin.com/y0xVWHfs\">https://pastebin.com/y0xVWHfs</a></p> <p>It uses these crates:<br/> aoc-runner = &quot;0.3.0&quot;<br/> aoc-runner-derive = &quot;0.3.0&quot;</p> <p>but one could just include the input file and add a main that calls input_generator with it, followed by calling solve_part2 with the result from input_generator.</p> <p>I&#39;ve benchmarked it with cargo-aoc bench, it compiles the code in release mode when benchmarking. It only benchmarks the solve_part2 function, not the input_generator call.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ClimberSeb\"> /u/ClimberSeb </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1h7wqx6/why_is_u32i32_faster_than_u8/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7wqx6/why_is_u32i32_faster_than_u8/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Y'all seen the 6.10 bsod.. but did y'all see a BLUE BACKGROUND KERNEL PANIC?",
      "url": "https://www.reddit.com/r/linux/comments/1h7ws5n/yall_seen_the_610_bsod_but_did_yall_see_a_blue/",
      "date": 1733473432,
      "author": "/u/akanezzx",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>That&#39;s isn&#39;t reflection since my screen brightness isn&#39;t bright enough to reflect black to blue. It&#39;s weird too because there&#39;s NO INFORMATION ABOUR THIS ONLINE except the windows bsod and 6.10 bsod. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/akanezzx\"> /u/akanezzx </a> <br/> <span><a href=\"https://i.redd.it/50ujup2iu65e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ws5n/yall_seen_the_610_bsod_but_did_yall_see_a_blue/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "ChatLoopBackOff - Episode 38 (Copacetic)",
      "url": "https://www.youtube.com/watch?v=8eBaDvNQckY",
      "date": 1733474865,
      "author": "CNCF [Cloud Native Computing Foundation]",
      "unread": true,
      "desc": "",
      "content": "Copacetic, also known as \"Copa,\" is an open-source project designed to streamline container security by addressing vulnerabilities directly within container images. The tool is primarily a command-line interface (CLI) application that allows users to patch container image vulnerabilities based on scanning results from tools like Trivy. The main advantage is that it enables patching without the need to rebuild the entire container image, offering a faster and more efficient approach to securing containers. Join CNCF Ambassador Oluebube Princess Egbuna as she explores Copa for the first time!",
      "flags": null,
      "enclosureUrl": "https://www.youtube.com/v/8eBaDvNQckY?version=3",
      "enclosureMime": ""
    },
    {
      "title": "The 70% problem: Hard truths about AI-assisted coding",
      "url": "https://www.reddit.com/r/programming/comments/1h7xwvm/the_70_problem_hard_truths_about_aiassisted_coding/",
      "date": 1733478607,
      "author": "/u/_srbhr_",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/_srbhr_\"> /u/_srbhr_ </a> <br/> <span><a href=\"https://addyo.substack.com/p/the-70-problem-hard-truths-about\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1h7xwvm/the_70_problem_hard_truths_about_aiassisted_coding/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Debian opens a can of username worms",
      "url": "https://lwn.net/SubscriberLink/1000485/670ef0045e5e8a3e/",
      "date": 1733478918,
      "author": "jwilk",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://lwn.net/SubscriberLink/1000485/670ef0045e5e8a3e/\">https://lwn.net/SubscriberLink/1000485/670ef0045e5e8a3e/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42338134\">https://news.ycombinator.com/item?id=42338134</a></p>\n<p>Points: 119</p>\n<p># Comments: 146</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Rustc Trait System Refactor Initiative Update: Stabilizing `-Znext-solver=coherence` | Inside Rust Blog",
      "url": "https://www.reddit.com/r/rust/comments/1h7y9jp/rustc_trait_system_refactor_initiative_update/",
      "date": 1733480161,
      "author": "/u/slanterns",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/slanterns\"> /u/slanterns </a> <br/> <span><a href=\"https://blog.rust-lang.org/inside-rust/2024/12/04/trait-system-refactor-initiative.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1h7y9jp/rustc_trait_system_refactor_initiative_update/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Hacker Herald – like HN but with crowdsourced pics and subtitles",
      "url": "https://hackerherald.com/",
      "date": 1733480554,
      "author": "MarkMc",
      "unread": true,
      "desc": "",
      "content": "\n<p>Hi folks this is a project I worked on with some of my students when I was running an online JS programming course.  Although the online course is no more, I finally got around to releasing Hacker Herald with a former instructor and student - thanks Arnav and Archis!<p>To those wondering if there is a need for such a Hacker News front end, I would just point out that most newspaper websites are laid out like this - clearly some people like this kind of layout!<p>Also for some stories a picture really does help - currently there is a HN story titled, \"Portland airport grows with expansive mass timber roof canopy\".  But IMO it's better to actually see a picture of the timber roof while scrolling rather than having to click through to the article.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42338327\">https://news.ycombinator.com/item?id=42338327</a></p>\n<p>Points: 150</p>\n<p># Comments: 59</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Kubernetes-friendly wiki?",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h7yjj9/kubernetesfriendly_wiki/",
      "date": 1733481365,
      "author": "/u/Fudd79",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve been looking for a good wiki-engine that can run on k8s, with replicas. My old goto wikis (BookStack and DokuWiki) don&#39;t really seem to fit too well. (It&#39;s worth mentioning that I&#39;m a k8s-newb, so I might have misunderstood things regarding BookStack.)</p> <p>Searching the web for alternatives is rather hard since I get a lot of results that are wikis about k8s, or links to the kubernetes-article on Wikipedia etc. I have however found Wiki.js which seems to have a good kubernetes install-guide.</p> <p>Anyone know of any alternatives? (I&#39;m pretty sure MediaWiki supports it, I just don&#39;t like that wiki&#39;s look).</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fudd79\"> /u/Fudd79 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7yjj9/kubernetesfriendly_wiki/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7yjj9/kubernetesfriendly_wiki/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Weekly: Share your victories thread",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h7yvj1/weekly_share_your_victories_thread/",
      "date": 1733482809,
      "author": "/u/gctaylor",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Got something working? Figure something out? Make progress that you are excited about? Share here!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gctaylor\"> /u/gctaylor </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7yvj1/weekly_share_your_victories_thread/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h7yvj1/weekly_share_your_victories_thread/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why Flatpak is a Blessing for Linux Beginners and Everyday Users",
      "url": "https://www.reddit.com/r/linux/comments/1h7ze64/why_flatpak_is_a_blessing_for_linux_beginners_and/",
      "date": 1733484915,
      "author": "/u/MaleficentTry1316",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I swear by Flatpak. It has made Linux so much more accessible for beginners and casual users who aren&#39;t interested in diving deep into the inner workings of Linux but just want to use their PC without relying on Windows.</p> <p>I get that Flatpak has its downsides, like consuming more storage space in general, but the benefits far outweigh these negatives. Before I started using Flatpak, and was relying on traditional package managers like apt or dnf, I would always run into issues after a while that I had to Google and troubleshoot (of course, that&#39;s part of the IT life). Dependency problems and other headaches were a constant struggle. But ever since I switched to Flatpak, I can reliably expect my PC to just work about 98% of the time.</p> <p>Learning Linux in-depth is great, especially in a VM where you don&#39;t have to worry about losing important data—it&#39;s fun to break things and figure out how to fix them. But if you&#39;re just looking to have a working PC without all the hassle of configuring things or dealing with weird issues, Flatpak is a godsend.</p> <p>Canonical does something similar with Snap, and I fully understand the dislike people have for Snap. However, I think the containerized way of installing software is exactly what non-tech-savvy users need when they want a working PC without the need of using Windows.</p> <p>I’m sure Flatpak has its own downsides if you dig deeper, but for the average user, it’s a massive positive addition to Linux.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/MaleficentTry1316\"> /u/MaleficentTry1316 </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ze64/why_flatpak_is_a_blessing_for_linux_beginners_and/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h7ze64/why_flatpak_is_a_blessing_for_linux_beginners_and/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Prompt Engine – Auto pick LLMs based on your prompts",
      "url": "https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine",
      "date": 1733489148,
      "author": "yoeven",
      "unread": true,
      "desc": "",
      "content": "\n<p>Nowadays, a common AI tech stack has hundreds of different prompts running across different LLMs.<p>Three key problems:<p>- Choices, picking from 100s of LLMs the best LLM for that 1 prompt is gonna be challenging, you're probably not picking the most optimized LLM for a prompt you wrote.<p>- Scaling/Upgrading, similar to choices but you want to keep consistency of your output even when models depreciate or configurations change.<p>- Prompt management is scary, if something works, you'll never want to touch it but you should be able to without fear of everything breaking.<p>So we launched Prompt Engine which automatically runs your prompts for you on the best LLM every single time with all the tools like internet access. You can also store prompts for reusability and caching which increases performance on every run.<p>How it works?<p>tldr, we built a really small model that is trained on datasets comparing 100s of LLMs that can automatically pick a model based on your prompt.<p>Here's an article explaining the details: <a href=\"https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-moa-outperform-any-single-llm-and-reduce-cost-with-prompt-engine\" rel=\"nofollow\">https://jigsawstack.com/blog/jigsawstack-mixture-of-agents-m...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339302\">https://news.ycombinator.com/item?id=42339302</a></p>\n<p>Points: 69</p>\n<p># Comments: 12</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What do you think about my new Home Server?",
      "url": "https://www.reddit.com/r/linux/comments/1h814g1/what_do_you_think_about_my_new_home_server/",
      "date": 1733491009,
      "author": "/u/La_wand",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/La_wand\"> /u/La_wand </a> <br/> <span><a href=\"https://i.redd.it/e1wpcyb2r75e1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h814g1/what_do_you_think_about_my_new_home_server/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Need suggestions/ideas for cutting aws data transfer cost.",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h816y6/need_suggestionsideas_for_cutting_aws_data/",
      "date": 1733491230,
      "author": "/u/h3xport",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Our next.js app is communicating with the .Net backend via publicly exposed LB/domain via ingress controller. This communication is adding to the data cost of our cloud as the communication is public. As per my knowledge, there is no way around for this as most of the things are rendered on the browser of users &amp; we can&#39;t omit a publically exposed API from the architecture. Can anyone suggest a concept or anything you have used in such scenarios, where requests from users are served via ingress &amp; internal calls from frontend microservice to backend microservice are served locally...?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/h3xport\"> /u/h3xport </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h816y6/need_suggestionsideas_for_cutting_aws_data/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h816y6/need_suggestionsideas_for_cutting_aws_data/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Paid Software is Coming to Flathub",
      "url": "https://www.reddit.com/r/linux/comments/1h81a9d/paid_software_is_coming_to_flathub/",
      "date": 1733491522,
      "author": "/u/Zery12",
      "unread": true,
      "desc": "",
      "content": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Zery12\"> /u/Zery12 </a> <br/> <span><a href=\"https://i.redd.it/10e9fqy4c85e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1h81a9d/paid_software_is_coming_to_flathub/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Anyone has experience with Commvault backups for k8s?",
      "url": "https://www.reddit.com/r/kubernetes/comments/1h81cco/anyone_has_experience_with_commvault_backups_for/",
      "date": 1733491705,
      "author": "/u/Then-Treat1346",
      "unread": true,
      "desc": "",
      "content": "<!-- SC_OFF --><div class=\"md\"><p>We are preparing for a POC with Commvault for our k8s backups. We have 17 ROSA clusters which we want to protect.</p> <p>Since I’ll be working with configuring the backups, I wanted to know if this solution works well with ROSA in particular.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Then-Treat1346\"> /u/Then-Treat1346 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h81cco/anyone_has_experience_with_commvault_backups_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1h81cco/anyone_has_experience_with_commvault_backups_for/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Romanian court annuls result of presidential election first round",
      "url": "https://www.bbc.com/news/articles/cn4x2epppego",
      "date": 1733493349,
      "author": "vinni2",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.bbc.com/news/articles/cn4x2epppego\">https://www.bbc.com/news/articles/cn4x2epppego</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339819\">https://news.ycombinator.com/item?id=42339819</a></p>\n<p>Points: 140</p>\n<p># Comments: 207</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: BunkerWeb – The Open-Source Web Application Firewall (WAF)",
      "url": "https://github.com/bunkerity/bunkerweb",
      "date": 1733493608,
      "author": "bnkty",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://github.com/bunkerity/bunkerweb\">https://github.com/bunkerity/bunkerweb</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42339856\">https://news.ycombinator.com/item?id=42339856</a></p>\n<p>Points: 79</p>\n<p># Comments: 21</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Install postmarketOS on Android phone and use Docker as a home server",
      "url": "https://crackoverflow.com/docs/system_administration/containerization/install-docker-natively-on-android-phone-and-use-it-as-a-home-server/",
      "date": 1733494997,
      "author": "raybb",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://crackoverflow.com/docs/system_administration/containerization/install-docker-natively-on-android-phone-and-use-it-as-a-home-server/\">https://crackoverflow.com/docs/system_administration/containerization/install-docker-natively-on-android-phone-and-use-it-as-a-home-server/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42340065\">https://news.ycombinator.com/item?id=42340065</a></p>\n<p>Points: 152</p>\n<p># Comments: 60</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "ExxonMobil's Alleged Hack-for-Hire Campaign Targeting Climate Activists",
      "url": "https://www.vulnu.com/p/inside-exxonmobils-alleged-hack-for-hire-campaign-targeting-climate-activists",
      "date": 1733496896,
      "author": "ohjeez",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.vulnu.com/p/inside-exxonmobils-alleged-hack-for-hire-campaign-targeting-climate-activists\">https://www.vulnu.com/p/inside-exxonmobils-alleged-hack-for-hire-campaign-targeting-climate-activists</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42340346\">https://news.ycombinator.com/item?id=42340346</a></p>\n<p>Points: 193</p>\n<p># Comments: 42</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Mozilla Announces 'JavaScriptmas' - Daily Coding Challenges with a Chance at Prizes",
      "url": "https://tech.slashdot.org/story/24/12/04/0138255/mozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes?utm_source=rss1.0mainlinkanon&utm_medium=feed",
      "date": 1733499240,
      "author": "EditorDavid",
      "unread": true,
      "desc": "",
      "content": "Mozilla's developer blog is announcing \"JavaScriptmas\".\n\n [F]rom December 1st to December 24th, we will release a fun, daily coding challenge for you to solve on [code-learning platform] Scrimba. Each challenge comes with an introductory screencast called \"scrim\", some starter code, and then it's your turn to fill in the gaps. \n\nJavaScriptmas is about coding, learning, and the chance to win exciting prizes. Two lucky coders will be chosen as winners at the end of JavaScriptmas, and each will win a MacBook Air M3, swag from MDN and Scrimba, and a lifetime Scrimba Pro membership (worth ~$200 per year). The Scrimba membership will give you access to all courses, including the Frontend Developer Career Path based on the MDN curriculum. \nMost of the challenges will evolve around JavaScript algorithms. You will also practice subjects like DOM manipulation, UI design, CSS, accessibility, and even a bit of cyber security. The challenges are a collaborative effort from Scrimba teachers, mentors, and MDN content writers, all with the goal of turning you into a more well-rounded web developer. \nWinners will be chosen randomly from everyone who submits correct solutions. We want JavaScriptmas to be accessible for both beginners and experienced developers alike. That said, the more challenges you solve, the better your chances of winning! To maximize your chances, try to solve all 24 challenges and submit them as both regular entries and social entries. You don't have to submit your solutions on the same day they're published &mdash; the deadline for any submission is midnight UTC on Christmas Eve.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Mozilla+Announces+'JavaScriptmas'+-+Daily+Coding+Challenges+with+a+Chance+at+Prizes%3A+https%3A%2F%2Ftech.slashdot.org%2Fstory%2F24%2F12%2F04%2F0138255%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Ftech.slashdot.org%2Fstory%2F24%2F12%2F04%2F0138255%2Fmozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://tech.slashdot.org/story/24/12/04/0138255/mozilla-announces-javascriptmas---daily-coding-challenges-with-a-chance-at-prizes?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "TikTok divestment law upheld by federal appeals court",
      "url": "https://www.cnbc.com/2024/12/06/tiktok-divestment-law-upheld-by-federal-appeals-court.html",
      "date": 1733500851,
      "author": "belter",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.cnbc.com/2024/12/06/tiktok-divestment-law-upheld-by-federal-appeals-court.html\">https://www.cnbc.com/2024/12/06/tiktok-divestment-law-upheld-by-federal-appeals-court.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42340959\">https://news.ycombinator.com/item?id=42340959</a></p>\n<p>Points: 141</p>\n<p># Comments: 166</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Llama-3.3-70B-Instruct",
      "url": "https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct",
      "date": 1733503496,
      "author": "pr337h4m",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct\">https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42341388\">https://news.ycombinator.com/item?id=42341388</a></p>\n<p>Points: 150</p>\n<p># Comments: 54</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Tokyo is set to introduce a four-day workweek for government employees",
      "url": "https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html",
      "date": 1733507660,
      "author": "amichail",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html\">https://www.cnn.com/2024/12/06/asia/tokyo-government-4-day-workweek-intl-hnk/index.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342203\">https://news.ycombinator.com/item?id=42342203</a></p>\n<p>Points: 122</p>\n<p># Comments: 59</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Every UUID Dot Com",
      "url": "https://everyuuid.com/",
      "date": 1733508706,
      "author": "LorenDB",
      "unread": true,
      "desc": "",
      "content": "\n<p>Article URL: <a href=\"https://everyuuid.com/\">https://everyuuid.com/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42342382\">https://news.ycombinator.com/item?id=42342382</a></p>\n<p>Points: 88</p>\n<p># Comments: 31</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Linux Preps for Kunpeng ARM Server SoC With High Bandwidth Memory",
      "url": "https://linux.slashdot.org/story/24/12/06/1812208/linux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory?utm_source=rss1.0mainlinkanon&utm_medium=feed",
      "date": 1733510040,
      "author": "EditorDavid",
      "unread": true,
      "desc": "",
      "content": "An anonymous reader shared this report from Phoronix:\n\n\nNew Linux patches from Huawei engineers are preparing new driver support for controlling High Bandwidth Memory (HBM) with the ARM-based Kunpeng high performance SoC... \n\n[I]t would appear there is a new Kunpeng SoC coming that will feature integrated High Bandwidth Memory (HBM).Unless I missed something, this Kunpeng SoC with HBM memory hasn't been formally announced yet and I haven't been able to find any other references short of pointing to prior kernel patches working on this HBM integration... It will be interesting to see what comes of Huawei Kunpeng SoCs with HBM memory and ultimately how well they perform against other AArch64 server processors as well as the Intel Xeon and AMD EPYC competition.\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=+Linux+Preps+for+Kunpeng+ARM+Server+SoC+With+High+Bandwidth+Memory%3A+https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F06%2F1812208%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Flinux.slashdot.org%2Fstory%2F24%2F12%2F06%2F1812208%2Flinux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://linux.slashdot.org/story/24/12/06/1812208/linux-preps-for-kunpeng-arm-server-soc-with-high-bandwidth-memory?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    }
  ]
}