{"id":"KZgg6v3y1EHngSu15w9ddbD2SchD7Q","title":"Dev News - Last 2 days","displayTitle":"Dev News - Last 2 days","url":"","feedLink":"","items":[{"title":"Microsoft Integrates a Free Version of Its 'Copilot' Coding AI Into GitHub, VS Code","url":"https://developers.slashdot.org/story/24/12/21/0443255/microsoft-integrates-a-free-version-of-its-copilot-coding-ai-into-github-vs-code?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1734802440,"author":"EditorDavid","unread":true,"desc":"","content":"An anonymous reader shared this report from TechCrunch:\n\nMicrosoft-owned GitHub announced on Wednesday a free version of its popular Copilot code completion/AI pair programming tool, which will also now ship by default with Microsoft's popular VS Code editor. Until now, most developers had to pay a monthly fee, starting at $10 per month, with only verified students, teachers, and open source maintainers getting free access... \n\n\nThere are some limitations to the free version, which is geared toward occasional users, not major work on a big project. Developers on the free plan will get access to 2,000 code completions per month, for example, and as a GitHub spokesperson told me, each Copilot code suggestion will count against this limit &mdash; not just accepted suggestions. And while GitHub recently added the ability to switch between different foundation models, users on the free plan are limited to Anthropic's Claude 3.5 Sonnet and OpenAI's GPT-4o. (The paid plans also include Google's Gemini 1.5 Pro and OpenAI's o1-preview and -mini.) For Copilot Chat, the number of chat messages is limited to 50, but otherwise, there aren't any major limitations to the free service. Developers still get access to all Copilot Extensions and skills. \n\nThe free Copilot SKU will work in a number of editors, including VS Code, Visual Studio, and JetBrains, as well as on GitHub.com. \n\nGitHub's announcement ends with the words \"Happy coding!\" and calls the service \"GitHub Copilot Free.\" But TechCrunch points out there's already competition from services like Amazon Q Developer, as well as from companies like Tabnine and Qodo (previously known as Codium) &mdash; and they typically offer a free tier. But in addition, \"With Copilot Free, we are returning to our freemium roots,\" GitHub CEO Thomas Dohmke told TechCrunch, as well as \"laying the groundwork for something far greater: AI represents our best path to enabling a GitHub with one billion developers. \n\n\"There should be no barrier to entry for experiencing the joy of creating software. Now six years after being acquired by Microsoft, it indeed appears GitHub is still GitHub &mdash; and we are doing our thing.\" \n\nOr, as GitHub CEO Satya Nadella said in a video posted on LinkedIn, \"The joy of coding is back! And we are looking forward to bringing the same experience to so many more people around the world.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Microsoft+Integrates+a+Free+Version+of+Its+'Copilot'+Coding+AI+Into+GitHub%2C+VS+Code%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F21%2F0443255%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F21%2F0443255%2Fmicrosoft-integrates-a-free-version-of-its-copilot-coding-ai-into-github-vs-code%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/21/0443255/microsoft-integrates-a-free-version-of-its-copilot-coding-ai-into-github-vs-code?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Eonfall – A new third-person co-op action game built for the web","url":"https://eonfall.com/","date":1734799536,"author":"jonkuze","unread":true,"desc":"","content":"\n<p>Hi all, I'm excited to share Eonfall with Hacker News Community!<p>It's been 2-years in the making built by a 2 man team. Eonfall, is a new third-person co-op action game with rogue-lite elements built exclusively for the web! We've finally reached a release candidate state and set our official public release date for Jan 15th! The game's current version 5.0.0-beta is live and available to test play today!<p>Unity game engine was used to develop the game along with other services to handle the backend, and Nuxt 3 + Nuxt UI to handle the front-end.<p>We welcome any and all questions, feedback & suggestions!<p>Thanks all, Jon</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42480624\">https://news.ycombinator.com/item?id=42480624</a></p>\n<p>Points: 61</p>\n<p># Comments: 35</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"[openSUSE] New Package Management Tool Debuts","url":"https://www.reddit.com/r/linux/comments/1hjcgri/opensuse_new_package_management_tool_debuts/","date":1734796076,"author":"/u/gabriel_3","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gabriel_3\"> /u/gabriel_3 </a> <br/> <span><a href=\"https://news.opensuse.org/2024/12/20/new-pkg-mgmt-tool-debuts/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hjcgri/opensuse_new_package_management_tool_debuts/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Introducing S2","url":"https://s2.dev/blog/intro","date":1734793879,"author":"brancz","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://s2.dev/blog/intro\">https://s2.dev/blog/intro</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42480105\">https://news.ycombinator.com/item?id=42480105</a></p>\n<p>Points: 85</p>\n<p># Comments: 43</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Rethinking Software Engineering in an AI-Centric Era","url":"https://medium.com/@kyodo-tech/rethinking-software-engineering-in-an-ai-centric-era-feb4b040c4c4?source=rss-ac02ab142942------2","date":1734792738,"author":"Kyodo Tech","unread":true,"desc":"","content":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*s0B8MnczM2SnHUJfVKJMKg.png\" /></figure><p>As OpenAI’s new o3 ‘reasoning’ models begin the ‘next phase’ of AI, we ponder the meaning of AGI and how software engineering will be influenced in an era where intelligent automation starts reducing the price tag of engineering productivity. Traditionally, <strong>software development has been supply-side constrained</strong> by the finite availability of skilled engineers. Despite immense investments, it is not uncommon to encounter software riddled with bugs and inefficiencies, even on platforms operated by billion-dollar companies. These issues reflect systemic bottlenecks that hinder the ability to meet growing demand for reliable, scalable software.</p><p>Artificial intelligence promises to shift this paradigm. AI has the potential to address these constraints by automating repetitive tasks, assisting in decision-making, and optimizing workflows. <strong>AI can be viewed as a transformative horizontal layer</strong> akin to the electricity grid or the internet, it is an enabler. Its potential to impact nearly every process in an organization demands a rethinking of its role. The challenge becomes how to integrate it into the core of organizational operations.</p><h3>From Supply-Side Constraints to Human Orchestration</h3><p>Software engineering relies heavily on human labor for execution at every level, from writing functions to debugging and maintaining systems. This reliance creates bottlenecks as demand for software outpaces the availability of skilled talent. While traditional tools improved productivity incrementally, they did not address the fundamental limitations of human bandwidth.</p><p>AI tools, such as large language models (LLMs), mark a significant departure from this trajectory. These systems enable assisted coding, provide architectural suggestions, and help identify design patterns and anti-patterns in real time. Engineers increasingly shift from writing low-level code to orchestrating systems: combining AI-generated components, validating their accuracy, and integrating them into larger workflows.</p><p>Orchestration, as a human role, embodies this transition. It involves guiding AI to produce outcomes aligned with high-level design goals and ensuring that the resulting systems are robust, maintainable, and aligned with organizational objectives. This shift transforms engineers into curators of functionality and systems thinkers.</p><h3>AI as a Horizontal Layer: Shifting to the Center</h3><p>AI’s impact extends far beyond isolated tools for code generation or testing. As a horizontal layer, AI can improve processes across an entire organization, from development and operations to customer support and strategy. Just as electricity and the internet became foundational to modern organizations, AI has the potential to underpin nearly every business process.</p><p>To realize this potential, AI must move from a peripheral, supplementary role to the center of organizational decision-making and operations. This shift requires cultural, structural, and procedural changes:</p><ol><li><strong>Centralized AI Strategy</strong>: AI should not be siloed within individual teams or projects. Organizations need a unified AI strategy that spans departments, with clearly defined goals for integrating AI into all workflows. Some processes will become automated entirely.</li><li><strong>AI-Driven Process Redesign</strong>: Processes must be redesigned to leverage AI fully. This includes automating repetitive tasks, improving data analysis pipelines, and enabling predictive decision-making across teams.</li><li><strong>Human-AI Collaboration</strong>: Engineers and domain experts must learn to collaborate with AI, focusing on curating inputs, validating outputs, and managing systems holistically. How to move data more efficiently into AI systems will be a key challenge.</li></ol><h3>High-Value Decisions and Human Oversight</h3><p>While AI can transform many areas, its role in high-value, high-stakes decisions remains limited. For example, while autopilot systems can technically manage most aspects of flight, human pilots are still in command due to the complex, high-risk nature of their work. Similarly, in software engineering, areas like system security, mission-critical infrastructure, and regulatory compliance rely heavily on human oversight.</p><p>These environments present unique challenges for AI adoption:</p><ul><li><strong>Specialized Systems</strong>: Tasks requiring deep domain knowledge and precision, such as cryptographic algorithms, high-performance computing (HPC), or real-time trading systems, often fall outside AI’s general-purpose capabilities.</li><li><strong>Risk Management</strong>: In scenarios where failure carries significant consequences (e.g., healthcare systems or aviation software), organizations are unlikely to entrust AI with autonomous decision-making.</li><li><strong>Human Judgment</strong>: High-value decisions often involve qualitative factors that AI struggles to interpret, such as ethical considerations or conflicting stakeholder priorities.</li></ul><p>In such contexts, AI will serve as an assistant rather than a replacement, helping humans process large datasets, identify patterns, and simulate potential outcomes. Feeding the right data into AI systems and asking the right questions become crucial skills, requiring close collaboration between domain experts and AI tools.</p><h3>The Evolving Role of Software Engineers and Technical Leadership</h3><p>The widespread adoption of AI reshapes the roles of engineers, technical leaders, and executives alike:</p><ol><li><strong>Software Engineers</strong> Engineers increasingly move from function-level tasks to system-level orchestration. Their role becomes one of managing abstractions, curating AI outputs, and ensuring that automated components align with broader objectives. Proficiency in leveraging AI tools, debugging AI-generated code, and adapting workflows to accommodate AI capabilities will define the next generation of engineers. Specialization, as always, will continue to pay a premium for a significant while.</li><li><strong>Staff Engineers</strong> As stewards of architectural integrity, staff engineers focus on integrating AI-generated components into larger systems. They ensure that AI outputs align with system-wide goals, resolve inconsistencies, and enforce reliability standards. Mentorship becomes a key responsibility as they guide teams in navigating AI-enhanced workflows.</li><li><strong>Technical Leadership</strong> CXOs must lead the cultural and strategic shift toward AI-centric operations. This includes:</li></ol><ul><li>Establishing governance frameworks for AI use.</li><li>Identifying high-impact areas for AI integration.</li><li>Balancing automation with human oversight to mitigate risks.</li></ul><h3>From Creativity to Precision: AI’s Broader Impacts</h3><p>AI’s influence spans domains that demand creativity, precision, and scalability. In creative processes, AI enables rapid iteration, empowering individuals to achieve what once required large teams. However, these gains depend on human expertise to guide and refine AI’s outputs. Creativity-focused AI tools will likely remain diverse and scattered, as outcomes depend heavily on subjective preferences and domain-specific tuning.</p><p>In precision-oriented domains, such as accounting or high-performance computing, AI adoption faces greater challenges. The deterministic nature of these tasks requires accuracy and reliability that AI systems cannot consistently guarantee. While AI may play assistive roles in such environments, human oversight will remain indispensable for the foreseeable future.</p><h3>Future of Software Engineering in an AI-Driven World</h3><p>The integration of AI into software engineering represents a profound transformation. It shifts the role of engineers from implementers to orchestrators, enables organizations to scale processes with unprecedented efficiency, and positions AI as a foundational layer of modern business operations. However, the successful adoption of AI requires careful planning, cultural adaptation, and a clear understanding of its limitations.</p><p>Addressing supply-side constraints, enhancing human capabilities, and embedding itself as a horizontal layer, AI promises to unlock new levels of productivity and innovation. The future of software engineering lies in harnessing this potential — not by replacing humans, but by amplifying their ability to create, innovate, and solve complex problems at scale.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=feb4b040c4c4\" width=\"1\" height=\"1\" alt=\"\">","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Untapped Goldmines: Discovering Lucrative Niches for Android and iOS App Development","url":"https://www.reddit.com/r/programming/comments/1hjb724/untapped_goldmines_discovering_lucrative_niches/","date":1734792252,"author":"/u/derjanni","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/derjanni\"> /u/derjanni </a> <br/> <span><a href=\"https://programmers.fyi/untapped-goldmines-lucrative-niches-android-ios\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hjb724/untapped_goldmines_discovering_lucrative_niches/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Escaping Google's Manual Reputation Penalty and Resuming Business as Usual","url":"https://recleudo.com/under-googles-watchfull-eye-getting-out-of-a-manual-site-reputation-abuse-penalty-and-continuing-business-as-usual/","date":1734791093,"author":"fueloil","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://recleudo.com/under-googles-watchfull-eye-getting-out-of-a-manual-site-reputation-abuse-penalty-and-continuing-business-as-usual/\">https://recleudo.com/under-googles-watchfull-eye-getting-out-of-a-manual-site-reputation-abuse-penalty-and-continuing-business-as-usual/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42479866\">https://news.ycombinator.com/item?id=42479866</a></p>\n<p>Points: 91</p>\n<p># Comments: 19</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Kubernetes' repository summary","url":"https://www.reddit.com/r/kubernetes/comments/1hja7c8/kubernetes_repository_summary/","date":1734788982,"author":"/u/o2sh","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hja7c8/kubernetes_repository_summary/\"> <img src=\"https://preview.redd.it/3tqoq6azh78e1.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=b79477373e0184db13b3ff47bd2bf21d55ba2f30\" alt=\"Kubernetes' repository summary\" title=\"Kubernetes' repository summary\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/o2sh\"> /u/o2sh </a> <br/> <span><a href=\"https://i.redd.it/3tqoq6azh78e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hja7c8/kubernetes_repository_summary/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Type Tracking Using Arm Memory Tagging | Blog | Linaro","url":"https://www.reddit.com/r/programming/comments/1hj9xuh/type_tracking_using_arm_memory_tagging_blog_linaro/","date":1734788072,"author":"/u/Successful_Pen_6348","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Successful_Pen_6348\"> /u/Successful_Pen_6348 </a> <br/> <span><a href=\"https://www.linaro.org/blog/type-tracking-using-arm-memory-tagging/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hj9xuh/type_tracking_using_arm_memory_tagging_blog_linaro/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Gitlab install help","url":"https://www.reddit.com/r/kubernetes/comments/1hj9o2o/gitlab_install_help/","date":1734787111,"author":"/u/Dismal-Mud-5725","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hello, I would like to deploy Gitlab in a k8s cluster but I see in the doc that we can&#39;t prod for stateful components. Is there a way to install Gitlab on the entire cluster?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Dismal-Mud-5725\"> /u/Dismal-Mud-5725 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj9o2o/gitlab_install_help/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj9o2o/gitlab_install_help/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Rockchip RK3588 mainline Linux support - Current status and future work for 2025","url":"https://www.reddit.com/r/linux/comments/1hj93kw/rockchip_rk3588_mainline_linux_support_current/","date":1734784969,"author":"/u/ouyawei","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ouyawei\"> /u/ouyawei </a> <br/> <span><a href=\"https://www.cnx-software.com/2024/12/21/rockchip-rk3588-mainline-linux-support-current-status-and-future-work-for-2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hj93kw/rockchip_rk3588_mainline_linux_support_current/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Query Apple's FindMy Network with Python","url":"https://github.com/malmeloo/FindMy.py","date":1734783295,"author":"nkko","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/malmeloo/FindMy.py\">https://github.com/malmeloo/FindMy.py</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42479233\">https://news.ycombinator.com/item?id=42479233</a></p>\n<p>Points: 184</p>\n<p># Comments: 91</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"CoreDNS help","url":"https://www.reddit.com/r/kubernetes/comments/1hj8oky/coredns_help/","date":1734783288,"author":"/u/Emotional_Spare_1339","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I have an issue atm where I need to add some host files to CoreDNS.</p> <p>If I add like below, the host files do work however this breaks forwarding. (From the pod: Can ping host entries, can&#39;t ping google.co.uk for example) nslookup seems to work correctly just not ping</p> <p>Corefile: |<br/> .:53 {<br/> errors<br/> health {<br/> lameduck 5s<br/> }<br/> ready<br/> log . {<br/> class error<br/> }<br/> kubernetes cluster.local in-addr.arpa ip6.arpa {<br/> pods insecure<br/> fallthrough in-addr.arpa ip6.arpa<br/> }<br/> prometheus :9153<br/> forward . 8.8.8.8 {<br/> force_tcp<br/> max_concurrent 1000<br/> }<br/> cache 30<br/> loop<br/> reload<br/> loadbalance<br/> hosts custom.hosts dummy.dummy.net {<br/> 172.25.212.11 server1.dummy.dummy.net<br/> 172.25.212.10 server2.dummy.dummy.net<br/> fallthrough<br/> }<br/> }</p> <p>Could someone point me in the right direction for formatting? Host entries are configured in /etc/hosts. If I could point CoreDNS towards this that would be preferable</p> <p>Thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Emotional_Spare_1339\"> /u/Emotional_Spare_1339 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj8oky/coredns_help/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj8oky/coredns_help/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"dropping hyper (from curl)","url":"https://www.reddit.com/r/rust/comments/1hj8ng8/dropping_hyper_from_curl/","date":1734783158,"author":"/u/sondr3_","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sondr3_\"> /u/sondr3_ </a> <br/> <span><a href=\"https://daniel.haxx.se/blog/2024/12/21/dropping-hyper/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hj8ng8/dropping_hyper_from_curl/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Kannel: Open-Source WAP and SMS Gateway","url":"https://www.kannel.org/overview.shtml","date":1734776111,"author":"thunderbong","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.kannel.org/overview.shtml\">https://www.kannel.org/overview.shtml</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42478728\">https://news.ycombinator.com/item?id=42478728</a></p>\n<p>Points: 79</p>\n<p># Comments: 40</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"This Week in Plasma: end-of-year bug fixing","url":"https://www.reddit.com/r/linux/comments/1hj62sy/this_week_in_plasma_endofyear_bug_fixing/","date":1734771670,"author":"/u/gabriel_3","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gabriel_3\"> /u/gabriel_3 </a> <br/> <span><a href=\"https://blogs.kde.org/2024/12/21/this-week-in-plasma-end-of-year-bug-fixing/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hj62sy/this_week_in_plasma_endofyear_bug_fixing/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Minimal table writer in Go","url":"https://www.reddit.com/r/golang/comments/1hj3w8j/minimal_table_writer_in_go/","date":1734761886,"author":"/u/zeitgiest31","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Motivation: We wanted a quick table writer to render some tabular data for our internal devops CLI. We didn’t want to use an external library because of some unreasonable security policies.</p> <p><a href=\"https://github.com/shubhang93/tablewr\">https://github.com/shubhang93/tablewr</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/zeitgiest31\"> /u/zeitgiest31 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hj3w8j/minimal_table_writer_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hj3w8j/minimal_table_writer_in_go/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Guide to Kubernetes RBAC","url":"https://www.reddit.com/r/kubernetes/comments/1hj3tyb/guide_to_kubernetes_rbac/","date":1734761627,"author":"/u/Good_Highlight5707","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://www.cerbos.dev/blog/guide-to-kubernetes-rbac\">https://www.cerbos.dev/blog/guide-to-kubernetes-rbac</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Good_Highlight5707\"> /u/Good_Highlight5707 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj3tyb/guide_to_kubernetes_rbac/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj3tyb/guide_to_kubernetes_rbac/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to gain a habit of writing tests?","url":"https://www.reddit.com/r/golang/comments/1hj1jq1/how_to_gain_a_habit_of_writing_tests/","date":1734753006,"author":"/u/Choux0304","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hej guys</p> <p>I&#39;m currently studying computer sciences with a focus of software development and the topic of testing our applications we develop throughout our time here at the university gets more and more present. I of course know the many advantages of testing and that I definitely should do it! </p> <p>I love that Go has an integrated test runner and I do want to use it. However when I begin to work on my little projects (mostly to practice Go or other web service related stuff and not to release something publicly) I often say to myself that I don&#39;t have the time to write tests, that I want to integrate more features rather than writing tests, ... - I guess everyone knows that feeling.</p> <p>So how did you achieve to become so disciplined to prioritize tests over new features? (Again I do know that writing tests has only advantages.) </p> <p>I guess, I will just have to force myself until I&#39;m so into it that it will just become a part of my normal process in getting stuff done. </p> <p>I&#39;m interested if anyone has a strategy about getting into tests or general thoughts about this topic.</p> <p><strong><strong>EDIT</strong></strong> Thanks everyone for the many replies. I read a couple of things which I want to try out on a past project of mine and for the future I want to look upon testing like many people say here: Without testing a bug or implementing tests for a feature the bug isn&#39;t fixed or the code can&#39;t be said to be stable.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Choux0304\"> /u/Choux0304 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hj1jq1/how_to_gain_a_habit_of_writing_tests/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hj1jq1/how_to_gain_a_habit_of_writing_tests/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Is cancelling Futures by dropping them a fundamentally terrible idea?","url":"https://www.reddit.com/r/rust/comments/1hj1eg9/is_cancelling_futures_by_dropping_them_a/","date":1734752477,"author":"/u/arsdragonfly","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://www.reddit.com/r/csharp/comments/16b35vc/how_do_i_stop_a_task_in_c_immediately_anywhere/\">Languages that only cancel tasks at explicit <code>CancellationToken</code> checkpoints exist.</a> There are very sound arguments about why that &quot;always-explicit cancellation&quot; is a good design.</p> <p>&quot;To cancel a future, we need to drop it&quot; might have been the single most harmful idea for Rust ever. No amount of mental gymnastics of &quot;let&#39;s consider what would happen at every <code>await</code> point&quot; or &quot;let&#39;s figure out how to do <code>AsyncDrop</code>&quot; would properly fix the problem. If you&#39;ve worked with this kind of stuff you will know what I&#39;m saying. Correctness-wise, reasoning about such implicit <code>Future</code> dropping is so, so much harder (arguably borderline impossible) than reasoning about explicit <code>CancellationToken</code> checks. You could almost argue that &quot;safe Rust&quot; is a lie if such dropping causes so many resource leaks and weird behaviors. Plus you have a hard time injecting your own logic (e.g. logging) for handling cancellation because you basically don&#39;t know where you are being cancelled from.</p> <p>It&#39;s not a problem of language design (except maybe they should standardize some <code>CancellationToken</code> trait, just as they do for <code>Future</code>). It&#39;s not about &quot;<a href=\"https://github.com/Matthias247/rfcs/pull/1\">oh we should mark these <code>Future</code>s as always-run-to-completion</a>&quot;. Of course all <code>Future</code>s should run to completion, either properly or exiting early from an explicit cancellation check. It&#39;s totally a problem of async runtimes. Runtimes should have never advocated primitives such as <code>tokio::select!</code> that dangerously drop <code>Future</code>s, or the idea that cancellation should be done by dropping the <code>Future</code>. It&#39;s an XY problem that these async runtimes imposed upon us that they should fix themselves.</p> <p>Oh and everyone should add <code>CancellationToken</code> parameter to their async functions. But there are languages that do that and I&#39;ve personally never seen programmers of those languages complain about it, so I guess it&#39;s just a price that we&#39;d have to pay for our earlier mistakes.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/arsdragonfly\"> /u/arsdragonfly </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hj1eg9/is_cancelling_futures_by_dropping_them_a/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hj1eg9/is_cancelling_futures_by_dropping_them_a/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Karpenter disruption.budgets not working as expected","url":"https://www.reddit.com/r/kubernetes/comments/1hj0bfm/karpenter_disruptionbudgets_not_working_as/","date":1734748731,"author":"/u/Sule2626","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hi, everyone. I’m having issues with my node pool’s disruption budgets. The goal is for it to <strong>block node scaling down during weekdays (Monday to Friday) between 11:00 AM and 11:00 PM UTC</strong> and only allow scaling down in the following scenarios:</p> <ol> <li>Outside of this time frame.</li> <li>When a node pool is empty.</li> <li>When the node pool has been modified.</li> </ol> <p>Here’s the configuration I’m using, but it’s not working as expected:</p> <pre><code>disruption: consolidationPolicy: WhenEmptyOrUnderutilized consolidateAfter: 1m budgets: - nodes: &#39;0&#39; reasons: - Underutilized schedule: &#39;0 11 * * mon-fri&#39; # Starts at 11:00 AM UTC, Monday to Friday duration: 12h # Duration is 12 hours (ends at 11:00 PM UTC) - nodes: &#39;1&#39; reasons: - Empty - Drifted </code></pre> <p>The scaling behavior doesn’t match the intended restrictions. What’s wrong with this configuration, and how can I fix it to achieve the desired functionality?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Sule2626\"> /u/Sule2626 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj0bfm/karpenter_disruptionbudgets_not_working_as/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hj0bfm/karpenter_disruptionbudgets_not_working_as/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Learning Go from Java - what to avoid","url":"https://www.reddit.com/r/golang/comments/1hizadu/learning_go_from_java_what_to_avoid/","date":1734745232,"author":"/u/equilibrium0212","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>As the title states, I&#39;m in a fortunate position where my company is transitioning from Java to Golang and I have the opportunity to learn Go and gain commercial experience in it.</p> <p>I&#39;ve been using Java for most of my professional career and I am very conscious that how you work with Java is very different to how you should work with Go, essentially strive for writing idiomatic Go.</p> <p>What advice would you give someone learning Go for the first time coming from Java, common things to avoid, any good resources to learn would be great (I have the Mastering Go book I will be using)?</p> <p>Side question, I learn best from doing and getting stuck into things. I was struggle to think of projects to build that I could use as a platform to learn a new language, so I was thinking of building a HTTP server from scratch (maybe form a TCP server so I can actually learn deeper about both web-servers and Go at the same time)? Open to suggestions!</p> <p>Looking forward to learning, it&#39;s been on my list to learn for sometime and I&#39;m excited to break the Java shackles and enjoy building again!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/equilibrium0212\"> /u/equilibrium0212 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hizadu/learning_go_from_java_what_to_avoid/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hizadu/learning_go_from_java_what_to_avoid/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Avian 0.2: ECS-Driven Physics for Bevy","url":"https://www.reddit.com/r/rust/comments/1hixvbm/avian_02_ecsdriven_physics_for_bevy/","date":1734740711,"author":"/u/Jondolof","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Jondolof\"> /u/Jondolof </a> <br/> <span><a href=\"https://joonaa.dev/blog/07/avian-0-2\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hixvbm/avian_02_ecsdriven_physics_for_bevy/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"22 years using Windows and finally free","url":"https://www.reddit.com/r/linux/comments/1hix61t/22_years_using_windows_and_finally_free/","date":1734738587,"author":"/u/FunWithSkooma","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Thanks to everyone on <a href=\"https://www.reddit.com/r/linux4noobs/\">r/linux4noobs</a> for all the help. I’ve been exploring Linux since the introduction of the Steam Deck, watching the amazing evolution of gaming on Linux, first with Wine and similar programs, and now with ProtonDB, which has made it the ultimate seamless experience. I’m using Bazzite as my gaming distro, and so far, everything has been amazing. I have little to no experience with Linux, but so far, nothing has been a barrier.</p> <p>screw you Windows LOOOL</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/FunWithSkooma\"> /u/FunWithSkooma </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hix61t/22_years_using_windows_and_finally_free/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hix61t/22_years_using_windows_and_finally_free/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Compiling C to Safe Rust, Formalized","url":"https://arxiv.org/abs/2412.15042","date":1734737403,"author":"love2read","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://arxiv.org/abs/2412.15042\">https://arxiv.org/abs/2412.15042</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42476192\">https://news.ycombinator.com/item?id=42476192</a></p>\n<p>Points: 257</p>\n<p># Comments: 114</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ghostty Is Native—So What?","url":"https://www.reddit.com/r/programming/comments/1hiw8ei/ghostty_is_nativeso_what/","date":1734735801,"author":"/u/n00bomb","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/n00bomb\"> /u/n00bomb </a> <br/> <span><a href=\"https://gpanders.com/blog/ghostty-is-native-so-what/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hiw8ei/ghostty_is_nativeso_what/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Would you say Rust is a general purpose language?","url":"https://www.reddit.com/r/rust/comments/1hivm9w/would_you_say_rust_is_a_general_purpose_language/","date":1734734024,"author":"/u/the_mean_person","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Do you try to use Rust as much as you can on a variety of projects? </p> <p>Or do you stick to using Rust for systems programming and opt for other languages for other purposes?</p> <p>I&#39;m just starting and I find myself writing small scripts in Rust over python all the time, and that feels... Wrong? But oh so right at the same time.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/the_mean_person\"> /u/the_mean_person </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hivm9w/would_you_say_rust_is_a_general_purpose_language/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hivm9w/would_you_say_rust_is_a_general_purpose_language/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Raycaster in Bash","url":"https://github.com/izabera/pseudo3d","date":1734733545,"author":"izabera","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/izabera/pseudo3d\">https://github.com/izabera/pseudo3d</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42475703\">https://news.ycombinator.com/item?id=42475703</a></p>\n<p>Points: 215</p>\n<p># Comments: 29</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The new maps and slices packages in Go 1.23: tour and examples","url":"https://www.reddit.com/r/golang/comments/1hiv7lb/the_new_maps_and_slices_packages_in_go_123_tour/","date":1734732843,"author":"/u/zachm","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hiv7lb/the_new_maps_and_slices_packages_in_go_123_tour/\"> <img src=\"https://external-preview.redd.it/-kvYNJ0Zscl6hxwC2XlykB5E6wvpjfXa1V8FSTLzfyc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7634cefae025130858f26bdb2db970c77461a533\" alt=\"The new maps and slices packages in Go 1.23: tour and examples\" title=\"The new maps and slices packages in Go 1.23: tour and examples\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/zachm\"> /u/zachm </a> <br/> <span><a href=\"https://www.dolthub.com/blog/2024-12-20-collection-functions-in-go-1-23/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hiv7lb/the_new_maps_and_slices_packages_in_go_123_tour/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Delivering Software with Kubernetes, Part 2: Exposing a Service to the Public Internet (Domains, DNS Records, TLS Certificates, and Kubernetes Ingresses)","url":"https://www.reddit.com/r/kubernetes/comments/1hiv6qn/delivering_software_with_kubernetes_part_2/","date":1734732771,"author":"/u/francoposadotio","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/francoposadotio\"> /u/francoposadotio </a> <br/> <span><a href=\"https://francoposa.io/resources/infra-ops/kubernetes-software-deployment-2/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hiv6qn/delivering_software_with_kubernetes_part_2/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Can we give some love for EarlyOOM?","url":"https://www.reddit.com/r/linux/comments/1hiumgn/can_we_give_some_love_for_earlyoom/","date":1734731169,"author":"/u/vko-","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I guess there are alternatives, but this service was super easy to setup (just install, start systemd service) and it just works. My desktop now never freezes. Some tabs die, VSCode dies when I debug some ungodly nodejs app, but my linux memory management problems (which were significant), are over.</p> <p>I know installing it by default would pose problems, but freezeups cause more problems for the regular user IMO. So I hope distros adopt some service like that by default at some point.</p> <p>And no - swap does not really solve that problem. Yes, if my computer was running a mars rover it would be better to have it slow down instead of die. But in practice having your desktop run into swap renders the machine unusable anyway. And most modern apps save their state often enough to not lose valuable work.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vko-\"> /u/vko- </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hiumgn/can_we_give_some_love_for_earlyoom/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hiumgn/can_we_give_some_love_for_earlyoom/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"It's been two month since I started to learn this language and I am already able to release functional and pretty-looking cli tool. I love the rust ecosystem.","url":"https://www.reddit.com/r/rust/comments/1hiuicc/its_been_two_month_since_i_started_to_learn_this/","date":1734730848,"author":"/u/ResponsibilityNo1827","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ResponsibilityNo1827\"> /u/ResponsibilityNo1827 </a> <br/> <span><a href=\"https://github.com/1ort/resoy\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hiuicc/its_been_two_month_since_i_started_to_learn_this/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Roast my server implementation","url":"https://www.reddit.com/r/golang/comments/1hiu8kg/roast_my_server_implementation/","date":1734730094,"author":"/u/Mallanaga","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hiu8kg/roast_my_server_implementation/\"> <img src=\"https://external-preview.redd.it/oUNhiIFosOo27dMURKKMsffo9Jy8-Ep-W0yas62FcB0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6500a50a06a18ee6867c902e76f0041fddbc130d\" alt=\"Roast my server implementation\" title=\"Roast my server implementation\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Idioms, folder structure, log messages… wdyt?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Mallanaga\"> /u/Mallanaga </a> <br/> <span><a href=\"https://github.com/gitops-ci-cd/greeting-service/blob/main/cmd/server/main.go\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hiu8kg/roast_my_server_implementation/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Elixir v1.18 released: type checking of function calls, Language Server listeners, built-in JSON, and ExUnit improvements","url":"https://www.reddit.com/r/programming/comments/1hitwhv/elixir_v118_released_type_checking_of_function/","date":1734729148,"author":"/u/ketralnis","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://elixir-lang.org/blog/2024/12/19/elixir-v1-18-0-released/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hitwhv/elixir_v118_released_type_checking_of_function/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Enum of Arrays","url":"https://www.reddit.com/r/programming/comments/1hitwcq/enum_of_arrays/","date":1734729138,"author":"/u/ketralnis","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://tigerbeetle.com/blog/2024-12-19-enum-of-arrays/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hitwcq/enum_of_arrays/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"AMD Launches A YouTube Channel For Developers","url":"https://www.reddit.com/r/programming/comments/1hisaiy/amd_launches_a_youtube_channel_for_developers/","date":1734724769,"author":"/u/gurugabrielpradipaka","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gurugabrielpradipaka\"> /u/gurugabrielpradipaka </a> <br/> <span><a href=\"https://www.phoronix.com/news/AMD-Developer-Central-YouTube\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hisaiy/amd_launches_a_youtube_channel_for_developers/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Upstream support for Rockchip's RK3588: Progress and future plans","url":"https://www.reddit.com/r/linux/comments/1hir8d7/upstream_support_for_rockchips_rk3588_progress/","date":1734721881,"author":"/u/mfilion","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mfilion\"> /u/mfilion </a> <br/> <span><a href=\"https://www.collabora.com/news-and-blog/news-and-events/rockchip-rk3588-upstream-support-progress-future-plans.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hir8d7/upstream_support_for_rockchips_rk3588_progress/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Standard Library +","url":"https://www.reddit.com/r/golang/comments/1hir7yx/standard_library/","date":1734721851,"author":"/u/awong593","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Is there a set of libraries for golang that you would classify as the standard library plus?</p> <p>I am thinking in terms of Java or C++. In java there is guava and all the apache libraries that can bootstrap a new project and in C++ there is boost which performs something similar. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/awong593\"> /u/awong593 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hir7yx/standard_library/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hir7yx/standard_library/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"[Media] crates.io has reached 100 billions downloads 🎉","url":"https://www.reddit.com/r/rust/comments/1hiqv2f/media_cratesio_has_reached_100_billions_downloads/","date":1734720889,"author":"/u/kode1985","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kode1985\"> /u/kode1985 </a> <br/> <span><a href=\"https://i.redd.it/cbstg7zhv18e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hiqv2f/media_cratesio_has_reached_100_billions_downloads/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"OpenAI O3 breakthrough high score on ARC-AGI-PUB","url":"https://arcprize.org/blog/oai-o3-pub-breakthrough","date":1734718273,"author":"maurycy","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://arcprize.org/blog/oai-o3-pub-breakthrough\">https://arcprize.org/blog/oai-o3-pub-breakthrough</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42473321\">https://news.ycombinator.com/item?id=42473321</a></p>\n<p>Points: 1512</p>\n<p># Comments: 1515</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Grayjay Desktop App","url":"https://grayjay.app/desktop/","date":1734715980,"author":"pierrelf","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://grayjay.app/desktop/\">https://grayjay.app/desktop/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42473032\">https://news.ycombinator.com/item?id=42473032</a></p>\n<p>Points: 477</p>\n<p># Comments: 248</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What the official scikit-learn certification looks like","url":"https://www.youtube.com/watch?v=wtSr9Z3Cxsg","date":1734709944,"author":"probabl","unread":true,"desc":"","content":"We got a lot of questions about our certification program. Some of these questions weren't so much on the material, but more on the medium and interface of the actual exam. \n\nThat why we made this small recording. It shows what you can expect as we go through a few questions in a mock exam.\n\n00:00 Intro and setup\n01:56 Starting the exam\n03:19 First questions\n05:41 Programming exercise\n09:47 Final review at the end\n\nTo learn more about the official scikit-learn certification program go here: \nhttps://certification.probabl.ai/","flags":null,"enclosureUrl":"https://www.youtube.com/v/wtSr9Z3Cxsg?version=3","enclosureMime":""},{"title":"A bestiary of exotic hadrons","url":"https://cerncourier.com/a-bestiary-of-exotic-hadrons/","date":1734708599,"author":"rbanffy","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://cerncourier.com/a-bestiary-of-exotic-hadrons/\">https://cerncourier.com/a-bestiary-of-exotic-hadrons/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42471927\">https://news.ycombinator.com/item?id=42471927</a></p>\n<p>Points: 148</p>\n<p># Comments: 59</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Artemis, a Calm Web Reader","url":"https://artemis.jamesg.blog/","date":1734708530,"author":"zerojames","unread":true,"desc":"","content":"\n<p>Earlier this year, I made a web reader that only showed a list of post titles, author domains, and links. The reader only updated once per day, so I wouldn't feel compelled to keep checking for new posts.<p>I have been using the tool, which I called Artemis, for several months. Every morning, I looked forward to my \"morning paper\" of blogs I love reading.<p>There are no notifications, read vs. unread states, counts of posts, etc. Only the last seven days of posts are available. The colour scheme is changeable. Dark mode is supported. All popular feed formats are supported.<p>There is no reading interface to read blog posts; rather, the links take you to the authors' websites. Many of my favourite bloggers put a lot of effort into the design of their blogs and like to change things up; I wanted an experience that embraced that.<p>The reader is now available for anyone to use (with invite code \"hn\").</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42471913\">https://news.ycombinator.com/item?id=42471913</a></p>\n<p>Points: 285</p>\n<p># Comments: 62</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Building Effective \"Agents\"","url":"https://www.anthropic.com/research/building-effective-agents","date":1734697757,"author":"jascha_eng","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.anthropic.com/research/building-effective-agents\">https://www.anthropic.com/research/building-effective-agents</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42470541\">https://news.ycombinator.com/item?id=42470541</a></p>\n<p>Points: 518</p>\n<p># Comments: 79</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Parker Solar Probe will make its closest approach yet to the Sun","url":"https://arstechnica.com/space/2024/12/were-about-to-fly-a-spacecraft-into-the-sun-for-the-first-time/","date":1734693836,"author":"pseudolus","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://arstechnica.com/space/2024/12/were-about-to-fly-a-spacecraft-into-the-sun-for-the-first-time/\">https://arstechnica.com/space/2024/12/were-about-to-fly-a-spacecraft-into-the-sun-for-the-first-time/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42470202\">https://news.ycombinator.com/item?id=42470202</a></p>\n<p>Points: 158</p>\n<p># Comments: 130</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Deaf in Cloud Native: KubeCon NA 2024 Recap","url":"https://www.youtube.com/watch?v=4n6n-LPlI_k","date":1734684685,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io","flags":null,"enclosureUrl":"https://www.youtube.com/v/4n6n-LPlI_k?version=3","enclosureMime":""},{"title":"Tldraw Computer","url":"https://computer.tldraw.com/","date":1734680556,"author":"duck","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://computer.tldraw.com\">https://computer.tldraw.com</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42469074\">https://news.ycombinator.com/item?id=42469074</a></p>\n<p>Points: 516</p>\n<p># Comments: 112</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"ChatLoopBackOff - Episode 40 (Spiderpool)","url":"https://www.youtube.com/watch?v=GiCOnFCwRno","date":1734674396,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"desc":"","content":"Spiderpool focuses on enhancing IP Address Management (IPAM) for Kubernetes clusters, particularly in cloud-native environments. It aims to simplify the networking requirements for applications by providing advanced IP management capabilities and integrating seamlessly with various Container Network Interface (CNI) plugins. Join CNCF Ambassador Afzal Ansari as he explores how Spiderpool provides a comprehensive IPAM solution, addressing the challenges of networking in Kubernetes while allowing for flexible deployment and high-performance requirements.","flags":null,"enclosureUrl":"https://www.youtube.com/v/GiCOnFCwRno?version=3","enclosureMime":""},{"title":"What is Latency and How to Reduce it?","url":"https://blog.algomaster.io/p/latency-and-how-to-reduce-it","date":1734673279,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>Latency is the time between a user taking an action&#8212;like clicking a button or loading a webpage&#8212;and receiving a response from the system. </p><p>In simple terms, latency is the time delay between:</p><ul><li><p>When a user makes a request</p></li><li><p>When they receive the response</p></li></ul><div class=\"captioned-image-container\"><figure><a class=\"image-link image2\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png\" width=\"591\" height=\"237\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:237,&quot;width&quot;:591,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:21443,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F23aeaa06-f9d2-4986-8062-82ee094db6f1_591x237.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><p>Lower latency means faster responses and a better user experience.</p><p>In this article, we&#8217;ll explore the causes of high latency and how to reduce latency at different layers of your system.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/u7vLPsh\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:279257,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1456w\" sizes=\"100vw\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/u7vLPsh\">Multiplayer's</a></strong> <strong>Platform Debugger</strong> provides deep session replays with every detail you need to find and fix a bug. From frontend screens to backend traces, metrics, and logs, all in one place. Debug faster and fix customer problems more easily, so you and your team can stay focused on building great software, not combing through APM data.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/u7vLPsh&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/u7vLPsh\"><span>Get Started for FREE</span></a></p><div><hr></div><h2><strong>What Causes High Latency?</strong></h2><ul><li><p><strong>Geographical Distance:</strong> The farther a user is from your server, the longer data takes to travel. Even though data moves close to the speed of light, crossing thousands of miles takes more time than traveling a few hundred.</p></li><li><p><strong>Overloaded Servers:</strong> When a server receives more requests than it can handle, it slows down. This overload can happen due to sudden traffic spikes, inefficient resource usage, or inadequate server capacity. As servers struggle to keep up, each request takes longer to process, and latency spikes.</p></li><li><p><strong>Slow Database:</strong> If your database queries take too long&#8212;due to large tables, missing indexes, or poorly written queries&#8212;responses take longer.</p></li><li><p><strong>Inefficient Code Paths:</strong> Sometimes latency hides in the application&#8217;s code. Overly complex code, unnecessary calculations, and complicated logic can introduce small delays that add up.</p></li><li><p><strong>Network Congestion:</strong> Heavy network traffic, limited bandwidth, and busy intermediaries between the user and your server can slow requests. Employing techniques like load balancing across different network paths, using faster protocols (like HTTP/2 or HTTP/3), and minimizing payload sizes can help reduce the impact of congestion.</p></li></ul><h1><strong>How to Reduce Latency</strong></h1><h2>1. Caching</h2><p>Caching helps you serve common results fast. Instead of fetching data from a slower backend (like a database or remote server) every time, the system can quickly return results from a cache.</p><p>This reduces trips to the backend services and lowers user wait times.</p><h4>1.1 Client-side Caching</h4><p>Client-side caching stores data on the user's device, like in their browser. This cuts down on server requests and speeds up response times.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png\" width=\"529\" height=\"352.6666666666667\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:394,&quot;width&quot;:591,&quot;resizeWidth&quot;:529,&quot;bytes&quot;:25224,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><p>You can cache static assets like images, JavaScript, CSS, or even API responses that rarely change.</p><ul><li><p><strong>Browser Cache:</strong> When you specify proper HTTP caching headers (e.g., <code>Cache-Control</code>, <code>ETag</code>, <code>Expires</code>), the browser stores assets locally. On subsequent requests, it can quickly load these from the local cache rather than fetching them again from the server.</p></li><li><p><strong>Local Storage / IndexedDB:</strong> Modern browsers offer persistent storage options. For example, you could store user preferences, profile data or application settings in <code>localStorage</code> or <code>IndexedDB</code> so that the next time the user visits, the application can load instantly without waiting for the server.</p></li></ul><h4>1.2 Server-side Caching</h4><p>Server-side caching stores frequently requested data on the server, reducing the load on your database and speeding up responses. By doing so, you can reduce the expensive back-and-forth communication with databases or other services.</p><p>For example, you can save often-used data in Redis instead of asking the database each time.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png\" width=\"687\" height=\"320.98907766990294\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:385,&quot;width&quot;:824,&quot;resizeWidth&quot;:687,&quot;bytes&quot;:41298,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2af5c89e-752e-4b33-8e4a-7c9ac516c379_824x385.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><ul><li><p><strong>In-memory Caches:</strong> In-memory caches keep data in a server&#8217;s main memory (RAM) for extremely fast access. Tools like Redis or Memcached store frequently requested data in RAM. An application server can check the cache first before hitting the database. This avoids heavy database queries and speeds up responses.</p></li><li><p><strong>Application-level Caches:</strong> Application level caches run directly in your application&#8217;s memory, storing frequently used data&#8212;like computed values, or common database query results&#8212;right where requests are processed. Most modern frameworks and languages provide built-in support or libraries for caching at the application level (e.g., <a href=\"https://github.com/ben-manes/caffeine\">caffeine</a> in java).</p></li></ul><h4><strong>1.3 Content Delivery Networks (CDNs)</strong></h4><p>A CDN is a geographically distributed network of servers that deliver static content (like images, scripts, and stylesheets) from the closest possible location to the user.</p><p>By providing these files from the server closest to each user, CDNs help pages load faster and improve the overall experience.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png\" width=\"552\" height=\"349.6779661016949\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ab72588b-7587-4685-a128-44215af6accf_472x299.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:299,&quot;width&quot;:472,&quot;resizeWidth&quot;:552,&quot;bytes&quot;:116538,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab72588b-7587-4685-a128-44215af6accf_472x299.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><ul><li><p><strong>Reduced Latency by Proximity:</strong> Users access content from a nearby server, cutting down travel time.</p></li><li><p><strong>Offloading Traffic:</strong> With the CDN handling most static content, your main server stays less congested.</p></li><li><p><strong>Automatic Failover:</strong> If one CDN server fails, others seamlessly take over, ensuring high availability.</p></li></ul><blockquote><p><strong>Example:</strong> If your users are split between the U.S. and India, a CDN like Cloudflare or Akamai serves an image to a user in Mumbai from a local server, rather than from one in the U.S. This shorter distance means quicker load times.</p></blockquote><h2>2. Database Optimization</h2><p>The database often represents a major bottleneck. By optimizing it, you can serve data faster and reduce latency across the system.</p><h4>2.1 Optimize Queries</h4><p>Inefficient SQL queries can significantly impact performance. </p><p>Optimizing your queries by reducing their complexity and ensuring they perform only the necessary operations is crucial. </p><p>Here are some best practices:</p><ul><li><p><strong>Avoid SELECT *:</strong> Fetch only the columns you need. This reduces the amount of data retrieved and improves query efficiency.</p></li><li><p><strong>Limit Joins:</strong> Excessive joins can slow down query execution. Consider precomputing or restructuring data to reduce join complexity.</p></li><li><p><strong>Batching Queries:</strong> Instead of running many small queries, batch them into a single, well-structured query.</p></li></ul><h4>2.2 Use Indexing</h4><p>Indexes act like a book&#8217;s index, allowing the database to find rows faster without scanning entire tables.</p><p>Proper use of indexing can dramatically boost query performance.</p><ul><li><p><strong>Use Appropriate Indexes:</strong> Ensure that primary keys are always indexed. Additionally, create indexes on columns frequently used in <code>WHERE</code> clauses, <code>JOIN</code> conditions, or sorting operations to enhance query speed.</p></li><li><p><strong>Avoid Over-Indexing:</strong> While indexes improve read performance, excessive indexing can degrade write operations due to the overhead of maintaining them.</p></li></ul><p>If you want to learn more about indexing, checkout my previous article: </p><div class=\"digest-post-embed\" data-attrs=\"{&quot;nodeId&quot;:&quot;c043489d-3b77-467a-8d8c-c71f6f361a3c&quot;,&quot;caption&quot;:&quot;Consider a large Book of 1000 pages.&quot;,&quot;size&quot;:&quot;sm&quot;,&quot;isEditorNode&quot;:true,&quot;title&quot;:&quot;Database Indexes: A detailed guide&quot;,&quot;publishedBylines&quot;:[{&quot;id&quot;:83602743,&quot;name&quot;:&quot;Ashish Pratap Singh&quot;,&quot;bio&quot;:&quot;Software Engineer | Prev @ Amazon. Write about Coding, System Design, Interviews and Software Engineering. LinkedIn: 180k+, Youtube: 125k+, GitHub: 40k+ stars&quot;,&quot;photo_url&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0a3654fc-7584-4098-a656-7bda89568f83_612x612.jpeg&quot;,&quot;is_guest&quot;:false,&quot;bestseller_tier&quot;:null}],&quot;post_date&quot;:&quot;2024-05-05T13:31:04.214Z&quot;,&quot;cover_image&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe6ae9541-eeed-474f-9de2-2f2810a1ec18_1200x828.png&quot;,&quot;cover_image_alt&quot;:null,&quot;canonical_url&quot;:&quot;https://blog.algomaster.io/p/a-detailed-guide-on-database-indexes&quot;,&quot;section_name&quot;:null,&quot;id&quot;:144088453,&quot;type&quot;:&quot;newsletter&quot;,&quot;reaction_count&quot;:137,&quot;comment_count&quot;:13,&quot;publication_name&quot;:&quot;AlgoMaster Newsletter&quot;,&quot;publication_logo_url&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcbeb41b6-bde8-481d-b2b4-109d10f76616_256x256.png&quot;,&quot;belowTheFold&quot;:true}\"></div><h4>2.3 Sharding and Partitioning</h4><p>As your data grows, a single database server may struggle to handle the increasing load.</p><p>Sharding and partitioning are powerful techniques to distribute data, enhancing scalability and performance.</p><ul><li><p><strong>Sharding:</strong> This involves splitting data horizontally across multiple database servers (e.g., by user ID ranges). Each shard contains only a subset of the data, reducing the load on individual servers and improving query response times.</p></li><li><p><strong>Partitioning:</strong> Partitioning involves dividing large database tables into smaller, more manageable segments. These partitions exist within the same database server but are logically separated. This simplifies query execution and enhances performance.</p></li></ul><blockquote><p><strong>Example:</strong> If you manage a billion records, you could shard user data such that users A-M reside on one shard, and N-Z on another. This setup ensures that queries only search a fraction of the total data, significantly improving efficiency.</p></blockquote><h4>2.4 Denormalization</h4><p>While normalization reduces data duplication, it can lead to complex queries and joins. Denormalization stores duplicate data in ways that optimize read performance.</p><p>While denormalization increases storage usage, it significantly reduces the need for time-consuming joins.</p><p>This approach is particularly beneficial for read-intensive systems, such as analytics dashboards or recommendation engines, where quick data retrieval is critical.</p><blockquote><p><strong>Example:</strong> Instead of joining the <code>user</code> and <code>user_profile</code> tables for every query, you can store frequently accessed profile data (e.g., user name, email, or profile picture URL) directly in the <code>user</code> table. This eliminates the join operation, speeding up lookups and improving overall query performance.</p></blockquote><h2>3. Asynchronous Processing</h2><p>Not every task needs to complete before responding to the user.</p><p>Asynchronous processing moves time-consuming operations out of the critical path, allowing the system to respond to users faster.</p><ul><li><p><strong>Message Queues:</strong> Leverage tools like RabbitMQ or Kafka to handle background tasks. For example, when a user uploads a photo, the system can instantly return a success message and offload image processing to a background worker. This ensures a quick response time without delaying the user.</p></li><li><p><strong>Event-Driven Architecture:</strong> Use events to trigger background services for tasks like report generation or video encoding. These services process the events independently, preventing slow operations from impacting the user experience.</p></li></ul><h2>4. Network Optimization</h2><p>Optimizing the network path reduces the time data travels between user and server. This includes balancing loads, keeping connections alive, and shrinking payload sizes.</p><h4>4.1 Load Balancing</h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png\" width=\"562\" height=\"304.96662546353525\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:439,&quot;width&quot;:809,&quot;resizeWidth&quot;:562,&quot;bytes&quot;:32553,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feef29f8c-af87-4047-b5c4-6dfd282f2433_809x439.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/wbsMNsN\">Multiplayer</a></strong></figcaption></figure></div><p>Load balancers distribute incoming traffic across multiple servers to prevent any single server from becoming a bottleneck. </p><p>With balanced loads, each server responds faster, cutting overall latency.</p><ul><li><p><strong>Load Balancing Algorithms:</strong> Common algorithms include:</p><ul><li><p><strong>Round Robin:</strong> Distributes requests sequentially across servers.</p></li><li><p><strong>Least Connections:</strong> Routes traffic to the server with the fewest active connections.</p></li><li><p><strong>IP Hash:</strong> Directs requests based on the client&#8217;s IP address, ensuring session consistency.</p></li></ul></li><li><p><strong>Health Checks:</strong> Load balancers continuously monitor server health. Unhealthy servers are automatically removed from the pool, ensuring uninterrupted performance for users.</p></li></ul><h4>4.2 Persistent Connections</h4><p>Establishing a new TCP or TLS connection for every request adds significant overhead. </p><p>Persistent connections enable multiple requests to share the same connection, improving efficiency and reducing latency.</p><ul><li><p><strong>HTTP Keep-Alive:</strong> Allows connections to remain open for subsequent requests instead of closing them after a single use. This eliminates the round-trip time required to establish new connections, improving response times.</p></li><li><p><strong>HTTP/2 and HTTP/3:</strong> These advanced protocols further optimize performance by multiplexing multiple requests over a single connection, allowing data to flow more efficiently and reducing latency.</p></li></ul><blockquote><p><strong>Example:</strong> By enabling <code>Connection: keep-alive</code> in your server&#8217;s responses, clients can reuse the same connection for multiple requests, avoiding the repeated overhead of connection setup and cutting down latency caused by repeated handshakes.</p></blockquote><h4>4.3 Prefetching</h4><p>Prefetching involves anticipating what data the user might need next and fetching it ahead of time. When the user navigates, the data is already waiting.</p><ul><li><p><strong>Link Rel Prefetch:</strong> Use the <code>rel=\"prefetch\"</code> attribute in HTML to signal to the browser which resources should be loaded in advance. This is particularly useful for preloading scripts, styles, or images that the user is likely to need next.</p></li><li><p><strong>Predictive APIs:</strong> Leverage user behavior patterns to prefetch data. For example, if users typically request a related resource (e.g., a recommendations page) after viewing a product, prefetch the necessary data silently in the background.</p></li></ul><h4>4.4 Data Compression</h4><p>Large payloads take longer to travel. Compressing data before sending it reduces transfer time and bandwidth usage.</p><ul><li><p><strong>GZIP or Brotli:</strong> Compress server responses using GZIP or Brotli. Modern browsers automatically decompress the data.</p></li><li><p><strong>Minification:</strong> For frontend resources like JavaScript and CSS, remove unnecessary elements such as whitespace, comments, and unused code.</p></li></ul><h1>Conclusion</h1><p>Reducing latency isn&#8217;t about one single technique; it&#8217;s about combining multiple strategies for a compound effect.</p><p>Each optimization plays a critical role:</p><ul><li><p><strong>Caching</strong> delivers faster responses by storing frequently accessed data.</p></li><li><p><strong>Database optimizations</strong> ensure quick and efficient data retrieval.</p></li><li><p><strong>Asynchronous processing</strong> minimizes perceived wait times by handling long-running tasks in the background.</p></li><li><p><strong>Network optimizations</strong> streamline data transfer between the server and the user.</p></li></ul><p>By refining each layer&#8212;from the user&#8217;s browser to your database&#8212;you can build systems that deliver consistently low-latency experiences.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/latency-and-how-to-reduce-it?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/latency-and-how-to-reduce-it?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1be7aefa-a98f-4747-8e3b-43857ca7a32a_591x394.png","enclosureMime":""},{"title":"My favourite colour is Chuck Norris red","url":"https://htmhell.dev/adventcalendar/2024/20/","date":1734669349,"author":"OuterVale","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://htmhell.dev/adventcalendar/2024/20/\">https://htmhell.dev/adventcalendar/2024/20/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42468318\">https://news.ycombinator.com/item?id=42468318</a></p>\n<p>Points: 509</p>\n<p># Comments: 99</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Gentle Introduction to Graph Neural Networks (2021)","url":"https://distill.pub/2021/gnn-intro/","date":1734667842,"author":"misonic","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://distill.pub/2021/gnn-intro/\">https://distill.pub/2021/gnn-intro/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42468214\">https://news.ycombinator.com/item?id=42468214</a></p>\n<p>Points: 348</p>\n<p># Comments: 31</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Gribstream.com – Historical Weather Forecast API","url":"https://gribstream.com/","date":1734658062,"author":"ElPeque","unread":true,"desc":"","content":"\n<p>Hello! I'd like share about my sideproject <a href=\"https://gribstream.com\" rel=\"nofollow\">https://gribstream.com</a><p>It is an API to extract weather forecasting data from the National Blend of Models (NBM) <a href=\"https://vlab.noaa.gov/web/mdl/nbm\" rel=\"nofollow\">https://vlab.noaa.gov/web/mdl/nbm</a> and the Global Forecast System (GFS) <a href=\"https://www.ncei.noaa.gov/products/weather-climate-models/global-forecast\" rel=\"nofollow\">https://www.ncei.noaa.gov/products/weather-climate-models/gl...</a> . The data is freely available from AWS S3 in grib2 format which can be great but also really hard (and resource intensive) to work with, especially if you want to extract timeseries over long periods of time based on a few coordinates. Being able to query and extract only what you want out of terabytes of data in just an http request is really nice.<p>What is cool about this dataset is that it has hourly data with full forecast history so you can use the dataset to train and forecast other parameters and have proper backtesting because you can see the weather \"as of\" points in time in the past. It has a free tier so you can play with it. There is a long list of upcoming features I intend to implement and I would very much appreciate both feedback on what is currently available and on what features you would be most interested in seeing. Like... I'm not sure if it would be better to support a few other datasets or focus on supporting aggregations.<p>Features include:<p>- A free tier to help you get started\n- Full history of weather forecasts\n- Extract timeseries for thousands of coordinates, for months at a time, at hourly resolution in a single http request taking only seconds.\n- Supports as-of/time-travel, indispensable for proper backtesting of derivative models\n- Automatic gap filling of any missing data with the next best (most recent) forecast.<p>Please try it out and let me know what you think :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42467449\">https://news.ycombinator.com/item?id=42467449</a></p>\n<p>Points: 67</p>\n<p># Comments: 33</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The era of open voice assistants","url":"https://www.home-assistant.io/blog/2024/12/19/voice-preview-edition-the-era-of-open-voice/","date":1734654597,"author":"_Microft","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.home-assistant.io/blog/2024/12/19/voice-preview-edition-the-era-of-open-voice/\">https://www.home-assistant.io/blog/2024/12/19/voice-preview-edition-the-era-of-open-voice/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42467194\">https://news.ycombinator.com/item?id=42467194</a></p>\n<p>Points: 850</p>\n<p># Comments: 266</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Go Developer Survey 2024 H2 Results","url":"https://go.dev/blog/survey2024-h2-results","date":1734652800,"author":"Alice Merrick","unread":true,"desc":"","content":"\n<div id=\"blog\"><div id=\"content\">\n  <div id=\"content\">\n\n    <div class=\"Article\" data-slug=\"/blog/survey2024-h2-results\">\n    \n    <h1 class=\"small\"><a href=\"/blog/\">The Go Blog</a></h1>\n    \n\n    <h1>Go Developer Survey 2024 H2 Results</h1>\n      \n      <p class=\"author\">\n      Alice Merrick<br>\n      20 December 2024\n      </p>\n      \n      <style type=\"text/css\" scoped>\n  .chart {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n    width: 800px;\n  }\n  blockquote p {\n    color: var(--color-text-subtle) !important;\n  }\n\n  .quote_source {\n    font-style: italic;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .chart {\n      border-radius: 8px;\n    }\n  }\n</style>\n<h2 id=\"background\">Background</h2>\n<p>Go was designed with a focus on developer experience, and we deeply value the\nfeedback we receive through proposals, issues, and community interactions.\nHowever, these channels often represent the voices of our most experienced or\nengaged users, a small subset of the broader Go community. To ensure we&rsquo;re\nserving developers of all skill levels, including those who may not have strong\nopinions on language design, we conduct this survey once or twice a year to\ngather systematic feedback and quantitative evidence. This inclusive approach\nallows us to hear from a wider range of Go developers, providing valuable\ninsights into how Go is used across different contexts and experience levels.\nYour participation is critical in informing our decisions about language changes\nand resource allocation, ultimately shaping the future of Go. Thank you to\neveryone who contributed, and we strongly encourage your continued participation\nin future surveys. Your experience matters to us.</p>\n<p>This post shares the results of our most recent Go Developer Survey, conducted\nfrom September 9–23, 2024. We recruited participants from the Go blog and\nthrough randomized prompts in the <a href=\"https://code.visualstudio.com/\" rel=\"noreferrer\" target=\"_blank\">VS Code</a> Go\nplug-in and <a href=\"https://www.jetbrains.com/go/\" rel=\"noreferrer\" target=\"_blank\">GoLand IDE</a>, allowing us to recruit\na more representative sample of Go developers. We received a total of 4,156\nresponses. A huge thank you to all those who contributed to making this\npossible.</p>\n<p>Along with capturing sentiments and challenges around using Go and Go tooling,\nour primary focus areas for this survey were on uncovering sources of toil,\nchallenges to performing best practices, and how developers are using AI\nassistance.</p>\n<h2 id=\"highlights\">Highlights</h2>\n<ul>\n<li><strong>Developer sentiment towards Go remains extremely positive</strong>, with 93% of\nsurvey respondents saying they felt satisfied while working with Go during the\nprior year.</li>\n<li><strong>Ease of deployment and an easy to use API/SDK</strong> were respondents’ favorite\nthings about using Go on the top three cloud providers. First-class Go support\nis critical to keeping up with developer expectations.</li>\n<li>70% of respondents were using AI assistants when developing with Go. The most\ncommon uses were <strong>LLM-based code completion</strong>, writing tests, generating Go\ncode from natural language descriptions, and brainstorming. There was a\nsignificant discrepancy between what respondents said they wanted to use AI\nfor last year, and what they currently use AI for.</li>\n<li>The biggest challenge for teams using Go was <strong>maintaining consistent coding\nstandards</strong> across their codebase. This was often due to team members having\ndifferent levels of Go experience and coming from different programming\nbackgrounds, leading to inconsistencies in coding style and adoption of\nnon-idiomatic patterns.</li>\n</ul>\n<h2 id=\"contents\">Contents</h2>\n<ul>\n<li><a href=\"#sentiment\">Overall satisfaction</a></li>\n<li><a href=\"#devenv\">Development environments and tools</a></li>\n<li><a href=\"#cloud\">Go in the clouds</a></li>\n<li><a href=\"#ai-assistance\">AI assistance</a></li>\n<li><a href=\"#team-challenges\">Challenges for teams using Go</a></li>\n<li><a href=\"#simd\">Single Instruction, Multiple Data (SIMD)</a></li>\n<li><a href=\"#demographics\">Demographics</a></li>\n<li><a href=\"#firmographics\">Firmographics</a></li>\n<li><a href=\"#methodology\">Methodology</a></li>\n<li><a href=\"#how-to-read-these-results\">How to read these results</a></li>\n<li><a href=\"#closing\">Closing</a></li>\n</ul>\n<h3 id=\"sentiment\">Overall satisfaction</h3>\n<p>Overall satisfaction remains high in the survey with 93% of respondents saying\nthey were somewhat or very satisfied with Go during the last year. Although the\nexact percentages fluctuate slightly from cycle to cycle, we do not see any\nstatistically significant differences from our <a href=\"/blog/survey2023-h2-results\">2023\nH2</a> or <a href=\"/blog/survey2024-h1-results\">2024 H1\n</a>Surveys when the satisfaction rate\nwas 90% and 93%, respectively.</p>\n<p><img src=\"survey2024h2/csat.svg\" alt=\"Chart of developer satisfaction with Go\"\nclass=\"chart\" /></p>\n<p>The open comments we received on the survey continue to highlight what\ndevelopers like most about using Go, for example, its simplicity, the Go\ntoolchain, and its promise of backwards compatibility:</p>\n<p><em>“I am a programming languages enjoyer (C-like) and I always come back to Go for\nits simplicity, fast compilation and robust toolchain. Keep it up!”</em></p>\n<p><em>“Thank you for creating Go! It is my favorite language, because it is pretty\nminimal, the development cycle has rapid build-test cycles, and when using a\nrandom open source project written in Go, there is a good chance that it will\nwork, even 10 years after. I love the 1.0 compatibility guarantee.”</em></p>\n<h3 id=\"devenv\">Development environments and tools</h3>\n<h4 id=\"developer-os\">Developer OS</h4>\n<p>Consistent with previous years, most survey respondents develop with Go on Linux\n(61%) and macOS (59%) systems. Historically, the proportion of Linux and macOS\nusers has been very close, and we didn’t see any significant changes from the\nlast survey. The randomly sampled groups from JetBrains and VS Code were more\nlikely (33% and 36%, respectively) to develop on Windows than the self-selected\ngroup (16%).</p>\n<p><img src=\"survey2024h2/os_dev.svg\" alt=\"Chart of operating systems respondents\nuse when developing Go software\" class=\"chart\" /> <img\nsrc=\"survey2024h2/os_dev_src.svg\" alt=\"Chart of operating systems respondents\nuse when developing Go software, split by difference sample sources\"\nclass=\"chart\" /></p>\n<h4 id=\"deployment-environments\">Deployment environments</h4>\n<p>Given the prevalence of Go for cloud development and containerized workloads,\nit’s no surprise that Go developers primarily deploy to Linux environments\n(96%).</p>\n<p><img src=\"survey2024h2/os_deploy.svg\" alt=\"Chart of operating systems\nrespondents deploy to when developing Go software\" class=\"chart\" /></p>\n<p>We included several questions to understand what architectures respondents are\ndeploying to when deploying to Linux, Windows or WebAssembly. The x86-64 /\nAMD64 architecture was by far the most popular choice for those deploying to\nboth Linux (92%) and Windows (97%). ARM64 was second at 49% for Linux and 21%\nfor Windows.</p>\n<p><img src=\"survey2024h2/arch_linux.svg\" alt=\"Linux architecture usage\"\nclass=\"chart\" /> <img src=\"survey2024h2/arch_win.svg\" alt=\"Windows architecture\nusage\" class=\"chart\" /></p>\n<p>Not many respondents deployed to Web Assembly (only about 4% of overall\nrespondents), but 73% that do said they deploy to JS and 48% to WASI Preview 1.</p>\n<p><img src=\"survey2024h2/arch_wa.svg\" alt=\"Web assembly architecture usage\"\nclass=\"chart\" /></p>\n<h4 id=\"editor-awareness-and-preferences\">Editor awareness and preferences</h4>\n<p>We introduced a new question on this survey to assess awareness and usage of\npopular editors for Go. When interpreting these results, keep in mind that 34%\nof respondents came to the survey from VS Code and 9% of respondents came from\nGoLand, so it is more likely for them to use those editors regularly.</p>\n<p>VS Code was the most widely used editor, with 66% of respondents using it\nregularly, and GoLand was the second most used at 35%. Almost all respondents\nhad heard of both VS Code and GoLand, but respondents were much more likely to\nhave at least tried VS Code. Interestingly, 33% of respondents said they\nregularly use 2 or more editors. They may use different editors for different\ntasks or environments, such as using Emacs or Vim via SSH, where IDEs aren’t\navailable.</p>\n<p><img src=\"survey2024h2/editor_aware.svg\" alt=\"Level of familiarity with each\neditor\" class=\"chart\" /></p>\n<p>We also asked a question about editor preference, the same as we have asked on\nprevious surveys. Because our randomly sampled populations were recruited from\nwithin VS Code or GoLand, they are strongly biased towards preferring those\neditors. To avoid skewing the results, we show the data for the most preferred\neditor here from the self-selected group only. 38% preferred VS Code and 35%\npreferred GoLand. This is a notable difference from the last survey in H1, when\n43% preferred VS Code and 33% preferred GoLand. A possible explanation could be\nin how respondents were recruited this year. This year the VS Code notification\nbegan inviting developers to take the survey before the Go blog entry was\nposted, so a larger proportion of respondents came from the VS Code prompt this\nyear who might have otherwise come from the blog post. Because we only show the\nself-selected respondents in this chart, data from respondents from the VS Code\nprompt data are not represented here. Another contributing factor could be the\nslight increase in those who prefer &ldquo;Other&rdquo; (4%). The write-in responses suggest\nthere is increased interest in editors like <a href=\"https://zed.dev/\" rel=\"noreferrer\" target=\"_blank\">Zed</a>, which made\nup 43% of the write-in responses.</p>\n<p><img src=\"survey2024h2/editor.svg\" alt=\"Code editors respondents most prefer to\nuse with Go\" class=\"chart\" /></p>\n<h4 id=\"code-analysis-tools\">Code analysis tools</h4>\n<p>The most popular code analysis tool was <code>gopls</code>, which was knowingly used by 65%\nof respondents. Because <code>gopls</code> is used under-the-hood by default in VS Code,\nthis is likely an undercount. Following closely behind, <code>golangci-lint</code> was used\nby 57% of respondents, and <code>staticcheck</code> was used by 34% of respondents. A much\nsmaller proportion used custom or other tools, which suggests that most\nrespondents prefer common established tools over custom solutions. Only 10% of\nrespondents indicated they don&rsquo;t use any code analysis tools.</p>\n<p><img src=\"survey2024h2/code_analysis.svg\" alt=\"Code analysis tools respondents\nuse with Go\" class=\"chart\" /></p>\n<h4 id=\"cloud\">Go in the Clouds</h4>\n<p>Go is a popular language for modern cloud-based development, so we typically\ninclude survey questions to help us understand which cloud platforms and\nservices Go developers are using. In this cycle, we sought to learn about\npreferences and experiences of Go developers across cloud providers, with a\nparticular focus on the largest cloud providers: Amazon Web Services (AWS),\nMicrosoft Azure, and Google Cloud. We also included an additional option for\n“Bare Metal Servers” for those who deploy to servers without virtualization.</p>\n<p>Similar to previous years, almost half of respondents (50%) deploy Go programs\nto Amazon Web Services. AWS is followed by self-owned or company-owned servers\n(37%), and Google Cloud (30%). Respondents who work at large organizations are a\nlittle more likely to deploy to self-owned or company-owned servers (48%) than\nthose who work at small-to-medium organizations (34%). They‘re also a little\nmore likely to deploy to Microsoft Azure (25%) than small-to-medium\norganizations (12%).</p>\n<p><img src=\"survey2024h2/cloud_platform.svg\" alt=\"Cloud providers where\nrespondents deploy Go software\" class=\"chart\" /></p>\n<p>The most commonly used cloud services were AWS Elastic Kubernetes Service (41%),\nAWS EC2 (39%), and Google Cloud GKE (29%). Although we’ve seen Kubernetes usage\nincrease over time, this is the first time we’ve seen EKS become more widely\nused than EC2. Overall, Kubernetes offerings were the most popular services for\nAWS, Google Cloud, and Azure, followed by VMs and then Serverless offerings.\nGo&rsquo;s strengths in containerization and microservices development naturally align\nwith the rising popularity of Kubernetes, as it provides an efficient and\nscalable platform for deploying and managing these types of applications.</p>\n<p><img src=\"survey2024h2/cloud_service.svg\" alt=\"Cloud platforms where respondents\ndeploy Go software\" class=\"chart\" /></p>\n<p>We asked a followup question to respondents who deployed Go code to the top\nthree cloud providers, Amazon Web Services, Google Cloud, and Microsoft Azure on\nwhat they like most about deploying Go code to each cloud. The most popular\nresponse across different providers was actually Go&rsquo;s performance and language\nfeatures rather than something about the cloud provider.</p>\n<p>Other common reasons were:</p>\n<ul>\n<li>Familiarity with the given cloud provider compared to other clouds</li>\n<li>Ease of deployment of Go applications on the given cloud provider</li>\n<li>The cloud provider&rsquo;s API/SDK for Go is easy to use</li>\n<li>The API/SDK is well documented</li>\n</ul>\n<p>Other than familiarity, the top favorite things highlight the importance of\nhaving first class support for Go to keep up with developer expectations.</p>\n<p>It was also fairly common for respondents to say they don&rsquo;t have a favorite\nthing about their cloud provider. From a previous version of the survey that\ninvolved write-in responses, this often meant that they did not interact\ndirectly with the Cloud. In particular, respondents who use Microsoft Azure were\nmuch more likely to say that “Nothing” was their favorite thing (51%) compared\nto AWS (27%) or Google Cloud (30%).</p>\n<p><img src=\"survey2024h2/cloud_fave_all.svg\" alt= \"What respondents liked most\nabout each of the top 3 Clouds\" class=\"chart\" /></p>\n<h3 id=\"ai-assistance\">AI assistance</h3>\n<p>The Go team hypothesizes that AI assistance has the potential to alleviate\ndevelopers from tedious and repetitive tasks, allowing them to focus on more\ncreative and fulfilling aspects of their work. To gain insights into areas where\nAI assistance could be most beneficial, we included a section in our survey to\nidentify common developer toil.</p>\n<p>The majority of respondents (70%) are using AI assistants when developing with\nGo. The most common usage of AI assistants was in LLM-based code completion\n(35%). Other common responses were writing tests (29%), generating Go code from\na natural language description (27%), and brainstorming ideas (25%). There was\nalso a sizable minority (30%) of respondents who had not used any LLM for\nassistance in the last month.</p>\n<p><img src=\"survey2024h2/ai_assist_tasks.svg\" alt= \"Most common tasks used with AI\nassistance\" class=\"chart\" /></p>\n<p>Some of these results stood out when compared to findings from our 2023 H2\nsurvey, where we asked respondents for the top 5 use cases they would like to\nsee AI/ML support Go developers. Although a couple new responses were introduced\nin the current survey, we can still do a rough comparison between what\nrespondents said they wanted AI support for, and what their actual usage was\nlike. In that previous survey, writing tests was the most desired use case\n(49%). In our latest 2024 H2 survey, about 29% of respondents had used AI\nassistants for this in the last month. This suggests that current offerings are\nnot meeting developer needs for writing tests. Similarly, in 2023, 47%\nrespondents said they would like suggestions for best practices while coding,\nwhile only 14% a year later said they are using AI assistance for this use case.\n46% said they wanted help catching common mistakes while coding, and only 13%\nsaid they were using AI assistance for this. This could indicate that current AI\nassistants are not well-equipped for these kinds of tasks, or they&rsquo;re not well\nintegrated into developer workflows or tooling.</p>\n<p>It was also surprising to see such high usage of AI for generating Go code from\nnatural language and brainstorming, since the previous survey didn&rsquo;t indicate\nthese as highly desired use cases. There could be a number of explanations for\nthese differences. While previous respondents might not have explicitly <em>wanted</em>\nAI for code generation or brainstorming initially, they might be gravitating\ntowards these uses because they align with the current strengths of generative\nAI—natural language processing and creative text generation. We should also keep\nin mind that people<a href=\"https://www.nngroup.com/articles/first-rule-of-usability-dont-listen-to-users/\" rel=\"noreferrer\" target=\"_blank\"> are not necessarily the best predictors of their own\nbehavior</a>.</p>\n<p><img src=\"survey2024h2/ai_assist_tasks_yoy.svg\" alt= \"Tasks used AI assistance\nin 2024 compared to those wanted in 2023\" class=\"chart\" /></p>\n<p>We also saw some notable differences in how different groups responded to this\nquestion. Respondents at small to medium sized organizations were a little more\nlikely to have used LLMs (75%) compared to those at large organizations (66%).\nThere could be a number of reasons why, for example, larger organizations may\nhave stricter security and compliance requirements and concerns about the\nsecurity of LLM coding assistants, the potential for data leakage, or compliance\nwith industry-specific regulations. They also may have already invested in\nother developer tools and practices that already provide similar benefits to\ndeveloper productivity.</p>\n<p><img src=\"survey2024h2/ai_assist_tasks_org.svg\" alt= \"Most common tasks used\nwith AI assistance by org size\" class=\"chart\" /></p>\n<p>Go developers with less than 2 years of experience were more likely to use AI\nassistants (75%) compared to Go developers with 5+ years of experience (67%).\nLess experienced Go developers were also more likely to use them for more tasks,\non average 3.50. Although all experience levels tended to use LLM-based code\ncompletion, less experienced Go developers were more likely to use Go for more\ntasks related to learning and debugging, such as explaining what a piece of Go\ncode does, resolving compiler errors and debugging failures in their Go code.\nThis suggests that AI assistants are currently providing the greatest utility to\nthose who are less familiar with Go. We don&rsquo;t know how AI assistants affect\nlearning or getting started on a new Go project, something we want to\ninvestigate in the future. However, all experience levels had similar rates of\nsatisfaction with their AI assistants, around 73%, so new Go developers are not\nmore satisfied with AI assistants, despite using them more often.</p>\n<p><img src=\"survey2024h2/ai_assist_tasks_exp.svg\" alt= \"Most common tasks used\nwith AI assistance by experience with Go\" class=\"chart\" /></p>\n<p>To respondents who reported using AI assistance for at least one task related to\nwriting Go code, we asked some follow up questions to learn more about their AI\nassistant usage. The most commonly used AI assistants were ChatGPT (68%) and\nGitHub Copilot (50%). When asked which AI assistant they used <em>most</em> in the last\nmonth, ChatGPT and Copilot were about even at 36% each, so although more\nrespondents used ChatGPT, it wasn’t necessarily their primary assistant.\nParticipants were similarly satisfied with both tools (73% satisfied with\nChatGPT, vs. 78% with GitHub CoPilot). The highest satisfaction rate for any AI\nassistant was Anthropic Claude, at 87%.</p>\n<p><img src=\"survey2024h2/ai_assistants_withother.svg\" alt= \"Most common AI\nassistants used\" class=\"chart\" /> <img src=\"survey2024h2/ai_primary.svg\" alt=\n\"Most common primary AI assistants used\" class=\"chart\" /></p>\n<h3 id=\"team-challenges\">Challenges for teams using Go</h3>\n<p>In this section of the survey, we wanted to understand which best practices or\ntools should be better integrated into developer workflows. Our approach was to\nidentify common problems for teams using Go. We then asked respondents which\nchallenges would bring them the most benefit if they were “magically” solved for\nthem. (This was so that respondents would not focus on particular solutions.)\nCommon problems that would provide the most benefit if they were solved would be\nconsidered candidates for improvement.</p>\n<p>The most commonly reported challenges for teams were maintaining consistent coding\nstandards across our Go codebase (58%), identifying performance issues in a\nrunning Go program (58%) and identifying resource usage inefficiencies in a\nrunning Go program (57%).</p>\n<p><img src=\"survey2024h2/dev_challenges.svg\" alt= \"Most common challenges for\nteams\" class=\"chart\" /></p>\n<p>21% of respondents said their team would benefit most from maintaining\nconsistent coding standards across their Go codebase. This was the most common\nresponse, making it a good candidate to address. In a follow-up question, we got\nmore details as to why specifically this was so challenging.</p>\n<p><img src=\"survey2024h2/dev_challenges_most_benefit.svg\" alt= \"Most benefit to\nsolve\" class=\"chart\" /></p>\n<p>According to the write-in responses, many teams face challenges maintaining\nconsistent coding standards because their members have varying levels of\nexperience with Go and come from different programming backgrounds. This led to\ninconsistencies in coding style and the adoption of non-idiomatic patterns.</p>\n<p><em>“There&rsquo;s lots of polyglot engineers where I work. So the Go written is not\nconsistent. I do consider myself a Gopher and spend time trying to convince my\nteammates what is idiomatic in Go”—Go developer with 2–4 years of experience.</em></p>\n<p><em>“Most of the team members are learning Go from scratch. Coming from the\ndynamically typed languages, it takes them a while to get used to the new\nlanguage. They seem to struggle maintaining the code consistency following the\nGo guidelines.”—Go developer with 2–4 years of experience.</em></p>\n<p>This echoes some feedback we’ve heard before about teammates who write &ldquo;Gava&rdquo; or\n&ldquo;Guby&rdquo; due to their previous language experiences. Although static analysis was\na class of tool we had in mind to address this issue when we came up with this\nquestion, we are currently exploring different ways we might address this.</p>\n<h3 id=\"simd\">Single Instruction, Multiple Data (SIMD)</h3>\n<p>SIMD, or Single Instruction, Multiple Data, is a type of parallel processing\nthat allows a single CPU instruction to operate on multiple data points\nsimultaneously. This facilitates tasks involving large datasets and repetitive\noperations, and is often used to optimize performance in fields like game\ndevelopment, data processing, and scientific computing. In this section of the\nsurvey we wanted to assess respondents&rsquo; needs for native SIMD support in Go.</p>\n<p>The majority of respondents (89%) say that work on projects where performance\noptimizations are crucial at least some of the time. 40% said they work on such\nprojects at least half the time. This held true across different organization\nsizes and experience levels, suggesting that performance is an important issue\nfor most developers.</p>\n<p><img src=\"survey2024h2/perf_freq.svg\" alt= \"How often respondents work on\nperformance critical software\" class=\"chart\" /></p>\n<p>About half of respondents (54%), said they are at least a little familiar with\nthe concept of SIMD. Working with SIMD often requires a deeper understanding of\ncomputer architecture and low-level programming concepts, so unsurprisingly we\nfind that less experienced developers were less likely to be familiar with SIMD.\nRespondents with more experience and who worked on performance-crucial\napplications at least half the time were the most likely to be familiar with\nSIMD.</p>\n<p><img src=\"survey2024h2/simd_fam.svg\" alt= \"Familiarity with SIMD\" class=\"chart\"\n/></p>\n<p>For those who were at least slightly familiar with SIMD, we asked some follow\n-up questions to understand how respondents were affected by the absence of\nnative SIMD support in Go. Over a third, about 37%, said they had been impacted.\n17% of respondents said they had been limited in the performance they could\nachieve in their projects, 15% said they had to use another language instead of\nGo to achieve their goals, and 13% said they had to use non-Go libraries when\nthey would have preferred to use Go libraries. Interestingly, respondents who\nwere negatively impacted by the absence of native SIMD support were a little\nmore likely to use Go for data processing and AI/ML. This suggests that adding\nSIMD support could make Go a better option for these domains.</p>\n<p><img src=\"survey2024h2/simd_impact.svg\" alt= \"Impacts of lack of native Go support\nfor SIMD\" class=\"chart\" /> <img src=\"survey2024h2/what_simd_impact.svg\" alt=\n\"What impacted respondents build with Go\" class=\"chart\" /></p>\n<h3 id=\"demographics\">Demographics</h3>\n<p>We ask similar demographic questions during each cycle of this survey so we can\nunderstand how comparable the year-over-year results may be. For example, if we\nsaw changes in who responded to the survey in terms of Go experience, it’d be\nvery likely that other differences in results from prior cycles were due to this\ndemographic shift. We also use these questions to provide comparisons between\ngroups, such as satisfaction according to how long respondents have been using\nGo.</p>\n<p>We didn’t see any significant changes in levels of experience among respondents\nduring this cycle.</p>\n<p><img src=\"survey2024h2/go_exp.svg\" alt= \"Experience levels of respondents\"\nclass=\"chart\" /></p>\n<p>There are differences in the demographics of respondents according to whether\nthey came from The Go Blog, the VS Code extension, or GoLand. The population\nwho responded to survey notifications in VS Code skews toward less experience\nwith Go; we suspect this a reflection of VS Code’s popularity with new Go\ndevelopers, who may not be ready to invest in an IDE license while they’re still\nlearning. With respect to years of Go experience, the respondents randomly\nselected from GoLand are more similar to our self-selected population who found\nthe survey through the Go Blog. Seeing consistencies between samples allows us\nto more confidently generalize findings to the rest of the community.</p>\n<p><img src=\"survey2024h2/go_exp_src.svg\" alt= \"Experience with Go by survey\nsource\" class=\"chart\" /></p>\n<p>In addition to years of experience with Go, we also measured years of\nprofessional coding experience. Our audience tends to be a pretty experienced\nbunch, with 26% of respondents having 16 or more years of professional coding\nexperience.</p>\n<p><img src=\"survey2024h2/dev_exp.svg\" alt= \"Overall levels of professional\ndeveloper experience\" class=\"chart\" /></p>\n<p>The self-selected group was even more experienced than the randomly selected\ngroups, with 29% having 16 or more years of professional experience. This\nsuggests that our self-selected group is generally more experienced than our\nrandomly selected groups and can help explain some of the differences we see in\nthis group.</p>\n<p><img src=\"survey2024h2/dev_exp_src.svg\" alt= \"Levels of professional developer\nexperience by survey source\" class=\"chart\" /></p>\n<p>We found that 81% of respondents were fully employed. When we look at our\nindividual samples, we see a small but significant difference within our\nrespondents from VS Code, who are slightly more likely to be students. This\nmakes sense given that VS Code is free.</p>\n<img src=\"survey2024h2/employment.svg\" alt= \"Employment status\" class=\"chart\" />\n<img src=\"survey2024h2/employment_src.svg\" alt= \"Employment status by survey\nsource\" class=\"chart\" />\n<p>Similar to previous years, the most common use cases for Go were API/RPC\nservices (75%) and command line tools (62%). More experienced Go developers\nreported building a wider variety of applications in Go. This trend was\nconsistent across every category of app or service. We did not find any notable\ndifferences in what respondents are building based on their organization size.\nRespondents from the random VS Code and GoLand samples did not display\nsignificant differences either.</p>\n<p><img src=\"survey2024h2/what.svg\" alt= \"What respondents build with Go\"\nclass=\"chart\" /></p>\n<h3 id=\"firmographics\">Firmographics</h3>\n<p>We heard from respondents at a variety of different organizations. About 29%\nworked at large organizations with 1,001 or more employees, 25% were from\nmidsize organizations of 101–1,000 employees, and 43% worked at smaller\norganizations with fewer than 100 employees. As in previous years, the most\ncommon industry people work in was technology (43%) while the second most common\nwas financial services (13%).</p>\n<p><img src=\"survey2024h2/org_size.svg\" alt= \"Organization sizes where respondents\nwork\" class=\"chart\" /> <img src=\"survey2024h2/industry.svg\" alt= \"Industries\nrespondents work in\" class=\"chart\" /></p>\n<p>As in previous surveys, the most common location for survey respondents was the\nUnited States (19%). This year we saw a significant shift in the proportion of\nrespondents coming from Ukraine, from 1% to 6%, making it the third most common\nlocation for survey respondents. Because we only saw this difference among our\nself-selected respondents, and not in the randomly sampled groups, this suggests\nthat something affected who discovered the survey, rather than a widespread\nincrease in Go adoption across all developers in Ukraine. Perhaps there was\nincreased visibility or awareness of the survey or the Go Blog among developers\nin Ukraine.</p>\n<p><img src=\"survey2024h2/location.svg\" alt= \"Where respondents are located\"\nclass=\"chart\" /></p>\n<h2 id=\"methodology\">Methodology</h2>\n<p>We announce the survey primarily through the Go Blog, where it is often picked\nup on various social channels like Reddit, or Hacker News. We also recruit\nrespondents by using the VS Code Go plugin to randomly select users to whom we show\na prompt asking if they’d like to participate in the survey. With some help from\nour friends at JetBrains, we also have an additional random sample from\nprompting a random subset of GoLand users to take the survey. This gave us two\nsources we used to compare the self-selected respondents from our traditional\nchannels and help identify potential effects of <a href=\"https://en.wikipedia.org/wiki/Self-selection_bias\" rel=\"noreferrer\" target=\"_blank\">self-selection\nbias</a>.</p>\n<p>57% of survey respondents “self-selected” to take the survey, meaning they found\nit on the Go blog or other social Go channels. People who don’t follow these\nchannels are less likely to learn about the survey from them, and in some cases,\nthey respond differently than people who do closely follow them. For example,\nthey might be new to the Go community and not yet aware of the Go blog. About\n43% of respondents were randomly sampled, meaning they responded to the survey\nafter seeing a prompt in VS Code (25%) or GoLand (11%). Over the period of\nSeptember 9–23, 2024, there was roughly a 10% chance users of the VS Code plugin\nwould have seen this prompt. The prompt in GoLand was similarly active between\nSeptember 9–20. By examining how the randomly sampled groups differ from the\nself-selected responses, as well as from each other, we’re able to more\nconfidently generalize findings to the larger community of Go developers.</p>\n<p><img src=\"survey2024h2/source.svg\" alt=\"Chart of different sources of survey\nrespondents\" class=\"chart\" /></p>\n<h4 id=\"how-to-read-these-results\">How to read these results</h4>\n<p>Throughout this report we use charts of survey responses to provide supporting\nevidence for our findings. All of these charts use a similar format. The title\nis the exact question that survey respondents saw. Unless otherwise noted,\nquestions were multiple choice and participants could only select a single\nresponse choice; each chart’s subtitle will tell the reader if the question\nallowed multiple response choices or was an open-ended text box instead of a\nmultiple choice question. For charts of open-ended text responses, a Go team\nmember read and manually categorized all of the responses. Many open-ended\nquestions elicited a wide variety of responses; to keep the chart sizes\nreasonable, we condensed them to a maximum of the top 10-12 themes, with\nadditional themes all grouped under “Other”. The percentage labels shown in\ncharts are rounded to the nearest integer (e.g., 1.4% and 0.8% will both be\ndisplayed as 1%), but the length of each bar and row ordering are based on the\nunrounded values.</p>\n<p>To help readers understand the weight of evidence underlying each finding, we\nincluded error bars showing the 95% <a href=\"https://en.wikipedia.org/wiki/Confidence_interval\" rel=\"noreferrer\" target=\"_blank\">confidence\ninterval</a> for responses;\nnarrower bars indicate increased confidence. Sometimes two or more responses\nhave overlapping error bars, which means the relative order of those responses\nis not statistically meaningful (i.e., the responses are effectively tied). The\nlower right of each chart shows the number of people whose responses are\nincluded in the chart, in the form “n = [number of respondents]”. In cases where\nwe found interesting differences in responses between groups, (e.g., years of\nexperience, organization size, or sample source) we showed a color-coded\nbreakdown of the differences.</p>\n<h3 id=\"closing\">Closing</h3>\n<p>Thanks for reviewing our semi-annual Go Developer Survey! And many thanks to\neveryone who shared their thoughts on Go and everyone who contributed to making\nthis survey happen. It means the world to us and truly helps us improve Go.</p>\n<p>&mdash; Alice (on behalf of the Go team at Google)</p>\n\n    </div>\n\n    \n    <div class=\"Article prevnext\">\n    \n    \n      \n        <p>\n        \n        \n          \n            <b>Previous article: </b><a href=\"/blog/protobuf-opaque\">Go Protobuf: The new Opaque API</a><br>\n          \n        \n        <b><a href=\"/blog/all\">Blog Index</a></b>\n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n      \n    \n    </div>\n    \n\n  </div>\n</div>\n\n<script src=\"/js/play.js\"></script>\n\n","flags":null,"enclosureUrl":"","enclosureMime":""}]}