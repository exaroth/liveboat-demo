{"id":"2Qhhdda6Qnbf8RCfUPd4nB9sSt2WDQfEpF7H3gCnZZ4AsfbGMy3RmrCa6gigGY6TkbrrJn4wmHXXNYcVj1bK","title":"top scoring links : rust","displayTitle":"Reddit - Rust","url":"https://www.reddit.com/r/rust/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/rust/top/?sort=top&t=day&limit=6","items":[{"title":"The Humble For Loop in Rust","url":"https://www.reddit.com/r/rust/comments/1hecds7/the_humble_for_loop_in_rust/","date":1734210022,"author":"/u/kibwen","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kibwen\"> /u/kibwen </a> <br/> <span><a href=\"https://blog.startifact.com/posts/humble-for-loop-rust/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hecds7/the_humble_for_loop_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"SeekStorm - an open-source, sub-millisecond full-text search library & multi-tenancy server","url":"https://www.reddit.com/r/rust/comments/1hed3g5/seekstorm_an_opensource_submillisecond_fulltext/","date":1734211996,"author":"/u/kibwen","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kibwen\"> /u/kibwen </a> <br/> <span><a href=\"https://github.com/SeekStorm/SeekStorm\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hed3g5/seekstorm_an_opensource_submillisecond_fulltext/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"üìÇ mc: Modern File Copying Tool in Rust","url":"https://www.reddit.com/r/rust/comments/1hejzp4/mc_modern_file_copying_tool_in_rust/","date":1734233630,"author":"/u/WeatherZealousideal5","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey everyone! üöÄ I just released <strong>mc</strong>, a fast and user-friendly file copying tool written in Rust. Think of it as a modern alternative to <del>cp</del> but with better UX! Unlike <em>cp</em> it shows progress, verifies integrity, and supports advanced features.</p> <h1>üîë Key Features:</h1> <ul> <li>Copy files or entire folders effortlessly.</li> <li>üîÑ <strong>Progress bar</strong> to keep you updated.</li> <li>üîê <strong>Hash verification</strong> to ensure data integrity.</li> <li>üîó Support for <strong>hard</strong> and <strong>symbolic links</strong>.</li> <li>‚ö° Faster than Finder or Explorer.</li> <li>üõèÔ∏è Keeps your system awake during large transfers.</li> </ul> <h1>Install:</h1> <p>Head over to the <a href=\"https://github.com/thewh1teagle/mc/releases/latest\">Releases</a> page for installation options or explore the <a href=\"https://github.com/thewh1teagle/mc\">source code</a> on GitHub.</p> <p>I‚Äôve focused on creating a great UX, but there‚Äôs always room to grow! I‚Äôm actively working on improvements (check out the <a href=\"https://github.com/thewh1teagle/mc/issues\">issues</a>). Feedback and contributions are welcome! ‚ù§Ô∏è</p> <p>Would love to hear your thoughts! üòä</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WeatherZealousideal5\"> /u/WeatherZealousideal5 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hejzp4/mc_modern_file_copying_tool_in_rust/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hejzp4/mc_modern_file_copying_tool_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How similar is Rust to C++?","url":"https://www.reddit.com/r/rust/comments/1henk91/how_similar_is_rust_to_c/","date":1734247775,"author":"/u/Dramatic_Zebra5107","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Up untill know, I&#39;ve coded mostly in Java and Python. However, I work on mathematical stuff - data science/MILP optimizations/... which needs to be performant. This is taken care of for me by libraries and solvers, but I&#39;d like to learn to write performant code anyway.</p> <p>Thus, I&#39;d like to learn Rust or C++ and I plan implementing algorithms like simplex method, differential equation solvers, etc.</p> <p>From what I read, Rust sounds like it would be more fun than C++, which is important to me. On the other hand, most of the solvers/libraries I use are written in C/C++, so knowing that language could be a huge plus.</p> <p>So my question is - if I learn and use Rust for these personal projects, how hard would it be to switch to C/C++ if such need arises in my work?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Dramatic_Zebra5107\"> /u/Dramatic_Zebra5107 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1henk91/how_similar_is_rust_to_c/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1henk91/how_similar_is_rust_to_c/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Talk to me about macros","url":"https://www.reddit.com/r/rust/comments/1heswfv/talk_to_me_about_macros/","date":1734270446,"author":"/u/barrowburner","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hello Rust community,</p> <p>I&#39;m writing to help clarify and clear up my misconceptions around macros. I am taking my first steps with Rust, and I am experiencing a moderate aversion to the whole concept of macros. Something about them doesn&#39;t smell quite right: they feel like they solve a problem that with a bit of thought could have been solved in another, better way. They feel like a duct-tape solution. However, I don&#39;t really know enough about comptime (Zig: more below) or macros to judge them on their merits and deficiencies. I don&#39;t have enough context or understanding of macros, in any language, to know how to frame my thoughts or questions.</p> <p>My hobby language for the last year or so has been Zig, and while it would be a stretch to say I&#39;m competent with Zig, it is fair to say that I&#39;m comfortable with the language, and I do very much enjoy working with it. Zig is known for having eschewed macros entirely, and for having replaced them with its comptime keyword. <a href=\"https://zig.news/edyu/wtf-is-zig-comptime-and-inline-257b\">Here</a> is a great intro to comptime for those who are curious. This feels well designed: it basically allows you to evaluate Zig code at compile time and negates the requirement for macros entirely. Again, though, this is not much more than a feeling; I don&#39;t have enough experience with them to discuss their merits, and I have no basis for comparison with other solutions.</p> <p>I would like to ask for your opinions, hot takes, etc. regarding macros:</p> <ul> <li><p>What do you like/dislike about macros in Rust?</p></li> <li><p>for those of you with experience in both Rust and Zig: any thoughts on one&#39;s approach vs the other&#39;s?</p></li> <li><p>for those of you with experience in both Rust and C++: any thoughts on how Rust may or may not have improved on the cpp implementation of macros?</p></li> <li><p>if anyone has interesting articles, podcasts, blogs, etc. that discuss macros, I&#39;d love to read through</p></li> </ul> <p>Thanks in advance for taking the time!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/barrowburner\"> /u/barrowburner </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1heswfv/talk_to_me_about_macros/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1heswfv/talk_to_me_about_macros/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Solving Advent of Code at Compile Time with Rust Macros","url":"https://www.reddit.com/r/rust/comments/1heu1ub/solving_advent_of_code_at_compile_time_with_rust/","date":1734274112,"author":"/u/CodeBrad","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CodeBrad\"> /u/CodeBrad </a> <br/> <span><a href=\"https://doublefree.bearblog.dev/solving-advent-of-code-at-compile-time-with-rust-macros/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1heu1ub/solving_advent_of_code_at_compile_time_with_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}